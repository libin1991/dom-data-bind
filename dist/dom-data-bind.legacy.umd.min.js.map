{"version":3,"sources":["webpack://DomDataBind/webpack/universalModuleDefinition","webpack://DomDataBind/webpack/bootstrap","webpack://DomDataBind/./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/jsutils/getGlobal.js","webpack://DomDataBind/(webpack)/buildin/global.js","webpack://DomDataBind/(webpack)/buildin/harmony-module.js","webpack://DomDataBind/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://DomDataBind/./node_modules/@babel/runtime/helpers/esm/construct.js","webpack://DomDataBind/./node_modules/@babel/runtime/helpers/esm/classCallCheck.js","webpack://DomDataBind/./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack://DomDataBind/./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","webpack://DomDataBind/./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack://DomDataBind/./node_modules/@babel/runtime/helpers/esm/inherits.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/jsutils/runtime-aliases.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/jsutils/objectExtend.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/jsutils/WeakMap.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/jsutils/dataStore.js","webpack://DomDataBind/./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack://DomDataBind/./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack://DomDataBind/./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack://DomDataBind/./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack://DomDataBind/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/jsutils/Iterator.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/jsutils/Set.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/jsutils/queueCallback.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/jsutils/Compose.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/jsutils/Map.js","webpack://DomDataBind/./src/utils.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/domutils/isTemplateElement.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/domutils/domFind.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/jsutils/uuid.js","webpack://DomDataBind/./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack://DomDataBind/./node_modules/@babel/runtime/helpers/esm/get.js","webpack://DomDataBind/./node_modules/@babel/runtime/helpers/esm/superPropBase.js","webpack://DomDataBind/./src/directives/NodeHandler.js","webpack://DomDataBind/./src/directives/Directive.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/domutils/domInsertBefore.js","webpack://DomDataBind/./src/bindings/text-binding.js","webpack://DomDataBind/./src/Template.js","webpack://DomDataBind/./src/view.js","webpack://DomDataBind/./src/TemplateInstance.js","webpack://DomDataBind/./src/render.js","webpack://DomDataBind/./src/DomDataBind.js","webpack://DomDataBind/./src/directives/attr-directive.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/domutils/domHasClass.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/domutils/domAddClass.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/domutils/domRemoveClass.js","webpack://DomDataBind/./src/directives/class-directive.js","webpack://DomDataBind/./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack://DomDataBind/./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack://DomDataBind/./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack://DomDataBind/./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack://DomDataBind/./src/directives/each-directive.js","webpack://DomDataBind/./src/directives/html-directive.js","webpack://DomDataBind/./src/directives/if-directive.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/domutils/domAddEventListener.js","webpack://DomDataBind/./src/directives/on-directive.js","webpack://DomDataBind/./src/directives/prop-directive.js","webpack://DomDataBind/./src/directives/show-directive.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/domutils/domSetStyle.js","webpack://DomDataBind/./src/directives/style-directive.js","webpack://DomDataBind/./src/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_typeof2","obj","_babel_runtime_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_0__","iterator","constructor","_typeof","GLOBAL","global","self","Function","g","this","eval","e","originalModule","webpackPolyfill","children","_setPrototypeOf","setPrototypeOf","__proto__","_construct","Parent","args","Class","Reflect","construct","sham","Proxy","Date","toString","isNativeReflectConstruct","a","push","apply","instance","arguments","_classCallCheck","Constructor","TypeError","_assertThisInitialized","ReferenceError","_possibleConstructorReturn","assertThisInitialized","_getPrototypeOf","getPrototypeOf","_inherits","subClass","superClass","writable","configurable","functionBind","functionBindCall","isObject","isString","objectDefineProperty","objectDefineProperties","defineProperties","objectKeys","keys","arr","isArray","Array","arrayForEach","forEach","arrayIndexOf","indexOf","arraySplice","splice","arraySlice","slice","consoleLog","console","log","consoleError","error","SymbolIterator","warn","HTMLElementPrototype","HTMLElement","doc","document","createElement","head","tagName","createTextNode","data","hasAttribute","appendChild","insertBefore","getAttribute","setAttribute","removeAttribute","objectExtend","FakeWeakMap","mergeIntoObj","response","_len","length","mergeObjects","_key","total","deepMerge","shift","WeakMap","counter","now","Math","random","set","entry","undefined","delete","has","dataStore","stash","_toConsumableArray","arr2","arrayWithoutHoles","iter","from","iterableToArray","nonIterableSpread","_defineProperty","FakeIterator","values","idx","next","done","_","nextIdx","Set","FakeSet","add","item","size","clear","entries","cb","thisArg","_this","queue","callbacks","queueCallback","setTimeout","flushQueue","cbList","PRIVATE","COMMON_DESTROY_METHOD_NAME","k","baseMethods","isDestroyed","init","destroy","executeCallbacksNow","destroyCallbacks","callOnDestroyCallback","onDestroy","callback","inst","getInstanceState","getFactory","staticMethods","extend","reduce","newProto","thisObjProto","objKey","isInstanceOf","instanceObj","some","protoKey","construct_construct","getDestroyCallback","instanceState","stateStore","prop","method","Node","Compose","ComposeConstructor","_len2","_key2","getNewConstructor","Map","FakeMap","DOCUMENT","FUNCTION","ELEMENT_PROTOTYPE","Element","VALUE_GETTERS","DOM_DATA_BIND_PROP","UUID","concat","replace","bindCallTo","isPureObject","removeChild","createComment","isTemplate","ele","eleToStringValue","content","logError","createValueGetter","evalCode","trim","fn","getNodeAttrNames","node","attrNames","attributes","domFind","domEle","selector","querySelectorAll","pad","num","substr","globalCount","count","fingerprint","navigator","mimeTypes","userAgent","uuid","generate","timestamp","getTime","nextCounter","_defineProperties","target","props","descriptor","_createClass","protoProps","staticProps","_get","receiver","base","superPropBase","desc","getOwnPropertyDescriptor","NodeHandler","_Compose","directive","directives","_directives","_d","_directive","_n","_node","state","tracker","stopWatchingAll","get_get","render","Directive","handler","isQueued","update","handlerState","newValue","_tokenValueGetter","_attr","nodeType","cleanNode","NodeHandlerConstructor","domInsertBefore","newNode","referenceNode","parentNode","TextBinding","_Directive","tokenText","_tokenText","nodeValue","nodeToRemove","DROPS_NODES_ON_CLONE","frag","createDocumentFragment","cloneNode","childNodes","NODE_CONTAINS_MISSES_TEXT_NODES","div","text","contains","nodeSplitText","Text","splitText","reHasDataToken","RegExp","reTokenMatch","getNodeValue","hasToken","test","Template","html","id","innerHTML","_bindings","getBindingFor","bindings","eleToBindings","ignoredChildren","directiveIterator","attrName","attrValue","managesNode","elePlaceholder","manages","getArrayForNodeFromMap","getDirectiveForAttribute","fakeEle","addTextNodes","filter","onlyElementsWithAttributes","findAllNodes","skip","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","ignoredParent","compareDocumentPosition","err","return","child","lastIndex","childTokenMatches","exec","getTextBindingForToken","tokenTextNode","index","fixEmptyTextNode","tokenPlaceholder","processTextNode","directiveBindings","bindingEle","path","walkEle","parent","unshift","applyBindingsToTemplateInstance","Directives","directivesInstances","getNodeAt","getNodeHandler","Error","map","directiveInstances","directiveSignature","resultArr","hasChildNodes","firstChild","nextSibling","TEMPLATES","view","cacheKey","hasTemplate","TemplateInstance","docFrag","templateId","_frag","_childNodes","fromTemplateId","nodeEle","viewTemplate","importNode","setData","DomDataBind","$ele","Factory","binding","AttrDirective","attr","_htmlAttr","_matches","directiveAttr","_isProp","domHasClass","el","cssClass","classList","domAddClass","classNameList","String","split","className","domRemoveClass","remove","ClassDirective","newClasses","oldClasses","_slicedToArray","arrayWithHoles","_arr","_e","_s","_i","iterableToArrayLimit","nonIterableRest","EACH","KEY_DIRECTIVE","destroyBinder","binder","_destroy","defaultRowKey","EachDirectiveNodeHandler","iterateOverList","_placeholderEle","_isSoleChild","every","childNode","textContent","hasDedicatedParent","_viewTemplate","usesKey","getKey","firstChildNode","setupViewTemplate","newList","listIterator","list","isEmptyList","binders","destroyChildBinders","bindersByKey","EachDirective","_parseDirectiveValue2","matches","argName","parseDirectiveValue","iteratorArgs","listVar","_iteratorArgs","parentEle","dataObj","rowData","newData","iterationDataList","isDataArray","currentBinders","binderToBeDestroyed","totalItems","_handler$_viewTemplat","$root","$parent","$data","getDataForIteration","rowKey","_loop","recover","pos","positionRowInDom","_binderToBeDestroyed$","recycleBinderKey","destroyRowElement","_handler","binderIndex","defaultInsertMarkerElement","HtmlDirective","IfDirective","_get2","_class2","showElement","_renderedEle","_renderTemplate","destroy_renderedEle","domAddEventListener","event","capture","events","evListeners","evName","addEventListener","removeEventListener","listeners","matchesDirective","str","escapeString","OnDirective","_eventName","domEv","tokenValue","$ev","handleEvent","evListener","matchRegExp","PropDirective","_AttrDirective","ShowDirective","_class","_origDisplayStyle","style","display","eleStyleList","domSetStyle","styles","esm_typeof","StyleDirective","__webpack_exports__","DomDataBindAll","attr_directive_AttrDirective","class_directive_ClassDirective","each_directive_EachDirective","html_directive_HtmlDirective","if_directive_IfDirective","on_directive_OnDirective","prop_directive_PropDirective","show_directive_ShowDirective","style_directive_StyleDirective","src_DomDataBind","src_render","directives_namespaceObject","directives_Directive","allDirectives"],"mappings":"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","file":"dom-data-bind.legacy.umd.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"DomDataBind\"] = factory();\n\telse\n\t\troot[\"DomDataBind\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nexport default function _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}","\r\nexport const GLOBAL = (() => {\r\n    const undef = 'undefined';\r\n    /* global self, window, global */\r\n    if (typeof window !== undef) { return window; }\r\n    if (typeof global !== undef) { return global; }\r\n    if (typeof self !== undef) { return self; }\r\n    return Function('return this;')();\r\n})();\r\n\r\nexport function getGlobal() {\r\n    return GLOBAL;\r\n}\r\nexport default getGlobal;","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\n\nfunction isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","/**\r\n * return a value to a given method\r\n *\r\n * @function\r\n * @param {Function} fn\r\n * @param {*} ctx The context to be assigned to `fn`\r\n * @return {Function}\r\n *\r\n * @example\r\n *\r\n * f = functionBin(function() { console.log(`Hello ${this.name}`); }, { name: \"Jackson\" });\r\n * f(); // => \"Hello Jackson\"\r\n */\r\nexport const functionBind = Function.bind.call.bind(Function.bind);\r\n\r\n/**\r\n * return a bound `.call` to the given method.\r\n *\r\n * @type function\r\n * @param {Function} fn\r\n * @return {Function}\r\n * @example\r\n *\r\n * forEach = functionBindCall(Array.prototype.forEach);\r\n * // same as doing: Array.prototype.forEach.call (but returns a new \"call\" method);\r\n */\r\nexport const functionBindCall = functionBind(Function.call.bind, Function.call);\r\n\r\n// Object ===============================================================================\r\nexport const toString                 = functionBindCall(Object.prototype.toString);\r\nexport const isObject                 = obj => toString(obj) === \"[object Object]\";\r\nexport const isString                 = obj => toString(obj) === \"[object String]\";\r\nexport const isFunction               = obj => toString(obj) === \"[object Function]\";\r\nexport const objectDefineProperty     = Object.defineProperty;\r\nexport const objectDefineProperties   = Object.defineProperties;\r\nexport const objectKeys               = Object.keys;\r\nexport const defineProperty = (obj, prop, value, getter, setter, configurable = true, enumerable = false, writable = true) => {\r\n    const descriptor = {\r\n        configurable,\r\n        enumerable\r\n    };\r\n\r\n    if (getter || setter) {\r\n        descriptor.get = getter;\r\n        descriptor.set = setter;\r\n    } else {\r\n        descriptor.writable = writable;\r\n        descriptor.value = value;\r\n    }\r\n\r\n    objectDefineProperty(obj, prop, descriptor);\r\n\r\n    return obj;\r\n};\r\n\r\n\r\n// Array ===============================================================================\r\nconst arr = [];\r\nexport const isArray        = Array.isArray;\r\nexport const arrayForEach   = functionBindCall(arr.forEach);\r\nexport const arrayIndexOf   = functionBindCall(arr.indexOf);\r\nexport const arraySplice    = functionBindCall(arr.splice);\r\nexport const arraySlice    = functionBindCall(arr.slice);\r\n\r\n\r\n// Logging ===============================================================================\r\nexport const consoleLog = console.log; // eslint-disable-line\r\nexport const consoleError = console.error || consoleLog; // eslint-disable-line\r\nexport const consoleWarn = console.warn || consoleLog; // eslint-disable-line\r\n\r\n\r\n// Iterators ===============================================================================\r\nexport const SymbolIterator = \"undefined\" !== typeof Symbol && Symbol.iterator ? Symbol.iterator : \"@@iterator\";\r\n\r\n\r\n// DOM ===============================================================================\r\nconst HTMLElementPrototype = HTMLElement.prototype;\r\nexport const doc = document;\r\nexport const head = doc.head;\r\nexport const createDocFragment = () => doc.createDocumentFragment();\r\nexport const createElement = tagName => doc.createElement(tagName);\r\nexport const createTextNode = data => doc.createTextNode(data || \"\");\r\nexport const appendChild = functionBindCall(HTMLElementPrototype.appendChild);\r\nexport const insertBefore = functionBindCall(HTMLElementPrototype.insertBefore);\r\nexport const hasAttribute = functionBindCall(HTMLElementPrototype.hasAttribute);\r\nexport const getAttribute = functionBindCall(HTMLElementPrototype.getAttribute);\r\nexport const setAttribute = functionBindCall(HTMLElementPrototype.setAttribute);\r\nexport const removeAttribute = functionBindCall(HTMLElementPrototype.removeAttribute);","import {isObject} from \"./runtime-aliases.js\";\r\n\r\n//============================================================\r\n\r\n/**\r\n * Extends an object with the properties of another.\r\n *\r\n * @param {Object|Boolean} mergeIntoObj\r\n *  The object that will have the properties of every other object provided\r\n *  on input merged into. This can also be a `Boolean`, in which case,\r\n *  a deep merge of objects will be done - argument number 2 will\r\n *  become the `mergeIntoObj`.\r\n * @param {...Object} mergeObjects\r\n *\r\n * @return {Object}\r\n */\r\nexport function objectExtend(mergeIntoObj, ...mergeObjects) {\r\n    let response    = mergeIntoObj || {};\r\n    let total       = mergeObjects.length;\r\n    let deepMerge   = false;\r\n    let i;\r\n    let key;\r\n\r\n    if (typeof mergeIntoObj === \"boolean\") {\r\n        deepMerge   = mergeIntoObj;\r\n        response    = mergeObjects.shift() || {};\r\n        total       = mergeObjects.length;\r\n    }\r\n\r\n    for (i = 0; i < total; i++) {\r\n        if (!mergeObjects[i]) {\r\n            continue;\r\n        }\r\n\r\n        for (key in mergeObjects[i]) {\r\n            if (mergeObjects[i].hasOwnProperty(key)) {\r\n                if (\r\n                    deepMerge &&\r\n                    isObject(response[key]) &&\r\n                    isObject(mergeObjects[i][key])\r\n                ) {\r\n                    response[key] = objectExtend( true, response[key], mergeObjects[i][key]);\r\n\r\n                } else {\r\n                    response[key] = mergeObjects[i][key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return response;\r\n}\r\nexport default objectExtend;","// POLYFILL FOR WeakMap\r\n//  [pt] changed how \"delete\" is defined so that it can work in IE8\r\n\r\n/* jshint ignore:start */\r\n/**\r\n * @license\r\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\r\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\n * Code distributed by Google as part of the polymer project is also\r\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n */\r\nvar FakeWeakMap;\r\nif (typeof WeakMap === 'undefined') {\r\n    (function() {\r\n        var defineProperty = Object.defineProperty;\r\n        var counter = Date.now() % 1e9;\r\n\r\n        var WeakMap = FakeWeakMap = function() {\r\n            this.name = '__st' + (Math.random() * 1e9 >>> 0) + (counter++ + '__');\r\n        };\r\n\r\n        WeakMap.prototype = {\r\n            set: function(key, value) {\r\n                var entry = key[this.name];\r\n                if (entry && entry[0] === key)\r\n                    entry[1] = value;\r\n                else\r\n                    defineProperty(key, this.name, {value: [key, value], writable: true});\r\n                return this;\r\n            },\r\n            get: function(key) {\r\n                var entry;\r\n                return (entry = key[this.name]) && entry[0] === key ?\r\n                    entry[1] : undefined;\r\n            },\r\n            // [pt] Quotes around the delete property needed for IE8\r\n            \"delete\": function(key) {\r\n                var entry = key[this.name];\r\n                if (!entry || entry[0] !== key) return false;\r\n                entry[0] = entry[1] = undefined;\r\n                return true;\r\n            },\r\n            has: function(key) {\r\n                var entry = key[this.name];\r\n                if (!entry) return false;\r\n                return entry[0] === key;\r\n            }\r\n        };\r\n\r\n        window.WeakMap = WeakMap;\r\n    })();\r\n} else {\r\n    FakeWeakMap = WeakMap\r\n}\r\n/* jshint ignore:end */\r\nexport { FakeWeakMap as WeakMap };\r\nexport default FakeWeakMap;\r\n","import {WeakMap} from \"./WeakMap\";\r\n\r\n/**\r\n * Returns an object that contains an initialized WeakMap (`stash` property)\r\n * where data can be stored.\r\n *\r\n * @namespace dataStore\r\n *\r\n */\r\nvar dataStore = /** @lends dataStore */{\r\n    /**\r\n     * Stash data here.\r\n     * @type WeakMap\r\n     */\r\n    stash:  new WeakMap(),\r\n    /**\r\n     * Create a private data store and return it.\r\n     * @return {WeakMap}\r\n     */\r\n    create: function(){\r\n        return new WeakMap();\r\n    }\r\n};\r\n\r\nexport default dataStore;\r\nexport { dataStore };\r\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import {\r\n    objectDefineProperty,\r\n    objectDefineProperties,\r\n    SymbolIterator\r\n} from \"./runtime-aliases\"\r\n\r\n//-----------------------------------------------------------------------\r\n\r\n// Great reference: http://2ality.com/2015/02/es6-iteration.html\r\nexport function FakeIterator(keys, values) {\r\n    objectDefineProperty(this, \"_\", { value: {\r\n        keys:   keys.slice(0),\r\n        values: values ? values.slice(0) : null,\r\n        idx:    0,\r\n        total:  keys.length\r\n    } });\r\n}\r\nexport default FakeIterator;\r\n\r\nobjectDefineProperties(FakeIterator.prototype, {\r\n    constructor: { value: FakeIterator },\r\n    next: {\r\n        enumerable: true,\r\n        configurable: true,\r\n        value() {\r\n            const response = {\r\n                done: this._.idx === this._.total\r\n            };\r\n\r\n            if (response.done) {\r\n                response.value = undefined;\r\n                return response;\r\n            }\r\n\r\n            const nextIdx = this._.idx++;\r\n\r\n            response.value = this._.keys[nextIdx];\r\n\r\n            if (this._.values) {\r\n                response.value = [ response.value, this._.values[nextIdx] ];\r\n            }\r\n\r\n            return response;\r\n        }\r\n    }\r\n});\r\nobjectDefineProperty(FakeIterator.prototype, SymbolIterator, { value(){ return this; } });\r\n\r\n","import { GLOBAL } from \"./getGlobal\"\r\nimport { FakeIterator } from \"./Iterator\"\r\nimport {\r\n    objectDefineProperties,\r\n    objectDefineProperty,\r\n    arrayIndexOf,\r\n    SymbolIterator\r\n} from \"./runtime-aliases\"\r\n\r\n//============================================================\r\n\r\nexport const Set = GLOBAL.Set && GLOBAL.Set.prototype[SymbolIterator] ? GLOBAL.Set : FakeSet;\r\nexport default Set;\r\n\r\nexport function FakeSet() {\r\n    // FIXME: support for iterable input\r\n}\r\n\r\nobjectDefineProperties(FakeSet.prototype, {\r\n    constructor: { value: FakeSet, configurable: true },\r\n    _: {\r\n        get() {\r\n            const values = [];\r\n            objectDefineProperty(this, \"_\", { value: values });\r\n            return values;\r\n        }\r\n    },\r\n    add: {\r\n        value(item) {\r\n            if (arrayIndexOf(this._, item) === -1) {\r\n                this._.push(item);\r\n            }\r\n            return this;\r\n        }\r\n    },\r\n    has: {\r\n        value(item) { return arrayIndexOf(this._, item) !== -1; }\r\n    },\r\n    size: {\r\n        get() { return this._.length; }\r\n    },\r\n    clear: {\r\n        value() { this._.splice(0); }\r\n    },\r\n    delete: {\r\n        value(item) {\r\n            const idx = arrayIndexOf(this._, item);\r\n            if (idx !== -1) {\r\n                this._.splice(idx, 1);\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n    },\r\n    values: {\r\n        value() {\r\n            return new FakeIterator(this._);\r\n        }\r\n    },\r\n    entries: {\r\n        value() {\r\n            return new FakeIterator(this._, this._);\r\n        }\r\n    },\r\n    forEach: {\r\n        value(cb, thisArg) {\r\n            this._.forEach(item => cb(item, item, this), thisArg);\r\n        }\r\n    },\r\n    [SymbolIterator]: {\r\n        value() {\r\n            return this.values();\r\n        }\r\n    }\r\n});\r\n\r\n\r\n","import Set from \"./es6-Set\"\r\n\r\n//===============================================\r\nconst callbacks = new Set();\r\nlet queue;\r\n\r\n/**\r\n * Queue a callback to be executed after at the start of next event loop.\r\n * This differs from `nextTick` in that callbacks are not executed during\r\n * micro-processing, but rather on next event loop, so this is not ideal\r\n * for logic that can cause UI reflow.\r\n *\r\n * @param {Function} cb\r\n */\r\nexport function queueCallback(cb) {\r\n    if (\"function\" === typeof cb) {\r\n        callbacks.add(cb);\r\n\r\n        if (!queue) {\r\n            queue = setTimeout(flushQueue, 0);\r\n        }\r\n    }\r\n}\r\nexport default queueCallback;\r\n\r\nfunction flushQueue() {\r\n    const cbList  = [...callbacks];\r\n    callbacks.clear();\r\n    queue = null;\r\n    let cb;\r\n    while ((cb = cbList.shift())) {\r\n        cb();\r\n        cb = null;\r\n    }\r\n}\r\n","import objectExtend from \"./objectExtend\"\r\nimport dataStore from \"./dataStore\"\r\nimport queueCallback from \"./queueCallback\"\r\n\r\n//=========================================================\r\nconst PRIVATE = dataStore.create();\r\nconst COMMON_DESTROY_METHOD_NAME = [\r\n    \"destroy\",      // Compose\r\n    \"remove\",       // DOM Events Listeners\r\n    \"off\"           // EventEmitter Listeners\r\n];\r\n\r\n// return all KEYs of an object, even those that are not iterable\r\nfunction objectKeys(prototype){\r\n    let k, keys = [];\r\n    for (k in prototype){\r\n        keys.push(k);\r\n    }\r\n    return keys;\r\n}\r\n\r\n// Base instance methods for Compose'd object\r\nconst baseMethods = /** @lends Compose.prototype */{\r\n\r\n    /**\r\n     * Property indicating whether instance has been destroyed\r\n     */\r\n    isDestroyed: false,\r\n\r\n    /**\r\n     * instance initializing code\r\n     */\r\n    init(){},\r\n\r\n    /**\r\n     * Destroys the instance, by removing its private data.\r\n     * Any attached `onDestroy` callback will be executed `async` - queued and\r\n     * called on next event loop\r\n     *\r\n     * @param {Boolean} [executeCallbacksNow=false]\r\n     */\r\n    destroy(executeCallbacksNow){\r\n        if (PRIVATE.has(this)) {\r\n            let destroyCallbacks = PRIVATE.get(this);\r\n            PRIVATE.delete(this);\r\n\r\n            if (executeCallbacksNow) {\r\n                destroyCallbacks.forEach(callOnDestroyCallback);\r\n            }\r\n            else {\r\n                queueCallback(() => destroyCallbacks.forEach(callOnDestroyCallback));\r\n            }\r\n        }\r\n\r\n        if (\"boolean\" === typeof this.isDestroyed) {\r\n            this.isDestroyed = true;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Adds a callback to the queue to be called when this object's `.destroy()`\r\n     * is called.\r\n     *\r\n     * @param {Function} callback\r\n     */\r\n    onDestroy(callback){\r\n        getInstanceState(this).push(callback);\r\n    },\r\n\r\n    /**\r\n     * Returns the factory for this instance.\r\n     *\r\n     * @return {Compose}\r\n     */\r\n    getFactory(){\r\n        if (this.constructor) {\r\n            return this.constructor;\r\n        }\r\n    }\r\n};\r\n\r\n\r\nconst staticMethods = /** @lends Compose */{\r\n    /**\r\n     * Creates an new factory based on the prototye of the current Factory\r\n     * and any other Factory given on input.\r\n     *\r\n     * @return {Compose}\r\n     */\r\n    extend: function(...args){\r\n        let Class = class extends this {};\r\n\r\n        objectExtend(Class.prototype, args.reduce(function(newProto, obj){\r\n            if (obj) {\r\n                const thisObjProto = (obj.prototype || obj);\r\n                objectKeys(thisObjProto).forEach(function(objKey){\r\n                    newProto[objKey] = thisObjProto[objKey];\r\n                });\r\n            }\r\n            return newProto;\r\n        }, {}));\r\n\r\n        return Class;\r\n    },\r\n\r\n    /**\r\n     * Checks if the Object given on input looks like an instance of this Factory.\r\n     *\r\n     * @return {Boolean}\r\n     */\r\n    isInstanceOf: function(instanceObj){\r\n\r\n        if (!instanceObj) {\r\n            return false;\r\n        }\r\n\r\n        var neededKeys = objectKeys(this.prototype);\r\n\r\n        // If any prototype key is not in the object prototype, then return false\r\n        return !neededKeys.some(function(protoKey){\r\n            return typeof instanceObj[protoKey] === \"undefined\";\r\n        });\r\n\r\n    },\r\n\r\n    /**\r\n     * Creates an instance object based on this factory.\r\n     *\r\n     * @return {Object}\r\n     */\r\n    create: function(){\r\n        return new this(...arguments);\r\n    },\r\n\r\n    /**\r\n     * Returns a standard callback that can be used to remove cleanup instance state\r\n     * from specific Store (WeakMap). Returned function will destroy known Instances\r\n     * that have destroy methods.\r\n     *\r\n     * @param {Object} instanceState\r\n     * @param {WeakMap} [stateStore]\r\n     *\r\n     * @return {Function}\r\n     *\r\n     * @example\r\n     *\r\n     * const MY_PRIVATE = new WeakMap();\r\n     * cont NewWdg = Componse.extend({\r\n     *      init() {\r\n     *          const state = {};\r\n     *          MY_PRIVATE.set(this, state);\r\n     *          ...\r\n     *\r\n     *          this.onDestroy(Compose.getDestroyCallback(state, MY_PRIVATE));\r\n     *      }\r\n     * });\r\n     */\r\n    getDestroyCallback: getDestroyCallback\r\n};\r\n\r\n\r\n/**\r\n * Returns a standard callback that can be used to remove cleanup instance state\r\n * from specific Store (WeakMap). Returned function will destroy known Instances\r\n * that have destroy methods.\r\n *\r\n * @method Compose~getDestroyCallback\r\n *\r\n * @param {Object} instanceState\r\n * @param {WeakMap} [stateStore]\r\n *\r\n * @return {Function}\r\n *\r\n * @example\r\n *\r\n * const MY_PRIVATE = new WeakMap();\r\n * cont NewWdg = Componse.extend({\r\n *      init() {\r\n *          const state = {};\r\n *          MY_PRIVATE.set(this, state);\r\n *          ...\r\n *\r\n *          this.onDestroy(Compose.getDestroyCallback(state, MY_PRIVATE));\r\n *      }\r\n * });\r\n */\r\nexport function getDestroyCallback (instanceState, stateStore) {\r\n    return () => {\r\n        if (instanceState) {\r\n            // Destroy all Compose object\r\n            Object.keys(instanceState).forEach(function (prop) {\r\n                if (instanceState[prop]) {\r\n                    COMMON_DESTROY_METHOD_NAME.some((method) => {\r\n                        if (\r\n                            instanceState[prop][method] &&\r\n                            (method !== \"remove\" || !(instanceState[prop] instanceof Node)) // Caution: should not remove DOM elements.\r\n                        ) {\r\n                            instanceState[prop][method]();\r\n                            return true;\r\n                        }\r\n                    });\r\n\r\n                    instanceState[prop] = undefined;\r\n                }\r\n            });\r\n        }\r\n\r\n        if (stateStore && stateStore.has && stateStore.has(instanceState)) {\r\n            stateStore.delete(instanceState);\r\n        }\r\n    }\r\n}\r\n\r\nfunction getInstanceState(inst) {\r\n    if (!PRIVATE.has(inst)) {\r\n        PRIVATE.set(inst, []);\r\n    }\r\n\r\n    return PRIVATE.get(inst);\r\n}\r\n\r\nfunction callOnDestroyCallback (callback){\r\n    if (\"function\" === typeof callback) {\r\n        callback();\r\n    }\r\n}\r\n\r\nfunction getNewConstructor () {\r\n    function ComposeConstructor(...args) {\r\n        // Called with `new`?\r\n        if (this && this.constructor && this instanceof this.constructor) {\r\n            return this.init(...args);\r\n        }\r\n\r\n        // called directly\r\n        return new ComposeConstructor(...args);\r\n    }\r\n\r\n    ComposeConstructor.prototype.constructor = ComposeConstructor;\r\n    return ComposeConstructor;\r\n}\r\n\r\n/**\r\n * Composes new factory methods from a list of given Objects/Classes.\r\n *\r\n * @class Compose\r\n * @borrows Compose~getDestroyCallback as Compose.getDestroyCallback\r\n *\r\n * @example\r\n *\r\n * var Widget = Compose.create(Model, Events);\r\n *\r\n * myWidget = Widget.create();\r\n *\r\n */\r\nconst Compose = getNewConstructor();\r\nobjectExtend(Compose.prototype, baseMethods);\r\nobjectExtend(Compose, staticMethods);\r\n\r\nexport default Compose;\r\nexport { Compose };\r\n","import { GLOBAL } from \"./getGlobal\"\r\nimport { FakeIterator } from \"./Iterator\"\r\nimport {\r\n    arrayIndexOf,\r\n    arraySplice,\r\n    objectDefineProperty,\r\n    objectDefineProperties,\r\n    SymbolIterator\r\n} from \"./runtime-aliases\"\r\n\r\n//======================================================\r\n\r\nexport const Map = GLOBAL.Map && GLOBAL.Map.prototype[SymbolIterator] ? GLOBAL.Map : FakeMap;\r\nexport default Map;\r\n\r\nexport function FakeMap() {\r\n    // FIXME: support for iterable input param\r\n}\r\n\r\nobjectDefineProperties(FakeMap.prototype, {\r\n    constructor: { value: FakeMap, configurable: true },\r\n    _: {\r\n        get() {\r\n            objectDefineProperty(this, \"_\", { value: {\r\n                keys: [],\r\n                values: []\r\n            } });\r\n            return this._;\r\n        }\r\n    },\r\n    get: {\r\n        value(key) {\r\n            return this._.values[arrayIndexOf(this._.keys, key)];\r\n        }\r\n    },\r\n    set: {\r\n        value(key, value) {\r\n            if (arrayIndexOf(this._.keys, key) === -1) {\r\n                this._.keys.push(key);\r\n                this._.values.push(value);\r\n            }\r\n            return this;\r\n        }\r\n    },\r\n    has: {\r\n        value(key) { return arrayIndexOf(this._.keys, key) !== -1; }\r\n    },\r\n    size: {\r\n        get() { return this._.keys.length; }\r\n    },\r\n    clear: {\r\n        value() {\r\n            arraySplice(this._.keys, 0);\r\n            arraySplice(this._.values, 0);\r\n        }\r\n    },\r\n    delete: {\r\n        value(key) {\r\n            const idx = arrayIndexOf(this._.keys, key);\r\n            if (idx !== -1) {\r\n                arraySplice(this._.keys, idx, 1);\r\n                arraySplice(this._.values, idx, 1);\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n    },\r\n    keys: {\r\n        value() {\r\n            return new FakeIterator(this._.keys);\r\n        }\r\n    },\r\n    values: {\r\n        value() {\r\n            return new FakeIterator(this._.values);\r\n        }\r\n    },\r\n    entries: {\r\n        value() {\r\n            return new FakeIterator(this._.keys, this._.values);\r\n        }\r\n    },\r\n    forEach: {\r\n        value(cb, thisArg) {\r\n            this._.keys.forEach((item, i) => cb(this._.values[i], item, this), thisArg);\r\n        }\r\n    },\r\n    [SymbolIterator]: {\r\n        value() {\r\n            return this.entries();\r\n        }\r\n    }\r\n});\r\n\r\n","import dataStore    from \"@purtuga/common/src/jsutils/dataStore\"\r\nimport Map          from \"@purtuga/common/src/jsutils/es6-Map\"\r\nimport {\r\n    functionBindCall,\r\n    isObject,\r\n    isString,\r\n    arrayForEach,\r\n    arraySlice,\r\n    hasAttribute,\r\n    setAttribute,\r\n    getAttribute,\r\n    removeAttribute,\r\n    insertBefore,\r\n    createElement,\r\n    createTextNode,\r\n    createDocFragment,\r\n    consoleError,\r\n    functionBind\r\n} from \"@purtuga/common/src/jsutils/runtime-aliases.js\"\r\nimport {isTemplateElement} from \"@purtuga/common/src/domutils/isTemplateElement.js\"\r\n//=====================================================\r\nconst DOCUMENT              = document;\r\nconst FUNCTION              = Function;\r\nconst ELEMENT_PROTOTYPE     = Element.prototype;\r\nconst VALUE_GETTERS         = new Map();\r\nlet counter = 1;\r\n\r\nexport {\r\n    arrayForEach,\r\n    arraySlice,\r\n    hasAttribute,\r\n    setAttribute,\r\n    getAttribute,\r\n    removeAttribute,\r\n    insertBefore,\r\n    createElement,\r\n    createTextNode,\r\n    createDocFragment,\r\n    isString\r\n};\r\n\r\nexport const DOM_DATA_BIND_PROP = \"DomDataBind\";\r\nexport const PRIVATE            = dataStore.create();\r\nexport const UUID               = `D-${ Date.now() }-${ Math.random().toString(36).replace(/[^a-z0-9]+/g, '') }`;\r\nexport const escapeString       = str => String(str).replace(/[-[\\]/{}()*+?.\\\\^$|]/g, \"\\\\$&\");\r\nexport const bindCallTo         = functionBindCall;\r\nexport const isPureObject       = isObject;\r\nexport const removeChild        = functionBindCall(ELEMENT_PROTOTYPE.removeChild);\r\nexport const createComment      = functionBind(DOCUMENT.createComment, DOCUMENT);\r\nexport const isTemplate         = isTemplateElement;\r\nexport const logError           = consoleError;\r\n\r\n\r\n/**\r\n * Create a Function to be used in retrieving a given value from a data structure\r\n * @param evalCode\r\n * @param name\r\n * @returns {*}\r\n */\r\nexport function createValueGetter(evalCode, name = \"runtime\") {\r\n    evalCode = evalCode.trim();\r\n\r\n    if (VALUE_GETTERS.has(evalCode)) {\r\n        return VALUE_GETTERS.get(evalCode);\r\n    }\r\n\r\n    const fn = new FUNCTION(\"$DATA\", `\r\nwith ($DATA) {\r\n    if ($DATA.$data) {\r\n        with ($DATA.$data) {\r\n            return (${ evalCode });\r\n        }\r\n    } \r\n    return (${ evalCode });\r\n}\r\n//# sourceURL=valueGetter:${name}.${counter++}.js`);\r\n\r\n    VALUE_GETTERS.set(evalCode, fn);\r\n    return fn;\r\n}\r\n\r\n/**\r\n * Returns an array of attributes names found on a given HTML node\r\n *\r\n * @param {HTMLElement} node\r\n * @returns {Array}\r\n */\r\nexport function getNodeAttrNames(node){\r\n    const attrNames = [];\r\n    const total = node.attributes.length;\r\n\r\n    for(let i = 0; i < total; i++) {\r\n        attrNames.push(node.attributes.item(i).name);\r\n    }\r\n\r\n    return attrNames;\r\n}","import {toString} from \"../jsutils/runtime-aliases.js\";\r\n\r\n/**\r\n * Returns a boolean indicating if provided element on input is a HTML Template element (like).\r\n *\r\n * @param {HTMLElement} ele\r\n *\r\n * @returns {boolean}\r\n */\r\nexport function isTemplateElement(ele) {\r\n    const eleToStringValue = toString(ele);\r\n    return eleToStringValue === \"[object HTMLTemplateElement]\" ||\r\n        (eleToStringValue === \"[object HTMLUnknownElement]\" && !!ele.content);\r\n}","/**\r\n * Finds Elements within a given HTML Element using `querySelectorAll` and\r\n * return an Array with those elements.\r\n *\r\n * @function domFind\r\n *\r\n * @param {HTMLElement} domEle\r\n * @param {String} selector\r\n *\r\n * @returns {Array<HTMLElement>}\r\n */\r\nexport function domFind(domEle, selector){\r\n    return Array.prototype.slice.call(domEle.querySelectorAll(selector));\r\n}\r\nexport default domFind;\r\n","// Some of the code below was taken from from https://github.com/ericelliott/cuid/\r\n\r\n/**\r\n * Generates a unique id. This is really a CUID.\r\n *\r\n * @namespace uuid\r\n */\r\nvar\r\n    base    = 36,\r\n    counter = 1,\r\n    letter  = \"c\",\r\n    pad     = function(num, size) {\r\n        var s = \"000000000\" + num;\r\n        return s.substr(s.length-size);\r\n    },\r\n\r\n    globalCount = (function() {\r\n        var i, count = 0; // eslint-disable-line\r\n        for (i in window) {\r\n            count++;\r\n        }\r\n        return count;\r\n    }()),\r\n\r\n    fingerprint = (function() {\r\n        return pad(\r\n            (navigator.mimeTypes.length + navigator.userAgent.length).toString(36) + globalCount.toString(36),\r\n            4\r\n        );\r\n    }());\r\n\r\n\r\nvar uuid = Object.create(/** @lends uuid */{\r\n    generate: function(){\r\n        var\r\n            timestamp   = (new Date().getTime()).toString(base),\r\n            nextCounter = pad((counter++).toString(base), 4),\r\n            random      = 'xxxxxxxx'.replace(/[x]/g, function() {\r\n            // This code from: http://stackoverflow.com/a/2117523/471188\r\n                var v = Math.random()*16|0;\r\n                return v.toString(16);\r\n            });\r\n\r\n        return (letter + timestamp + nextCounter + fingerprint + random);\r\n\r\n    }\r\n});\r\n\r\nexport default uuid;\r\nexport { uuid };\r\n","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","import getPrototypeOf from \"./getPrototypeOf\";\nimport superPropBase from \"./superPropBase\";\nexport default function _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","import Compose from \"@purtuga/common/src/jsutils/Compose.js\";\r\nimport {PRIVATE} from \"../utils.js\";\r\n\r\n/**\r\n * A Directive Node handler\r\n *\r\n * @extends Compose\r\n *\r\n * @param {Directive} directive Directive instance\r\n * @param {Node} node\r\n */\r\nexport class NodeHandler extends Compose {\r\n    init(directive, node, directives) {\r\n        this._directives = directives;\r\n        this._d = this._directive = directive;\r\n        this._n = this._node = node;\r\n    }\r\n\r\n    /**\r\n     * List of directives that were used during parsing of the template\r\n     * @name NodeHandler#_directives\r\n     * @type Array<Directive>\r\n     */\r\n\r\n    /**\r\n     * The Directive instance that is tied to this node handler\r\n     * @name NodeHandler#_directive\r\n     * @type Directive\r\n     * @protected\r\n     */\r\n\r\n    /**\r\n     * The Node associated with this node handler\r\n     * @name NodeHandler#_node\r\n     * @type Node\r\n     * @protected\r\n     */\r\n\r\n    // Override destroy (which is by default \"async\" and ensure that notifications\r\n    // are turned off immediately for this Node\r\n    destroy() {\r\n        const state = PRIVATE.get(this);\r\n        if (state){\r\n            if (state.tracker && state.tracker.stopWatchingAll) {\r\n                state.tracker.stopWatchingAll();\r\n            }\r\n            if (state.data) {\r\n                state.data = null;\r\n            }\r\n        }\r\n        super.destroy();\r\n        PRIVATE.delete(this);\r\n    }\r\n\r\n    /**\r\n     * Renders the data given on input to the Template.\r\n     * (By default, it proxies to the Directive#render())\r\n     *\r\n     * @param data\r\n     */\r\n    render(data) {\r\n        this._d.render(this, this._n, data);\r\n    }\r\n\r\n    /**\r\n     * Shoudl be overwritten to contain the logic as to how a new value (generated by the Directive's `render()`)\r\n     * should be applied to the live HTML. Should be overwritten.\r\n     *\r\n     * @param {*} newValue\r\n     */\r\n    update(/*newValue*/) {}// eslint-disable-line\r\n}\r\n","import Compose from \"@purtuga/common/src/jsutils/Compose\"\r\nimport {logError, PRIVATE, removeAttribute} from \"../utils\"\r\nimport {NodeHandler} from \"./NodeHandler.js\";\r\n\r\n//===================================================================================\r\n\r\n/**\r\n * A DOM element directive.\r\n * NOte that any directive that removes the original DOM element from its parent\r\n * will prevent all subsequent directives from running.\r\n *\r\n * @class Directive\r\n * @extends Compose\r\n *\r\n * @param {String} directiveAttr\r\n *  The directive html element attribute as found in the element.\r\n * @param {String} attrValue\r\n *  The value of the attribute\r\n */\r\nexport class Directive extends Compose {\r\n    /**\r\n     * Checks a given element has an element attribute that matches the Directive.\r\n     * If a match is found, the html Element's attribute that was matched must be\r\n     * returned.\r\n     *\r\n     * @param {HTMLElement} ele\r\n     *\r\n     * @returns {String}\r\n     */\r\n    static has(/*ele*/) { return \"\"; }\r\n\r\n    /**\r\n     * A boolean indicating whether this directive manages the element. If set to true, then\r\n     * `DomDataBind` will not process any other directives after this one.\r\n     */\r\n    static manages() { return false; }\r\n\r\n    /**\r\n     * The Class that will be used to initialize a new node handler for the directive\r\n     *\r\n     * @type NodeHandler\r\n     * @constructor\r\n     */\r\n    static NodeHandlerConstructor = NodeHandler;\r\n\r\n    /**\r\n     * Render the Directive with given data\r\n     *\r\n     * @param {NodeHandler} handler\r\n     * @param {Node} node\r\n     * @param {Object} data\r\n     */\r\n    render(handler, node, data) {\r\n        let state = PRIVATE.get(handler);\r\n\r\n        if (!state) {\r\n            /**\r\n             * Directive Node Handler state\r\n             *\r\n             * @typedef {Object} NodeHandlerState\r\n             *\r\n             * @property {*} data\r\n             * @property {*} value\r\n             * @property {Boolean} isQueued\r\n             * @property {Function} tracker\r\n             * @property {Function} update\r\n             */\r\n            state = {\r\n                data:       null,\r\n                value:      \"\",\r\n                isQueued:   false,\r\n                tracker:    () => this.render(handler, node, state.data)\r\n                //update: () => {} --- should be defined by Directive subclass\r\n            };\r\n            PRIVATE.set(handler, state);\r\n\r\n        }\r\n\r\n        if (state.data !== data) {\r\n            // With use of observables, the tracker function get a `stopWatchingAll()` method\r\n            // which removes this tracker from all property dependency lists.\r\n            if (state.tracker.stopWatchingAll) {\r\n                state.tracker.stopWatchingAll();\r\n            }\r\n            state.data = data;\r\n        }\r\n\r\n        this.update(handler);\r\n    }\r\n\r\n    /**\r\n     * Updates a node by generating a new value for the Directive, storing it\r\n     * in the handler `state.value` and calling `handle.update` after it.\r\n     *\r\n     * @param {NodeHandler} handler\r\n     */\r\n    update(handler) {\r\n        // destruction happens 1ms after .destroy() (Componse#destroy()) is called,\r\n        // so its possible that a handler might come in here having its `.isDestroyed`\r\n        // flag set.\r\n        if (handler.isDestroyed) {\r\n            return;\r\n        }\r\n\r\n        const handlerState = PRIVATE.get(handler);\r\n\r\n        if (handlerState) {\r\n            let newValue = \"\";\r\n\r\n            try {\r\n                newValue = this._tokenValueGetter(handlerState.data || {});\r\n\r\n                // Update node\r\n                if (handler.update) {\r\n                    handler.update(newValue);\r\n                }\r\n            }\r\n            catch(e) {\r\n                logError(e);\r\n            }\r\n\r\n            if (handlerState.value !== newValue) {\r\n                handlerState.value = newValue;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Cleans the node by removing Directive specific attribute. By default, the `_attr`\r\n     * that was given to this constructor will be removed from the node.\r\n     *\r\n     * @param {Node} node\r\n     */\r\n    cleanNode(node) {\r\n        if (this._attr && node.nodeType !== 8 /* don't process comment nodes */) {\r\n            removeAttribute(node, this._attr);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns a node handler for this Directive on the provided Node\r\n     *\r\n     * @param {Node} node\r\n     * @param {Array<Directive>} [directives]\r\n     *\r\n     * @return {NodeHandler}\r\n     */\r\n    getNodeHandler(node, directives) {\r\n        this.cleanNode(node);\r\n        return new this.constructor.NodeHandlerConstructor(this, node, directives);\r\n    }\r\n}\r\nexport default Directive;\r\n\r\n","/**\r\n * Shortcut/Functional alias to `Node.insertBefore` method.\r\n *\r\n * @param {Node|DocumentFragment} newNode\r\n * @param {Node} referenceNode\r\n *\r\n * @returns {Node|DocumentFragment}\r\n */\r\nexport function domInsertBefore(newNode, referenceNode) {\r\n    if (referenceNode && referenceNode.parentNode && referenceNode.parentNode.insertBefore) {\r\n        referenceNode.parentNode.insertBefore(newNode, referenceNode);\r\n    }\r\n    return newNode;\r\n}\r\nexport default domInsertBefore;\r\n\r\n","import Directive from \"../directives/Directive\"\r\nimport {\r\n    UUID,\r\n    createTextNode,\r\n    createValueGetter   } from \"../utils\"\r\nimport {domInsertBefore} from \"@purtuga/common/src/domutils/domInsertBefore.js\"\r\nimport {NodeHandler} from \"../directives/NodeHandler.js\";\r\n\r\n//===========================================================\r\n\r\nexport class TextBinding extends Directive {\r\n    static NodeHandlerConstructor = class extends NodeHandler {\r\n        update(newValue) {\r\n            if (newValue !== this._node.nodeValue) {\r\n                this._node.nodeValue = newValue;\r\n            }\r\n        }\r\n    };\r\n\r\n    init(tokenText) {\r\n        this._tokenText = tokenText;\r\n        this._tokenValueGetter = createValueGetter(tokenText, \"text\");\r\n    }\r\n\r\n    getNodeHandler(node) {\r\n        // Text nodes are processed in a special way in `DomDataBind.getTemplateForDomElement`, where\r\n        // free-floating textnode are replaced with HTML comments in order to not lose their place when\r\n        // converted to text and then back to dom elements. We replace those here now..\r\n        if (node.nodeType === 8 && node.nodeValue === UUID) {\r\n            const nodeToRemove = node;\r\n            node = domInsertBefore(createTextNode(\"\"), nodeToRemove);\r\n            nodeToRemove.parentNode.removeChild(nodeToRemove);\r\n        }\r\n\r\n        return super.getNodeHandler(node);\r\n    }\r\n}\r\n\r\nexport default TextBinding;\r\n\r\n","import domFind from \"@purtuga/common/src/domutils/domFind.js\"\r\nimport {uuid} from \"@purtuga/common/src/jsutils/uuid.js\"\r\nimport {\r\n    PRIVATE,\r\n    UUID,\r\n    bindCallTo,\r\n    removeAttribute,\r\n    getAttribute,\r\n    arrayForEach,\r\n    createComment,\r\n    createDocFragment,\r\n    createTextNode,\r\n    logError,\r\n    createElement,\r\n    isTemplate\r\n} from \"./utils\"\r\nimport TextBinding from \"./bindings/text-binding.js\"\r\n\r\n\r\n//=========================================================================================\r\nconst DATA_TOKEN_REG_EXP_STR    = \"{{(.*?)}}\";\r\nconst DROPS_NODES_ON_CLONE = (() => {   // FUCK YOU IE!\r\n    const frag = createDocFragment();\r\n    frag.appendChild(createTextNode(\"test\"));\r\n    frag.appendChild(createTextNode(\"\"));\r\n    return frag.cloneNode(true).childNodes.length === 1;\r\n})();\r\nconst NODE_CONTAINS_MISSES_TEXT_NODES = (() => {    // FUCK YOU IE!\r\n    const div = createElement(\"div\");\r\n    const text = createTextNode(\"test\");\r\n    div.appendChild(text);\r\n    return !div.contains(text);\r\n})();\r\n\r\n\r\n// Local aliases\r\nconst nodeSplitText         = bindCallTo(Text.prototype.splitText);\r\n\r\n// short helpers\r\nconst reHasDataToken        = new RegExp(DATA_TOKEN_REG_EXP_STR);\r\nconst reTokenMatch          = new RegExp(DATA_TOKEN_REG_EXP_STR, \"g\");\r\nconst getNodeValue          = node => node ? node.nodeValue : \"\";\r\nconst hasToken              = node => reHasDataToken.test(getNodeValue(node));\r\n\r\n// FIXME: use insertBefore() alias in several places below\r\n\r\n\r\n/**\r\n * A Dom template along with its set of know directives (after parsing it)\r\n */\r\nexport class Template {\r\n    constructor(html, directives = []) {\r\n        this.id = uuid.generate();\r\n\r\n        if (!isTemplate(html)) {\r\n            this.ele = createElement(\"template\");\r\n            this.ele.innerHTML = html;\r\n        } else {\r\n            this.ele = html;\r\n        }\r\n\r\n        this._directives = directives;\r\n\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n            // DEV MODE:: warn about directive positioning\r\n            if (directives.length) {\r\n                const directivesPosition = directives.reduce(function(positions, Directive, index){\r\n                    positions[Directive.name] = index;\r\n                    positions[`has${Directive.name}`] = true;\r\n                    return positions;\r\n                }, {});\r\n\r\n                if (directivesPosition.hasEachDirective && directivesPosition.EachDirective !== 0) {\r\n                    console.warn(`DomDataBind: 'EachDirective' position in 'directives' array should be 0!`); // eslint-disable-line\r\n                }\r\n\r\n                if (!directivesPosition.hasEachDirective && directivesPosition.hasIfDirective) {\r\n                    if (directivesPosition.hasEachDirective && directivesPosition.IfDirective !== 1) {\r\n                        console.warn(`DomDataBind: 'IfDirective' position in 'directives' array should be 1 (right after 'EachDirective')!`); // eslint-disable-line\r\n                    } else if (directivesPosition.IfDirective !== 0) {\r\n                        console.warn(`DomDataBind: 'IfDirective' position in 'directives' array should be 0!`); // eslint-disable-line\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        this._bindings = getBindingFor(this.ele.content, directives);\r\n    }\r\n\r\n    /**\r\n     * The template unique id\r\n     * @name Template#id\r\n     * @type {String}\r\n     */\r\n\r\n    /**\r\n     * The HTMLTemplateElement\r\n     * @name Template#ele\r\n     * @type {HTMLTemplateElement}\r\n     */\r\n}\r\nexport default Template;\r\n\r\n/**\r\n * Returns a Map() that includes the paths to nodes in the Dom template that\r\n * are using Directives or have bindings.\r\n * The map \"key\" is an array of `childNodes` paths from the root of the template\r\n * all the way to the node.\r\n * The map \"value\" is an array Directive instances for that node\r\n *\r\n * @return {Map}\r\n */\r\nexport function getBindingFor(ele, directives) {\r\n    // FIXME: refactor this entire function to be faster and more efficient\r\n\r\n\r\n    // template bindings Map() structure:\r\n    //\r\n    //      bindings = Map(\r\n    //          [path, via, childNodes, to, element]: [ directive instances ],\r\n    //          // example:\r\n    //          [0,1,3]: [ directiveInstance1, directiveInstance2 ]\r\n    //      )\r\n    //  }\r\n    //\r\n\r\n    // The goal is to be able to provide a path to each elements for which a group of directives will be applied.\r\n    const bindings          = new Map(); // FIXME: these can be global and reusable - since we only ever have one call in flight to this function\r\n    const eleToBindings     = new Map();\r\n    const ignoredChildren   = new Set();\r\n    let domEle;\r\n\r\n    // FIXME: convert to singleton function\r\n    //          Arguments should be:\r\n    //                  Directive, domEle, eleToBindings, ignoreChildren\r\n    //          Returns a boolean\r\n    const directiveIterator = Directive => {\r\n        let attrName;\r\n        let attrValue;\r\n        let managesNode;\r\n        let elePlaceholder = domEle;\r\n\r\n        while ((attrName = Directive.has(domEle))) {\r\n            attrValue = getAttribute(domEle, attrName);\r\n            managesNode = Directive.manages();\r\n\r\n            if (managesNode) {\r\n                elePlaceholder = createComment(\"\");\r\n            }\r\n\r\n            getArrayForNodeFromMap(eleToBindings, elePlaceholder).push(\r\n                getDirectiveForAttribute(Directive, attrName, attrValue)\r\n            );\r\n\r\n            removeAttribute(domEle, attrName);\r\n\r\n            if (managesNode) {\r\n                ignoredChildren.add(domEle);\r\n\r\n                // Replace this node with a Comment, and store the node's html\r\n                // as the comment data, which is then used by the directive instance\r\n                // to `render()` it to DOM when applicable\r\n                domEle.parentNode.insertBefore(elePlaceholder, domEle);\r\n                const fakeEle = createElement(\"div\");\r\n                fakeEle.appendChild(domEle);\r\n                elePlaceholder.data = fakeEle.innerHTML;\r\n            }\r\n        }\r\n        return managesNode;\r\n    };\r\n\r\n    // FIXME: convert to singleton Function\r\n    //          Arguments needed:\r\n    //              child, eleToBindings,\r\n    const processTextNode = child => {\r\n        if (hasToken(child)) {\r\n            reTokenMatch.lastIndex = 0;\r\n            let nodeValue = getNodeValue(child);\r\n            let childTokenMatches = reTokenMatch.exec(nodeValue);\r\n\r\n            while (childTokenMatches) {\r\n                // If no need to split the text node, then just create a binding for it and exit\r\n                if (nodeValue === \"{{\" + childTokenMatches[1] + \"}}\") {\r\n                    getArrayForNodeFromMap(eleToBindings, child).push(getTextBindingForToken(TextBinding, childTokenMatches[1]));\r\n                    childTokenMatches = null;\r\n                }\r\n                else {\r\n                    let tokenTextNode = nodeSplitText(child, childTokenMatches.index);\r\n\r\n                    // IF browser drops empty nodes, then fix the child node (which now is the left portion\r\n                    // of the split)\r\n                    if (DROPS_NODES_ON_CLONE) {\r\n                        fixEmptyTextNode(child);\r\n                    }\r\n\r\n                    // Split again at the end of token, so that we have a dedicated text node for the token value.\r\n                    // Because this will be used as a template, also need to replace this token value node\r\n                    // with an HTML comment, which will be replaced later during directive initialization\r\n                    // The remainder of the Text value is assigned back to `child` so that we can continue\r\n                    // to check it for other text tokens.\r\n                    child = nodeSplitText(tokenTextNode, childTokenMatches[0].length);\r\n                    const tokenPlaceholder = tokenTextNode.parentNode.insertBefore(createComment(UUID), tokenTextNode);\r\n                    tokenTextNode.parentNode.removeChild(tokenTextNode);\r\n\r\n                    getArrayForNodeFromMap(eleToBindings, tokenPlaceholder).push(getTextBindingForToken(TextBinding, childTokenMatches[1]));\r\n\r\n                    // Reset the regular expression (since `child` was also \"reset\") and execute\r\n                    // the regular expression again on the remaining text\r\n                    reTokenMatch.lastIndex = 0;\r\n                    childTokenMatches = reTokenMatch.exec(getNodeValue(child));\r\n\r\n                    if (!childTokenMatches && DROPS_NODES_ON_CLONE) {\r\n                        fixEmptyTextNode(child);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    // FIXME: convert to for() loop - Perf!\r\n    findAllNodes(ele).forEach(node => {\r\n        let skip = false;\r\n\r\n        if (ignoredChildren.size) {\r\n            for (let ignoredParent of ignoredChildren.values()) {\r\n                if (NODE_CONTAINS_MISSES_TEXT_NODES && node.nodeType === 3) {\r\n                    if (ignoredParent.compareDocumentPosition(node) & 16) {\r\n                        skip = true;\r\n                    }\r\n                }\r\n                else if (ignoredParent.contains(node)) {\r\n                    skip = true;\r\n                }\r\n\r\n                if (skip) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        domEle = node;\r\n\r\n        if (!skip) {\r\n            // Process Element level Directives\r\n            if (node.nodeType === 1) {\r\n                directives.some(directiveIterator);\r\n            }\r\n            // TEXT nodes\r\n            else if (node.nodeType === 3) {\r\n                processTextNode(node);\r\n            }\r\n        }\r\n    });\r\n\r\n    domEle = null;\r\n\r\n\r\n    // Create the list array of node indexes for each binding processed\r\n    eleToBindings.forEach((directiveBindings, bindingEle) => {\r\n        if (ele === bindingEle) {\r\n            bindings.set([], directiveBindings);\r\n            return;\r\n        }\r\n\r\n        const path  = [];\r\n        let walkEle = bindingEle;\r\n        let parent  = walkEle.parentNode;\r\n\r\n        while (walkEle !== ele) {\r\n            path.unshift(path.indexOf.call(parent.childNodes, walkEle));\r\n            walkEle = walkEle.parentNode;\r\n            parent  = walkEle.parentNode;\r\n        }\r\n\r\n        bindings.set(path, directiveBindings);\r\n    });\r\n\r\n    eleToBindings.clear();\r\n    ignoredChildren.clear();\r\n\r\n    return bindings;\r\n}\r\n\r\n/**\r\n * Applies the bindings in the given Map to the DocumentFragment provided on input.\r\n *\r\n * @param {DocumentFragment} frag\r\n * @param {Map<Array<Number>, Array<Directive>>} bindings\r\n * @param {Array<Directive>} Directives\r\n *\r\n * @return {Array<NodeHandler>}\r\n *  An array of Node directive handlers is returned.\r\n */\r\nexport function applyBindingsToTemplateInstance(frag, bindings, Directives) {\r\n    const response = [];\r\n\r\n    bindings.forEach((directivesInstances, path) => {\r\n        const node = getNodeAt(frag, path);\r\n        if (!node) {\r\n            logError(new Error(`dom-data-bind#render(): Unable to find node!`));\r\n            return;\r\n        }\r\n\r\n        for (let i=0, t=directivesInstances.length; i < t; i++) {\r\n            response.push(directivesInstances[i].getNodeHandler(node, Directives));\r\n        }\r\n    });\r\n\r\n    return response;\r\n}\r\n\r\nfunction getNodeAt(root, path) {\r\n    if (!path.length) {\r\n        return root;\r\n    }\r\n    // FIXME: use for loop here.\r\n    arrayForEach(path, index => root = root.childNodes[index]);\r\n    return root;\r\n}\r\n\r\nfunction getArrayForNodeFromMap(map, node) {\r\n    if (!map.has(node)) {\r\n        map.set(node, []);\r\n    }\r\n    return map.get(node);\r\n}\r\n\r\n/**\r\n * Returns a node handlers for the given directive\r\n *\r\n * @param {Directive} Directive\r\n * @param {String} tokenText\r\n *  The token text (no curly braces)\r\n *\r\n * @returns {Directive}\r\n *  Returns a Directive instance. Call `.getNodeHandler` to get a handler for a given node\r\n */\r\nfunction getTextBindingForToken(Directive, tokenText) {\r\n    tokenText = tokenText.trim();\r\n\r\n    let directiveInstances = PRIVATE.get(Directive);\r\n\r\n    if (!directiveInstances) {\r\n        directiveInstances = {};\r\n        PRIVATE.set(Directive, directiveInstances);\r\n    }\r\n\r\n    if (!directiveInstances[tokenText]) {\r\n        directiveInstances[tokenText] = new Directive(tokenText);\r\n    }\r\n\r\n    return directiveInstances[tokenText];\r\n}\r\n\r\nfunction getDirectiveForAttribute (Directive, attrName, attrValue) {\r\n    attrValue = attrValue.trim();\r\n\r\n    const directiveSignature    = `${attrName}-${ UUID }-${ attrValue }`;\r\n    let directiveInstances      = PRIVATE.get(Directive);\r\n\r\n    if (!directiveInstances) {\r\n        directiveInstances = {};\r\n        PRIVATE.set(Directive, directiveInstances);\r\n    }\r\n\r\n    if (!directiveInstances[directiveSignature]) {\r\n        directiveInstances[directiveSignature] = new Directive(attrName, attrValue);\r\n    }\r\n\r\n    return directiveInstances[directiveSignature];\r\n}\r\n\r\n/**\r\n *\r\n * @private\r\n * @param {HTMLElement} ele\r\n * @returns {boolean}\r\n */\r\nfunction onlyElementsWithAttributes(ele/*, index, arr*/) {\r\n    return ele.nodeType !== 1 || (ele.nodeType === 1 && ele.attributes.length > 0);\r\n}\r\n\r\n/**\r\n *\r\n * @private\r\n * @param {Array} resultArr\r\n * @param {HTMLElement} ele\r\n * @returns {Array}\r\n */\r\nfunction addTextNodes(resultArr, ele /*, index, arr*/) {\r\n    resultArr.push(ele);\r\n    if (ele.hasChildNodes()) {\r\n        ele = ele.firstChild;\r\n        for (;ele;) {\r\n            const nextSibling = ele.nextSibling;\r\n\r\n            // IF Text node and it has the token\r\n            if (ele.nodeType === 3 && !!ele.nodeValue && reHasDataToken.test(getNodeValue(ele))) {\r\n                resultArr.push(ele);\r\n            }\r\n\r\n            if (DROPS_NODES_ON_CLONE) {\r\n                fixEmptyTextNode(ele);\r\n            }\r\n\r\n            ele = nextSibling;\r\n        }\r\n    }\r\n    return resultArr;\r\n}\r\n\r\nfunction fixEmptyTextNode(node) {\r\n    if (node.nodeType === 3 && DROPS_NODES_ON_CLONE && !node.nodeValue) {\r\n        node.parentNode.insertBefore(createComment(\"\"), node);\r\n        node.parentNode.removeChild(node);\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n * @private\r\n * @param {HTMLElement} ele\r\n *\r\n * @return {Array<Node>}\r\n */\r\nfunction findAllNodes(ele) {\r\n    return [ele]\r\n        .concat(domFind(ele, \"*\"))\r\n        .reduce(addTextNodes, [])\r\n        .filter(onlyElementsWithAttributes);\r\n}\r\n\r\n\r\n","import Template from \"./Template.js\"\r\nimport {isString} from \"./utils.js\";\r\nimport {isTemplate} from \"./utils.js\";\r\n\r\n\r\n//==========================================================================\r\n// Keeps a map between `html string` and `Template` instance\r\nconst TEMPLATES = new Map();\r\n\r\n/**\r\n * Create a UI view template for the given html string. Returned view (Template) are cached (memoized)\r\n * and thus a previously view template will just return the previous Template instance\r\n *\r\n * @param {String|HTMLTemplateElement} html\r\n * @param {Array<Directive>} directives\r\n *\r\n * @returns {HTMLTemplateElement}\r\n */\r\nexport function view(html, directives = view.directives || []) {\r\n    const isHtmlString = isString(html);\r\n    const cacheKey = isHtmlString ? html : html.innerHTML;\r\n\r\n    if (!hasTemplate(cacheKey)) {\r\n        TEMPLATES.set(\r\n            cacheKey,\r\n            new Template(html, directives)\r\n        );\r\n    }\r\n\r\n    // DEVELOPMENT MODE (is removed during webpack build)\r\n    if (process.env.NODE_ENV !== \"production\") {\r\n        if (!isString(html) && !isTemplate(html)) {\r\n            console.warn(`dom-data-bind.view(): 'html' argument must be either String or HTMLTemplateElement!`); //eslint-disable-line\r\n        }\r\n    }\r\n\r\n    return TEMPLATES.get(cacheKey);\r\n}\r\n\r\n/**\r\n * A list of directives that might be used in views. Used as the default value to the\r\n * `directives` input argument of `view()`.\r\n *\r\n * @type {Array<Directive>>|null}\r\n */\r\nview.directives = null;\r\n\r\n/**\r\n * Checks if a view template already exists for the given html\r\n *\r\n * @type {function(*=): boolean}\r\n */\r\nview.has = hasTemplate;\r\n\r\n/**\r\n * Checks if a view template already exists for the given html\r\n * @param html\r\n * @returns {boolean}\r\n */\r\nfunction hasTemplate(html) {\r\n    return TEMPLATES.has(html);\r\n}\r\n","import {arraySlice} from \"./utils.js\";\r\n\r\n/**\r\n * Interface for a template instance.\r\n */\r\nexport class TemplateInstance {\r\n    /**\r\n     *\r\n     * @param {DocumentFragment} docFrag\r\n     * @param {Array<NodeHandler>} bindings\r\n     * @param {String} [templateId]\r\n     */\r\n    constructor(docFrag, bindings, templateId = \"\") {\r\n        this._frag = docFrag;\r\n        this._bindings = bindings;\r\n        this._childNodes = arraySlice(docFrag.childNodes, 0);\r\n        this.fromTemplateId = templateId;\r\n    }\r\n\r\n    /**\r\n     * Recovers the original nodes rendered from the template into\r\n     * the DocumentFragment\r\n     */\r\n    recover() {\r\n        this._childNodes.forEach(nodeEle => this._frag.appendChild(nodeEle));\r\n    }\r\n\r\n    /**\r\n     * Destroys all bindings of the Template\r\n     */\r\n    destroy() {\r\n        if (this._bindings) {\r\n            for (let i = 0, t = this._bindings.length; i < t; i++) {\r\n                this._bindings[i].destroy();\r\n            }\r\n            this._bindings.length = 0;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets data on the Template by passing it to all directives to act on.\r\n     * @param data\r\n     */\r\n    setData(data) {\r\n        for (let i = 0, t = this._bindings.length; i < t; i++) {\r\n            this._bindings[i].render(data);\r\n        }\r\n    }\r\n}\r\n","import {view} from \"./view.js\";\r\nimport {DOM_DATA_BIND_PROP} from \"./utils.js\";\r\nimport {TemplateInstance} from \"./TemplateInstance.js\";\r\nimport {applyBindingsToTemplateInstance, Template} from \"./Template.js\";\r\n\r\n\r\n//==========================================================================\r\n\r\n/**\r\n * Returns a DocumentFragment representation of the given `html` code provided on\r\n * input bound to the given data.\r\n *\r\n * @param {String|HTMLTemplateElement|Template} html\r\n * @param {Object} [data]\r\n * @param {Array<Directive>} [directives]\r\n *\r\n * @return {DocumentFragment}\r\n *  Document Fragment returned will have a property named 'DomDataBind', which is\r\n *  a TemplateInstance class instance\r\n */\r\nexport function render(html, data, directives) {\r\n    const viewTemplate = html instanceof Template ? html : view(html, directives);\r\n    const response = document.importNode(viewTemplate.ele.content, true);\r\n\r\n    response[DOM_DATA_BIND_PROP] = new TemplateInstance(\r\n        response,\r\n        applyBindingsToTemplateInstance(response, viewTemplate._bindings, viewTemplate._directives),\r\n        viewTemplate.id\r\n    );\r\n    response[DOM_DATA_BIND_PROP].setData(data);\r\n    return response;\r\n}\r\n\r\nexport default render;\r\n","import Compose from \"@purtuga/common/src/jsutils/Compose\"\r\nimport { PRIVATE, arrayForEach, isString } from \"./utils\"\r\nimport { getBindingFor, applyBindingsToTemplateInstance } from \"./Template\"\r\nimport { render } from \"./render\";\r\n\r\n//======================================================================\r\n\r\n/**\r\n * Bind data to a DOM element and automatically persist changes in that data to the UI.\r\n * By default, this constructor provides interpolation of Text tokens found in the DOM\r\n * structure (represented with double curly braces: `{{ }}`). Directives can be used\r\n * by extending this constructor and adding them to the [directives]{@link DomDataBind.directives}\r\n * static property.\r\n *\r\n * @class DomDataBind\r\n * @extends Compose\r\n *\r\n * @param {String |HTMLElement} html\r\n *  The HTML element that will be view and to which `data` will be bound.\r\n *\r\n * @param {Object} data\r\n *  An object whose data will be used to bind to `html` element (once crated) .\r\n *\r\n */\r\nexport const DomDataBind = Compose.extend({\r\n    /**\r\n     * The Element whose data was bound to.\r\n     * When a string is used on input, this will be a DocumentFragment, which\r\n     * means that it could be empty if its content was inserted into DOM\r\n     */\r\n    $ele: null,\r\n\r\n    init(html, data) {\r\n        const Factory = this.getFactory();\r\n        const state = {\r\n            html,\r\n            data,\r\n            directives: Factory.directives.slice(0)\r\n        };\r\n\r\n        PRIVATE.set(this, state);\r\n\r\n        if (isString(html)) {\r\n            this.$ele = render(html, data, state.directives);\r\n            state.bindings = this.$ele._bindings;\r\n        } else {\r\n            this.$ele = html;\r\n            state.bindings = applyBindingsToTemplateInstance(html, getBindingFor(html, state.directives), state.directives);\r\n            if (data) {\r\n                this.setData(data);\r\n            }\r\n        }\r\n\r\n        this.onDestroy(() => {\r\n            arrayForEach(state.bindings, binding => binding.destroy());\r\n\r\n            delete state.data;\r\n            delete state.directives;\r\n            delete state.bindings;\r\n\r\n            Factory.getDestroyCallback(state, PRIVATE)();\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Set data on to the DOM provided during initialization.\r\n     * In most cases, you should never have the need to call this method. Data\r\n     * provided during initialization is \"live\" and changes are automatically\r\n     * reflected to dom.\r\n     */\r\n    setData(data) {\r\n        const bindings = PRIVATE.get(this).bindings;\r\n        arrayForEach(bindings, binding => binding.render(data));\r\n    }\r\n});\r\nexport default DomDataBind;\r\n\r\n/**\r\n * A list of Directives to be used.\r\n *\r\n * @name DomDataBind.directives\r\n * @type {Array}\r\n */\r\nDomDataBind.directives = [];\r\n","import Directive                from \"./Directive\"\r\nimport {\r\n    PRIVATE,\r\n    removeAttribute,\r\n    setAttribute,\r\n    createValueGetter,\r\n    getNodeAttrNames } from \"../utils\"\r\nimport {NodeHandler} from \"./NodeHandler.js\";\r\n\r\n//============================================\r\nconst attrRegExp = /^_attr\\.(.*)/;\r\n\r\nexport class AttrDirective extends Directive {\r\n    static NodeHandlerConstructor = class extends NodeHandler {\r\n        update(newValue) {\r\n            const state = PRIVATE.get(this);\r\n            const _htmlAttr = this._directive._htmlAttr;\r\n\r\n            if (this._directive.constructor._isProp) {\r\n                if (newValue !== state.value) {\r\n                    this._node[_htmlAttr] = newValue;\r\n                }\r\n            }\r\n            else {\r\n                if (newValue && state.value !== newValue) {\r\n                    setAttribute(this._node, _htmlAttr, newValue);\r\n                }\r\n                else if (state.value && !newValue) {\r\n                    removeAttribute(this._node, _htmlAttr);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    static _matches = attrRegExp;\r\n\r\n    static _isProp = false;\r\n\r\n    static has(ele) {\r\n        let directiveAttr = \"\";\r\n        getNodeAttrNames(ele).some(attr => this._matches.test(attr) && (directiveAttr = attr));\r\n        return directiveAttr;\r\n    }\r\n\r\n    init(attr, attrValue) {\r\n        this._attr              = attr;\r\n        this._tokenValueGetter  = createValueGetter((attrValue || \"\"), \"attr\");\r\n        this._htmlAttr          = (new RegExp(this.constructor._matches)).exec(attr)[1];\r\n    }\r\n}\r\n\r\nexport default AttrDirective;\r\n","/**\r\n * Check if an element has a given class\r\n *\r\n * @function domHasClass\r\n *\r\n * @param {HTMLElement} el\r\n * @param {String} cssClass\r\n *\r\n * @return {Boolean}\r\n */\r\nexport function domHasClass(el, cssClass){\r\n    if (el && cssClass) {\r\n        return el.classList.contains(cssClass);\r\n    }\r\n    return false;\r\n}\r\nexport default domHasClass;\r\n","/**\r\n * Adds class to an element\r\n *\r\n * @function domAddClass\r\n *\r\n * @param {HTMLElement} el\r\n * @param {String} cssClass\r\n *  Multiple classes can be set using spaces as a delimiter\r\n */\r\nexport function domAddClass(el, cssClass){\r\n    let classNameList = String(cssClass).trim().split(/\\s+/).map(className => className.trim());\r\n    if (el && classNameList.length) {\r\n        classNameList.forEach((cssClass) => el.classList.add(cssClass));\r\n    }\r\n}\r\nexport default domAddClass;","/**\r\n * removes a class from an element\r\n *\r\n * @function domRemoveClass\r\n *\r\n * @param {HTMLElement} el\r\n * @param {String} cssClass\r\n */\r\nexport function domRemoveClass(el, cssClass){\r\n    return el.classList.remove(cssClass);\r\n}\r\nexport default domRemoveClass;","import domHasClass      from \"@purtuga/common/src/domutils/domHasClass\"\r\nimport domAddClass      from \"@purtuga/common/src/domutils/domAddClass\"\r\nimport domRemoveClass   from \"@purtuga/common/src/domutils/domRemoveClass\"\r\nimport Directive        from \"./Directive\"\r\nimport {\r\n    PRIVATE,\r\n    createValueGetter,\r\n    hasAttribute  } from \"../utils\"\r\nimport {NodeHandler} from \"./NodeHandler.js\";\r\n\r\n//============================================\r\nconst DIRECTIVE = \"_class\";\r\n\r\nexport class ClassDirective extends Directive {\r\n    static NodeHandlerConstructor = class ClassDirectiveNodeHandler extends NodeHandler {\r\n        update(newClasses) {\r\n            const { _node: node } = this;\r\n            const oldClasses = PRIVATE.get(this).value || {};\r\n\r\n            Object.keys(newClasses)\r\n                .concat(Object.keys(oldClasses))\r\n                .forEach(className => {\r\n                    if (newClasses[className] && !domHasClass(node, className)) {\r\n                        domAddClass(node, className);\r\n                    }\r\n                    else if (!newClasses[className] && domHasClass(node, className)) {\r\n                        domRemoveClass(node, className);\r\n                    }\r\n                });\r\n        }\r\n    };\r\n\r\n    static has(ele) {\r\n        return hasAttribute(ele, DIRECTIVE) ? DIRECTIVE : \"\";\r\n    }\r\n\r\n    init(attr, attrValue) {\r\n        this._attr              = attr;\r\n        this._tokenValueGetter  = createValueGetter((attrValue || \"\"), \"class\");\r\n    }\r\n}\r\n\r\nexport default ClassDirective;\r\n\r\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import Map from \"@purtuga/common/src/jsutils/es6-Map\"\r\nimport {domInsertBefore} from \"@purtuga/common/src/domutils/domInsertBefore.js\"\r\nimport {\r\n    arraySplice,\r\n    isArray,\r\n    objectKeys\r\n} from \"@purtuga/common/src/jsutils/runtime-aliases.js\"\r\nimport Directive from \"./Directive\"\r\nimport {\r\n    arrayForEach,\r\n    createComment,\r\n    createValueGetter,\r\n    DOM_DATA_BIND_PROP,\r\n    getAttribute,\r\n    hasAttribute,\r\n    isPureObject,\r\n    PRIVATE,\r\n    removeAttribute,\r\n    removeChild\r\n} from \"../utils\"\r\n\r\nimport {render} from \"../render\";\r\nimport {view} from \"../view.js\";\r\nimport {NodeHandler} from \"./NodeHandler.js\";\r\n\r\n//============================================\r\nconst EACH = Symbol(\"directive.each.setup\");\r\nconst DIRECTIVE     = \"_each\";\r\nconst KEY_DIRECTIVE = \"_key\";\r\nconst destroyBinder = binder => binder._destroy();\r\nconst defaultRowKey = data => data;\r\nconst isEmptyList   = list => (isArray(list) && !list.length) || (isPureObject(list) && !objectKeys(list).length);\r\n\r\nclass EachDirectiveNodeHandler extends NodeHandler {\r\n\r\n    binders = [];\r\n\r\n    bindersByKey = new Map();\r\n\r\n    listIterator = () => this._directive.iterateOverList(this, PRIVATE.get(this).value);\r\n\r\n    init(directive, node, directives) {\r\n        super.init(directive, node, directives);\r\n        this._placeholderEle = createComment(\"directive.each\");\r\n        this._isSoleChild = hasDedicatedParent(this._node);\r\n\r\n        // create the template for the row content, which is stored in the Comment node data\r\n        this._viewTemplate = view(node.data, directives);\r\n        if (!this._viewTemplate[EACH]) {\r\n            setupViewTemplate(this._viewTemplate);\r\n        }\r\n\r\n        domInsertBefore(this._placeholderEle, node);\r\n        removeChild(node.parentNode, node);\r\n    }\r\n\r\n\r\n    update(newList) {\r\n        const state = PRIVATE.get(this);\r\n\r\n        if (newList !== state.value) {\r\n            state.value = null;\r\n\r\n            if (this.listIterator.stopWatchingAll) {\r\n                this.listIterator.stopWatchingAll();\r\n            }\r\n        }\r\n\r\n        if (!newList) {\r\n            this._directive.destroyChildBinders(this.binders, this);\r\n            return;\r\n        }\r\n\r\n        state.value = newList;\r\n\r\n        if (isEmptyList(newList) && this.binders) {\r\n            this._directive.destroyChildBinders(this.binders, this);\r\n        }\r\n        else {\r\n            this.listIterator();\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        // Support for Observables\r\n        if (this.listIterator.stopWatchingAll) {\r\n            this.listIterator.stopWatchingAll();\r\n        }\r\n        this.bindersByKey.clear();\r\n        this._directive.destroyChildBinders(this.binders, this);\r\n        super.destroy();\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Directive to loop through an array or object. In addition, it also support an\r\n * internal binding directive called `b:key`\r\n *\r\n * @class EachDirective\r\n * @extends Directive\r\n *\r\n * @example\r\n *\r\n * // Use with array:\r\n * _each=\"item of arrayList\"\r\n * _each=\"(item, index) of arrayList\"\r\n *\r\n * // Use with Object\r\n * _each=\"value of objectList\"\r\n * _each=\"(value, key) of objectList\"\r\n */\r\nexport class EachDirective extends Directive {\r\n    static NodeHandlerConstructor = EachDirectiveNodeHandler;\r\n\r\n    static has(ele) {\r\n        return hasAttribute(ele, DIRECTIVE) ? DIRECTIVE : \"\";\r\n    }\r\n\r\n    static manages() { return true; }\r\n\r\n    init(attr, attrValue) {\r\n        const [ iteratorArgs, listVar ] = parseDirectiveValue((attrValue || \"\").trim());\r\n        this._attr              = attr;\r\n        this._iteratorArgs      = iteratorArgs;\r\n        this._tokenValueGetter  = createValueGetter((listVar || \"\"), \"each\");\r\n    }\r\n\r\n    /**\r\n     * Destroy the binder instances and remove Elements from DOM.\r\n     *\r\n     * @param binders\r\n     * @param handler\r\n     */\r\n    destroyChildBinders(binders, handler) {\r\n        if (!binders || !binders.length) {\r\n            return;\r\n        }\r\n\r\n        binders = binders.splice(0);\r\n\r\n        if (handler._isSoleChild) { // Supper fast way to just clear the UI\r\n            const parentEle = handler._placeholderEle.parentNode;\r\n            parentEle.textContent = \"\";\r\n            parentEle.appendChild(handler._placeholderEle);\r\n            setTimeout(() => {\r\n                arrayForEach(binders, binder => binder._destroy());\r\n            });\r\n        }\r\n        else {\r\n            arrayForEach(binders, binder => binder._destroy());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns an object (`dataObj` if provided on input) with additional keys - each\r\n     * one being the argNames that the user defined in their HTML `_each` template.\r\n     *\r\n     * It essentially matches up two array by using the keys from one array and mapping to\r\n     * values from the second array at exactly the same location.\r\n     * Example:\r\n     *\r\n     *      _each=\"item in arrayList\"\r\n     *      arrayList = [ \"value 1\" ]\r\n     *\r\n     *      // Array Keys           // Array values             // result: object\r\n     *      // Defined in the       // Data in actual           // Matches the key\r\n     *      // template             // Array                    // to the data\r\n     *      //-------------------   //-----------------         //---------------------\r\n     *      [                       [                   ===     {\r\n     *          \"item\"                  \"value 1\"       ===         item: \"value1\"\r\n     *      ]                       ]                   ===     }\r\n     *\r\n     * @param {Array} values\r\n     * @param {Object} [dataObj]\r\n     *\r\n     * @returns {Object}\r\n     */\r\n    getDataForIteration(values, dataObj) {\r\n        return this._iteratorArgs.reduce(\r\n            (rowData, argName) => {\r\n                rowData[argName] = values.shift();\r\n                return rowData;\r\n            },\r\n            dataObj || {}\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Iterates over a new set (list) and eitehr updates or builds out new elements for each item\r\n     * in that list.\r\n     *\r\n     * @param handler\r\n     * @param newData\r\n     */\r\n    iterateOverList(handler, newData) {\r\n        /** @type NodeHandlerState */\r\n        const state = PRIVATE.get(handler);\r\n        let isDataArray             = isArray(newData);\r\n        let iterationDataList;\r\n\r\n\r\n        if (isDataArray) {\r\n            isDataArray = true;\r\n            iterationDataList = newData;\r\n        }\r\n        else if (isPureObject(newData)) {\r\n            iterationDataList = objectKeys(newData);\r\n        } else {\r\n            return;\r\n        }\r\n\r\n        const currentBinders        = handler.binders;\r\n        const binderToBeDestroyed   = new Map();    // Will be recycled\r\n        const totalItems            = iterationDataList.length;\r\n        const { usesKey, getKey }   = handler._viewTemplate[EACH];\r\n\r\n        // Loop through each piece of data and build a DOM binder for it.\r\n        // The data should be in sync with `currentBinders`\r\n        for (let i = 0; i < totalItems; i++) {\r\n            let rowData = { // FIXME: can this object creation be avoided? For Arrays - it should be possible. Objects - not sure.\r\n                $root: state.data.$root || state.data,\r\n                $parent: state.data,\r\n                $data: state.data.$data || state.data\r\n            };\r\n\r\n            // Adjust the rowData to have the `key` and/or `value` and `index` as top level items\r\n            // These are added to the rowData object just created above.\r\n            if (isDataArray) {\r\n                this.getDataForIteration([ iterationDataList[i], i ], rowData);\r\n            }\r\n            else {\r\n                this.getDataForIteration([ newData[ iterationDataList[i] ], iterationDataList[i], i ], rowData);\r\n            }\r\n\r\n            const rowKey = getKey(\r\n                usesKey\r\n                    ? rowData                               // => Use rowData created above - getKey() will run a value getter on it.\r\n                    : isDataArray\r\n                        ? iterationDataList[i]              // => Use the object from the newData\r\n                        : newData[ iterationDataList[i] ]   // => Use the Object key\r\n            );\r\n\r\n            // If a binder currently exists, then see if it is the one previously\r\n            // created for this row's data\r\n            if (currentBinders[i] && currentBinders[i]._loop.rowKey === rowKey) {\r\n                currentBinders[i][DOM_DATA_BIND_PROP].setData(rowData);\r\n                continue;\r\n            }\r\n\r\n            // If there is a binder at the current position, then its not the one need.\r\n            // move it to the `to be destroyed` list.\r\n            if (currentBinders[i]) {\r\n                currentBinders[i][DOM_DATA_BIND_PROP].recover();\r\n                binderToBeDestroyed.set(\r\n                    currentBinders[i]._loop.rowKey,\r\n                    currentBinders[i]\r\n                );\r\n                currentBinders[i] = null;\r\n            }\r\n\r\n            // Do we have a rowBinder for this data item in the existing list,\r\n            // but perhaps at a different location? Get it and move it to the new position.\r\n            // Old position in the existing array is set to null (avoids mutating array)\r\n            let binder = handler.bindersByKey.get(rowKey);\r\n\r\n            if (binder) {\r\n                if (binder._loop.pos !== null && currentBinders[binder._loop.pos] === binder) {\r\n                    currentBinders[binder._loop.pos] = null;\r\n                }\r\n            } else {\r\n                binder = binderToBeDestroyed.get(rowKey);\r\n\r\n                if (binder) {\r\n                    binderToBeDestroyed.delete(rowKey);\r\n                }\r\n            }\r\n\r\n            if (binder) {\r\n                currentBinders[i] = binder;\r\n                binder._loop.pos = i;\r\n                currentBinders[i][DOM_DATA_BIND_PROP].recover();\r\n                positionRowInDom(currentBinders, i, handler._placeholderEle);\r\n                currentBinders[i][DOM_DATA_BIND_PROP].setData(rowData);\r\n                continue;\r\n            }\r\n\r\n            // Create new binder\r\n            // First check if we can recycle one that is tagged to be destroyed.\r\n            // if not, then create a new one.\r\n            if (binderToBeDestroyed.size) {\r\n                const [recycleBinderKey, recycleBinder] = binderToBeDestroyed.entries().next().value;\r\n                binder = recycleBinder;\r\n                binder[DOM_DATA_BIND_PROP].setData(rowData);\r\n                binderToBeDestroyed.delete(recycleBinderKey);\r\n                binder._loop.rowKey = rowKey;\r\n                binder._loop.pos = i;\r\n            } else {\r\n                binder = render(handler._viewTemplate, rowData, handler._directives);\r\n                binder._destroy = destroyRowElement;\r\n                binder._handler = handler; // needed by destroyRowElement()\r\n                binder._loop  = { rowKey, pos: i };\r\n            }\r\n\r\n            currentBinders[i] = binder;\r\n            handler.bindersByKey.set(rowKey, binder);\r\n            positionRowInDom(currentBinders, i, handler._placeholderEle);\r\n        }\r\n\r\n        // Destroy binders that were not used\r\n        if (binderToBeDestroyed.size) {\r\n            arrayForEach(binderToBeDestroyed.values(), destroyBinder);\r\n            binderToBeDestroyed.clear();\r\n        }\r\n\r\n        // remove any left over items in currentBinders where is no longer part of newData\r\n        if (totalItems < currentBinders.length) {\r\n            arrayForEach(arraySplice(currentBinders, totalItems), destroyBinder);\r\n        }\r\n    }\r\n}\r\n\r\nfunction setupViewTemplate (viewTemplate) {\r\n    if (!viewTemplate[EACH]) {\r\n        viewTemplate[EACH] = {\r\n            usesKey: false,\r\n            getKey: defaultRowKey\r\n        };\r\n        const firstChildNode = viewTemplate.ele.content.firstChild;\r\n\r\n        if (\r\n            firstChildNode &&\r\n            firstChildNode.hasAttribute &&\r\n            hasAttribute(firstChildNode, KEY_DIRECTIVE)\r\n        ) {\r\n            viewTemplate[EACH].usesKey = true;\r\n            viewTemplate[EACH].getKey = createValueGetter(getAttribute(firstChildNode, KEY_DIRECTIVE), \"each.key\");\r\n            removeAttribute(firstChildNode, KEY_DIRECTIVE);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction positionRowInDom(currentBinders, binderIndex, defaultInsertMarkerElement) {\r\n    const binder = currentBinders[binderIndex];\r\n\r\n    // Get all original nodes from binder back to the DocumentFragment\r\n    binder[DOM_DATA_BIND_PROP].recover();\r\n\r\n    // If we have a binder after this one, then do an insertBefore using the first node of the nextSibling\r\n    if (currentBinders[binderIndex + 1]) {\r\n        domInsertBefore(binder, currentBinders[binderIndex + 1][DOM_DATA_BIND_PROP]._childNodes[0]);\r\n    } else {\r\n        // Just place the binder before the marker\r\n        domInsertBefore(binder, defaultInsertMarkerElement);\r\n    }\r\n}\r\n\r\nfunction destroyRowElement () {\r\n    // remove all elements/nodes of this row from DOM\r\n    this[DOM_DATA_BIND_PROP].recover();\r\n\r\n    if (this._loop.rowKey) {\r\n        this._handler.bindersByKey.delete(this._loop.rowKey);\r\n    }\r\n\r\n    this[DOM_DATA_BIND_PROP].destroy();\r\n}\r\n\r\nfunction parseDirectiveValue(attrValue) {\r\n    let matches = /\\(?(.+?)\\)?\\W?(?:of|in)\\W(.*)/.exec(attrValue);\r\n    if (matches) {\r\n        matches = matches.slice(1);\r\n        matches[0] = matches[0].split(/,/).map(argName => String(argName).trim());\r\n        return matches;\r\n    }\r\n    return [];\r\n}\r\n\r\nfunction hasDedicatedParent(node) {\r\n    return Array.prototype.every.call(node.parentNode.childNodes, childNode => {\r\n        return childNode === node || (childNode.nodeType === 3 && !childNode.textContent.trim());\r\n    });\r\n}\r\n\r\n\r\nexport default EachDirective;\r\n","import Directive                from \"./Directive\"\r\nimport {\r\n    PRIVATE,\r\n    createValueGetter,\r\n    hasAttribute } from \"../utils\"\r\nimport {NodeHandler} from \"./NodeHandler.js\";\r\n//============================================\r\nconst DIRECTIVE = \"_html\";\r\n\r\nexport class HtmlDirective extends Directive {\r\n    static NodeHandlerConstructor = class extends NodeHandler {\r\n        update(newValue) {\r\n            if (newValue === PRIVATE.get(this).value) {\r\n                return;\r\n            }\r\n\r\n            this._node.innerHTML = newValue;\r\n        }\r\n    };\r\n\r\n    static has(ele) {\r\n        return hasAttribute(ele, DIRECTIVE) ? DIRECTIVE : \"\";\r\n    }\r\n\r\n    init(attr, attrValue) {\r\n        this._attr              = attr;\r\n        this._tokenValueGetter  = createValueGetter((attrValue || \"\"), \"html\");\r\n    }\r\n}\r\n\r\nexport default HtmlDirective;\r\n\r\n","import Directive    from \"./Directive\"\r\nimport {\r\n    PRIVATE,\r\n    DOM_DATA_BIND_PROP,\r\n    hasAttribute,\r\n    createComment,\r\n    removeChild,\r\n    createValueGetter } from \"../utils\"\r\nimport {render} from \"../render\"\r\nimport {NodeHandler} from \"./NodeHandler.js\";\r\nimport {domInsertBefore} from \"@purtuga/common/src/domutils/domInsertBefore.js\"\r\n\r\n//============================================\r\nconst DIRECTIVE = \"_if\";\r\n\r\nexport class IfDirective extends Directive {\r\n    static NodeHandlerConstructor = class extends NodeHandler {\r\n\r\n        _renderedEle = null;\r\n\r\n        _renderTemplate = this._node.data;\r\n\r\n        init(...args) {\r\n            super.init(...args);\r\n            this._placeholderEle = createComment(\"directive.if\");\r\n            domInsertBefore(this._placeholderEle, this._node);\r\n            removeChild(this._node.parentNode, this._node);\r\n        }\r\n        update(showElement) {\r\n            const state = PRIVATE.get(this);\r\n\r\n            // If there is no change in Element visibility, then only update its data.\r\n            if (state.value === showElement) {\r\n                if (this._renderedEle) {\r\n                    this._renderedEle[DOM_DATA_BIND_PROP].setData(state.data);\r\n                }\r\n                return;\r\n            }\r\n\r\n            if (showElement && !this._renderedEle) {\r\n                this._renderedEle = render(this._renderTemplate, state.data, this._directives);\r\n                domInsertBefore(this._renderedEle, this._placeholderEle);\r\n            } else if (!showElement)  {\r\n                this.destroy_renderedEle();\r\n            }\r\n        }\r\n\r\n        destroy_renderedEle() {\r\n            if (this._renderedEle) {\r\n                this._renderedEle[DOM_DATA_BIND_PROP].recover();\r\n                this._renderedEle[DOM_DATA_BIND_PROP].destroy();\r\n                this._renderedEle = null;\r\n            }\r\n        }\r\n    };\r\n\r\n    static has(ele) {\r\n        return hasAttribute(ele, DIRECTIVE) ? DIRECTIVE : \"\";\r\n    }\r\n\r\n    static manages() { return true; }\r\n\r\n    init(attr, attrValue) {\r\n        this._attr              = attr;\r\n        this._tokenValueGetter  = createValueGetter((attrValue || \"\"), \"if\");\r\n    }\r\n}\r\n\r\nexport default IfDirective;\r\n","/**\r\n * Adds an event handler to a DOM element and returns back an\r\n * object that allows for removal of the event.\r\n *\r\n * @function domAddEventListener\r\n *\r\n * @param {HTMLElement} ele\r\n * @param {String} event\r\n *  The event to listen to (ex. `click`). Multiple events can be defined\r\n *  by separating them with whitespace\r\n * @param {Function} callback\r\n * @param {Boolean} [capture]\r\n *\r\n * @return DOMEventListener\r\n *\r\n * @example\r\n *\r\n * var listener = domAddEventHandler(myEle, \"click\", function(){});\r\n * ...\r\n * listener.remove();\r\n */\r\nexport function domAddEventListener(ele, event, callback, capture) {\r\n    let events      = event.split(/\\s+/);\r\n    let evListeners = {};\r\n\r\n    events.forEach(evName => {\r\n        ele.addEventListener(evName, callback, capture);\r\n        evListeners[evName] = {\r\n            remove: () => ele.removeEventListener(evName, callback, capture)\r\n        }\r\n    });\r\n\r\n    /**\r\n     * A DOM Event listener.\r\n     *\r\n     * @typedef {Object} DOMEventListener\r\n     *\r\n     * @property {Function} remove\r\n     * @property {Object} listeners\r\n     *  List of listeners that were bound to the DOM element. Each listeners has a\r\n     *  corresponding `.remove()` method.\r\n     */\r\n    return Object.create({\r\n        listeners: evListeners,\r\n        remove: function () {\r\n            events.forEach(evName => evListeners[evName].remove());\r\n        }\r\n    });\r\n}\r\nexport default domAddEventListener;\r\n","import domAddEventListener  from \"@purtuga/common/src/domutils/domAddEventListener\"\r\nimport Directive            from \"./Directive\"\r\nimport {\r\n    PRIVATE,\r\n    escapeString,\r\n    createValueGetter,\r\n    getNodeAttrNames,\r\n    logError } from \"../utils\"\r\n\r\n//============================================\r\nconst DIRECTIVE             = \"_on.\";\r\nconst matchesDirective      = new RegExp(`^${ escapeString(DIRECTIVE) }(.*)`);\r\n\r\nexport class OnDirective extends Directive {\r\n    static has(ele) {\r\n        let directiveAttr = \"\";\r\n        getNodeAttrNames(ele).some(attr => matchesDirective.test(attr) && (directiveAttr = attr));\r\n        return directiveAttr;\r\n    }\r\n\r\n\r\n    init(directiveAttr, attrValue) {\r\n        this._attr              = directiveAttr;\r\n        this._eventName         = (new RegExp(matchesDirective)).exec(directiveAttr)[1];\r\n        this._tokenValueGetter  = createValueGetter((attrValue || \"\"), \"on\");\r\n    }\r\n\r\n    /**\r\n     * Handles the event on the node\r\n     *\r\n     * @param {NodeHandler} handler\r\n     * @param {Event} domEv\r\n     */\r\n    handleEvent(handler, domEv) {\r\n        const state = PRIVATE.get(handler);\r\n\r\n        let tokenValue;\r\n        state.data.$ev = domEv;\r\n\r\n        try {\r\n            tokenValue = this._tokenValueGetter(state.data);\r\n        }\r\n        catch(e) {\r\n            logError(e);\r\n            return;\r\n        }\r\n\r\n        delete state.data.$ev;\r\n\r\n        if (\"function\" === typeof tokenValue) {\r\n            return tokenValue.call(handler._n, domEv);\r\n        }\r\n        // DOM EventHandler interface: object having a `handleEvent` method\r\n        else if (tokenValue && \"function\" === tokenValue.handleEvent) {\r\n            tokenValue.handleEvent.call(tokenValue, domEv);\r\n        }\r\n    }\r\n\r\n    // takes care of only storing the data on the node, for when the event is triggered\r\n    render(handler, node, data) {\r\n        let state = PRIVATE.get(handler);\r\n\r\n        if (!state) {\r\n            state = {\r\n                data:       { $data: {} },\r\n                tracker:    () => this.render(handler, node, state.data)\r\n            };\r\n            PRIVATE.set(handler, state);\r\n        }\r\n\r\n        if (data) {\r\n            if (data.$data) {\r\n                state.data = data;\r\n            }\r\n            else {\r\n                state.data.$data = data;\r\n            }\r\n        }\r\n    }\r\n\r\n    getNodeHandler(node) {\r\n        const handler = super.getNodeHandler(node);\r\n\r\n        // FIXME: this is not good - needs re-writing to ensure only one handle is attached.\r\n\r\n        const evListener = domAddEventListener(node, this._eventName, this.handleEvent.bind(this, handler));\r\n\r\n\r\n        handler.onDestroy(() => evListener.remove());\r\n        return handler;\r\n    }\r\n}\r\n\r\nexport default OnDirective;\r\n","import AttrDirective from \"./attr-directive\"\r\n\r\nconst matchRegExp = /^_prop\\.(.*)/;\r\nexport class PropDirective extends AttrDirective {\r\n    static get _matches() { return matchRegExp; }\r\n    static _isProp() { return true; }\r\n}\r\nexport default PropDirective;\r\n","import Directive        from \"./Directive\"\r\nimport {\r\n    createValueGetter,\r\n    hasAttribute    }   from \"../utils\"\r\nimport {NodeHandler} from \"./NodeHandler.js\";\r\n\r\n//============================================\r\nconst DIRECTIVE             = \"_show\";\r\nconst HIDDEN                = \"none\";\r\n\r\nexport class ShowDirective extends Directive {\r\n    static NodeHandlerConstructor = class extends NodeHandler {\r\n        init(...args) {\r\n            super.init(...args);\r\n            this._origDisplayStyle = this._node.style.display || \"\";\r\n        }\r\n        update(newValue) {\r\n            const eleStyleList = this._node.style;\r\n\r\n            if (newValue) {\r\n                eleStyleList.display = this._origDisplayStyle;\r\n            }\r\n            else if (eleStyleList.display !== HIDDEN)  {\r\n                eleStyleList.display = HIDDEN;\r\n            }\r\n        }\r\n    };\r\n\r\n    static has(ele) {\r\n        return hasAttribute(ele, DIRECTIVE) ? DIRECTIVE : \"\";\r\n    }\r\n\r\n    init(attr, attrValue) {\r\n        this._attr              = attr;\r\n        this._tokenValueGetter  = createValueGetter((attrValue || \"\"), \"show\");\r\n    }\r\n}\r\n\r\nexport default ShowDirective;","/**\r\n * Sets styles on an element\r\n *\r\n * @function domSetStyle\r\n *\r\n * @param {HTMLElement} el\r\n * @param {Object} styles\r\n *\r\n * @example\r\n *\r\n * domSetStyle(document.body, {\"background-color\", \"yellow\"});\r\n */\r\nexport function domSetStyle(el, styles){\r\n    if (!el || typeof styles !== \"object\"){\r\n        return;\r\n    }\r\n    Object.keys(styles).forEach(function(prop){\r\n        el.style[prop] = styles[prop];\r\n    });\r\n}\r\nexport default domSetStyle;\r\n","import {\r\n    createValueGetter,\r\n    hasAttribute    }   from \"../utils\"\r\nimport Directive        from \"./Directive\"\r\nimport {NodeHandler} from \"./NodeHandler.js\";\r\nimport {domSetStyle} from \"@purtuga/common/src/domutils/domSetStyle.js\"\r\n//============================================\r\nconst DIRECTIVE = \"_style\";\r\n\r\nexport class StyleDirective extends Directive {\r\n    static NodeHandlerConstructor = class extends NodeHandler {\r\n        update(newValue) {\r\n            domSetStyle(this._node, newValue);\r\n        }\r\n    };\r\n\r\n    static has(ele) {\r\n        return hasAttribute(ele, DIRECTIVE) ? DIRECTIVE : \"\";\r\n    }\r\n\r\n\r\n    init(attr, attrValue) {\r\n        this._attr              = attr;\r\n        this._tokenValueGetter  = createValueGetter((attrValue || \"\"), \"style\");\r\n    }\r\n}\r\n\r\nexport default StyleDirective;","import DomDataBind          from \"./DomDataBind.js\"\r\nimport render               from \"./render.js\"\r\nimport Directive            from \"./directives/Directive.js\"\r\nimport * as allDirectives   from \"./directives/index.js\";\r\n\r\nconst DomDataBindAll = DomDataBind.extend();\r\nDomDataBindAll.directives = allDirectives;\r\n\r\nexport * from \"./directives/index.js\"\r\nexport default DomDataBindAll;\r\nexport {\r\n    DomDataBindAll,\r\n    DomDataBind,\r\n    render,\r\n    allDirectives,\r\n    Directive\r\n};"],"sourceRoot":""}