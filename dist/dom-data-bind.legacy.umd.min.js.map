{"version":3,"sources":["webpack://DomDataBind/webpack/universalModuleDefinition","webpack://DomDataBind/webpack/bootstrap","webpack://DomDataBind/./node_modules/@purtuga/common/src/jsutils/getGlobal.js","webpack://DomDataBind/(webpack)/buildin/global.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/jsutils/objectExtend.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/jsutils/WeakMap.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/jsutils/dataStore.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/jsutils/runtime-aliases.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/jsutils/Iterator.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/jsutils/Set.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/jsutils/queueCallback.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/jsutils/Compose.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/jsutils/nextTick.js","webpack://DomDataBind/./node_modules/@purtuga/observables/src/objectWatchProp.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/jsutils/Map.js","webpack://DomDataBind/./src/utils.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/domutils/domFind.js","webpack://DomDataBind/./src/directives/Directive.js","webpack://DomDataBind/./src/bindings/text-binding.js","webpack://DomDataBind/./src/Template.js","webpack://DomDataBind/./src/render.js","webpack://DomDataBind/./src/DomDataBind.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/domutils/domHasClass.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/domutils/domAddClass.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/domutils/domRemoveClass.js","webpack://DomDataBind/./src/directives/class-directive.js","webpack://DomDataBind/./src/directives/style-directive.js","webpack://DomDataBind/./src/directives/if-directive.js","webpack://DomDataBind/./src/directives/show-directive.js","webpack://DomDataBind/./src/directives/attr-directive.js","webpack://DomDataBind/./src/directives/prop-directive.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/domutils/domAddEventListener.js","webpack://DomDataBind/./src/directives/on-directive.js","webpack://DomDataBind/./node_modules/@purtuga/observables/src/arrayWatch.js","webpack://DomDataBind/./src/directives/each-directive.js","webpack://DomDataBind/./src/directives/html-directive.js","webpack://DomDataBind/./src/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","GLOBAL","_typeof","global","self","Function","g","this","eval","e","OBJECT_TYPE","_toString","toString","_hasOwnProperty","objectExtend","FakeWeakMap","mergeIntoObj","response","_len","arguments","length","mergeObjects","Array","_key","total","deepMerge","shift","WeakMap","counter","Date","now","Math","random","set","entry","writable","undefined","delete","has","dataStore","stash","functionBindCall","functionBind","objectDefineProperty","objectDefineProperties","defineProperties","objectKeys","keys","arr","isArray","arrayIndexOf","forEach","indexOf","arraySplice","splice","consoleLog","console","log","SymbolIterator","error","warn","iterator","HTMLElementPrototype","HTMLElement","doc","document","head","appendChild","insertBefore","hasAttribute","setAttribute","removeAttribute","FakeIterator","values","slice","idx","constructor","next","configurable","done","_","nextIdx","Set","FakeSet","_defineProperty","add","item","push","size","clear","entries","cb","thisArg","_this","queue","callbacks","queueCallback","setTimeout","flushQueue","cbList","_toConsumableArray","PRIVATE","COMMON_DESTROY_METHOD_NAME","k","baseMethods","isDestroyed","init","destroy","executeCallbacksNow","destroyCallbacks","callOnDestroyCallback","onDestroy","callback","inst","getInstanceState","getFactory","staticMethods","extend","Class","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","apply","_inherits","args","reduce","newProto","obj","thisObjProto","objKey","isInstanceOf","instanceObj","some","protoKey","_construct","getDestroyCallback","instanceState","stateStore","prop","method","Node","Compose","ComposeConstructor","_len2","_key2","getNewConstructor","reIsNativeCode","nextTick","setImediate","test","Promise","resolved","resolve","fn","then","catch","immediates","processing","processPending","isQueued","queuedCallbacks","nextTick_toConsumableArray","OBSERVABLE_IDENTIFIER","DEFAULT_PROP_DEFINITION","TRACKERS","WATCHER_IDENTIFIER","ARRAY_WATCHABLE_PROTO","HAS_ARRAY_WATCHABLE_PROTO","concat","ARRAY_MUTATING_METHODS","isPureObject","NOTIFY_QUEUE","isNotifyQueued","objectWatchProp","setupObjState","props","setupPropState","setupPropInterceptors","setupInterceptors","storeCallback","makeObservable","unWatch","propSetup","dependents","unsetCallbackAsWatcherOf","watchers","deep","setupCallbackStore","store","async","notify","val","parent","propOldDescriptor","getOwnPropertyDescriptor","newVal","priorVal","walk","force","makeArrayWatchable","walkArray","walkObject","pushCallbacksToQueue","execCallback","queueCallbackAndScheduleRun","objectWatchProp_toConsumableArray","x","asDependent","setCallbackAsWatcherOf","unsetDependencyTracker","watchersSet","watching","watcherList","arrCurrentProto","__proto__","arrProtoInterceptor","_arrCurrentProto$meth","Map","FakeMap","Map_defineProperty","DOCUMENT","FUNCTION","ELEMENT_PROTOTYPE","Element","ARRAY_PROTOTYPE","VALUE_GETTERS","_bind","DOM_DATA_BIND_PROP","UUID","replace","bindCallTo","arrayForEach","arraySlice","getAttribute","removeChild","createComment","createTextNode","createDocFragment","createDocumentFragment","logError","createValueGetter","evalCode","trim","getNodeAttrNames","node","attrNames","attributes","domFind","domEle","selector","querySelectorAll","Directive","_Compose","Directive_classCallCheck","Directive_possibleConstructorReturn","Directive_getPrototypeOf","Directive_inherits","_createClass","handler","data","state","deferUpd","update","tracker","render","stopWatchingAll","handlerState","newValue","setDependencyTracker","_tokenValueGetter","_attr","nodeType","NodeHandler","directive","_d","_n","_get","TextBinding","_Directive","text_binding_classCallCheck","text_binding_possibleConstructorReturn","text_binding_getPrototypeOf","text_binding_inherits","text_binding_createClass","tokenText","_tokenText","text_binding_get","nodeValue","nodeToRemove","parentNode","DROPS_NODES_ON_CLONE","frag","cloneNode","childNodes","NODE_CONTAINS_MISSES_TEXT_NODES","div","createElement","text","contains","nodeSplitText","Text","splitText","reHasDataToken","RegExp","reTokenMatch","getNodeValue","hasToken","Template","html","directives","Template_classCallCheck","_template","innerHTML","_directives","_bindings","getBindingFor","content","Template_createClass","importNode","TemplateInstance","applyBindingsToTemplateInstance","setData","ele","bindings","eleToBindings","ignoredChildren","directiveIterator","attrName","attrValue","managesNode","elePlaceholder","manages","getArrayForNodeFromMap","getDirectiveForAttribute","fakeEle","addTextNodes","filter","onlyElementsWithAttributes","findAllNodes","skip","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","ignoredParent","compareDocumentPosition","err","return","child","lastIndex","childTokenMatches","exec","getTextBindingForToken","tokenTextNode","index","fixEmptyTextNode","tokenPlaceholder","processTextNode","directiveBindings","bindingEle","path","walkEle","unshift","Directives","directivesInstances","getNodeAt","getNodeHandler","Error","map","directiveInstances","directiveSignature","resultArr","hasChildNodes","firstChild","nextSibling","docFrag","_frag","TEMPLATES","cloneWith","DomDataBind","$ele","Factory","isString","_domDataBindNodeHandlers","binding","domHasClass","el","cssClass","classList","domAddClass","classNameList","String","split","className","domRemoveClass","remove","ClassDirective","class_directive_classCallCheck","class_directive_possibleConstructorReturn","class_directive_getPrototypeOf","class_directive_inherits","class_directive_createClass","attr","class_directive_get","newClasses","oldClasses","applyCssClassesToNode","StyleDirective","style_directive_classCallCheck","style_directive_possibleConstructorReturn","style_directive_getPrototypeOf","style_directive_inherits","style_directive_createClass","style_directive_get","eleStyleList","style","styleProp","renderUpdate","showElement","renderedEle","renderTemplate","_children","insertEle","destroyRenderedEle","IfDirective","if_directive_classCallCheck","if_directive_possibleConstructorReturn","if_directive_getPrototypeOf","if_directive_inherits","if_directive_createClass","if_directive_get","_placeholderEle","ShowDirective","show_directive_classCallCheck","show_directive_possibleConstructorReturn","show_directive_getPrototypeOf","show_directive_inherits","show_directive_createClass","show_directive_get","eleDisplayStyle","display","attrRegExp","AttrDirective","attr_directive_classCallCheck","attr_directive_possibleConstructorReturn","attr_directive_getPrototypeOf","attr_directive_inherits","attr_directive_createClass","_htmlAttr","_matches","attr_directive_get","_isProp","_this2","directiveAttr","matchRegExp","PropDirective","_AttrDirective","prop_directive_classCallCheck","prop_directive_possibleConstructorReturn","prop_directive_getPrototypeOf","prop_directive_inherits","prop_directive_createClass","domAddEventListener","event","capture","events","evListeners","evName","addEventListener","removeEventListener","listeners","matchesDirective","str","escapeString","OnDirective","on_directive_classCallCheck","on_directive_possibleConstructorReturn","on_directive_getPrototypeOf","on_directive_inherits","on_directive_createClass","_eventName","domEv","tokenValue","$ev","handleEvent","$data","on_directive_get","evListener","arrayWatch","NOOP","destroyRowElement","_loop","rowKey","_state","bindersByKey","EachDirective","each_directive_classCallCheck","each_directive_possibleConstructorReturn","each_directive_getPrototypeOf","each_directive_inherits","each_directive_createClass","_parseDirectiveValue2","_slicedToArray","matches","argName","parseDirectiveValue","iteratorArgs","listVar","_iteratorArgs","each_directive_get","binders","listIterator","iterateOverList","isFirstRender","usesKey","getKey","newList","list","isEmptyList","destroyChildBinders","_isSoleChild","parentEle","textContent","binder","_destroy","dataObj","rowData","newData","_state$binders","attachedEleBinder","newDomElements","getDataForIteration","getRowBinder","pos","childBinder","positionChildren","rowEleBinder","rowEle","eleParentNode","placeholderEle","childEleBinders","every","childNode","hasDedicatedParent","HtmlDirective","html_directive_classCallCheck","html_directive_possibleConstructorReturn","html_directive_getPrototypeOf","html_directive_inherits","html_directive_createClass","html_directive_get","__webpack_exports__","DomDataBindAll","allDirectives","src_DomDataBind","src_render","directives_Directive","each_directive","if_directive","class_directive","style_directive","show_directive","attr_directive","prop_directive","on_directive","html_directive"],"mappings":"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","file":"dom-data-bind.legacy.umd.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"DomDataBind\"] = factory();\n\telse\n\t\troot[\"DomDataBind\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","\r\nexport const GLOBAL = (() => {\r\n    const undef = 'undefined';\r\n    /* global self, window, global */\r\n    if (typeof window !== undef) { return window; }\r\n    if (typeof global !== undef) { return global; }\r\n    if (typeof self !== undef) { return self; }\r\n    return Function('return this;')();\r\n})();\r\n\r\nexport function getGlobal() {\r\n    return GLOBAL;\r\n}\r\nexport default getGlobal;","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","const OBJECT_TYPE   = \"[object Object]\";\r\nconst _toString     = Function.call.bind(Object.prototype.toString);\r\nconst _hasOwnProperty = Function.call.bind(Object.prototype.hasOwnProperty);\r\n\r\n//============================================================\r\n\r\n/**\r\n * Extends an object with the properties of another.\r\n *\r\n * @param {Object|Boolean} mergeIntoObj\r\n *  The object that will have the properties of every other object provided\r\n *  on input merged into. This can also be a `Boolean`, in which case,\r\n *  a deep merge of objects will be done - argument number 2 will\r\n *  become the `mergeIntoObj`.\r\n * @param {...Object} mergeObjects\r\n *\r\n * @return {Object}\r\n */\r\nexport function objectExtend(mergeIntoObj, ...mergeObjects) {\r\n    let response    = mergeIntoObj || {};\r\n    let total       = mergeObjects.length;\r\n    let deepMerge   = false;\r\n    let i;\r\n    let key;\r\n\r\n    if (typeof mergeIntoObj === \"boolean\") {\r\n        deepMerge   = mergeIntoObj;\r\n        response    = mergeObjects.shift() || {};\r\n        total       = mergeObjects.length;\r\n    }\r\n\r\n    for (i = 0; i < total; i++) {\r\n        if (!mergeObjects[i]) {\r\n            continue;\r\n        }\r\n\r\n        for (key in mergeObjects[i]) {\r\n            if (_hasOwnProperty(mergeObjects[i], key)){\r\n                if (\r\n                    deepMerge &&\r\n                    _toString(response[key]) === OBJECT_TYPE &&\r\n                    _toString(mergeObjects[i][key]) === OBJECT_TYPE\r\n                ) {\r\n                    response[key] = objectExtend( true, response[key], mergeObjects[i][key]);\r\n\r\n                } else {\r\n                    response[key] = mergeObjects[i][key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return response;\r\n}\r\nexport default objectExtend;","// POLYFILL FOR WeakMap\r\n//  [pt] changed how \"delete\" is defined so that it can work in IE8\r\n\r\n/* jshint ignore:start */\r\n/**\r\n * @license\r\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\r\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\n * Code distributed by Google as part of the polymer project is also\r\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n */\r\nvar FakeWeakMap;\r\nif (typeof WeakMap === 'undefined') {\r\n    (function() {\r\n        var defineProperty = Object.defineProperty;\r\n        var counter = Date.now() % 1e9;\r\n\r\n        var WeakMap = FakeWeakMap = function() {\r\n            this.name = '__st' + (Math.random() * 1e9 >>> 0) + (counter++ + '__');\r\n        };\r\n\r\n        WeakMap.prototype = {\r\n            set: function(key, value) {\r\n                var entry = key[this.name];\r\n                if (entry && entry[0] === key)\r\n                    entry[1] = value;\r\n                else\r\n                    defineProperty(key, this.name, {value: [key, value], writable: true});\r\n                return this;\r\n            },\r\n            get: function(key) {\r\n                var entry;\r\n                return (entry = key[this.name]) && entry[0] === key ?\r\n                    entry[1] : undefined;\r\n            },\r\n            // [pt] Quotes around the delete property needed for IE8\r\n            \"delete\": function(key) {\r\n                var entry = key[this.name];\r\n                if (!entry || entry[0] !== key) return false;\r\n                entry[0] = entry[1] = undefined;\r\n                return true;\r\n            },\r\n            has: function(key) {\r\n                var entry = key[this.name];\r\n                if (!entry) return false;\r\n                return entry[0] === key;\r\n            }\r\n        };\r\n\r\n        window.WeakMap = WeakMap;\r\n    })();\r\n} else {\r\n    FakeWeakMap = WeakMap\r\n}\r\n/* jshint ignore:end */\r\nexport { FakeWeakMap as WeakMap };\r\nexport default FakeWeakMap;\r\n","import {WeakMap} from \"./WeakMap\";\r\n\r\n/**\r\n * Returns an object that contains an initialized WeakMap (`stash` property)\r\n * where data can be stored.\r\n *\r\n * @namespace dataStore\r\n *\r\n */\r\nvar dataStore = /** @lends dataStore */{\r\n    /**\r\n     * Stash data here.\r\n     * @type WeakMap\r\n     */\r\n    stash:  new WeakMap(),\r\n    /**\r\n     * Create a private data store and return it.\r\n     * @return {WeakMap}\r\n     */\r\n    create: function(){\r\n        return new WeakMap();\r\n    }\r\n};\r\n\r\nexport default dataStore;\r\nexport { dataStore };\r\n","/**\r\n * return a value to a given method\r\n *\r\n * @function\r\n * @param {Function} fn\r\n * @param {*} ctx The context to be assigned to `fn`\r\n * @return {Function}\r\n *\r\n * @example\r\n *\r\n * f = functionBin(function() { console.log(`Hello ${this.name}`); }, { name: \"Jackson\" });\r\n * f(); // => \"Hello Jackson\"\r\n */\r\nexport const functionBind = Function.bind.call.bind(Function.bind);\r\n\r\n/**\r\n * return a bound `.call` to the given method.\r\n *\r\n * @type function\r\n * @param {Function} fn\r\n * @return {Function}\r\n * @example\r\n *\r\n * forEach = functionBindCall(Array.prototype.forEach);\r\n * // same as doing: Array.prototype.forEach.call (but returns a new \"call\" method);\r\n */\r\nexport const functionBindCall = functionBind(Function.call.bind, Function.call);\r\n\r\n// Object ===============================================================================\r\nexport const isObject                 = obj => Object.prototype.toString.call(obj) === \"[object Object]\";\r\nexport const objectDefineProperty     = Object.defineProperty;\r\nexport const objectDefineProperties   = Object.defineProperties;\r\nexport const objectKeys               = Object.keys;\r\nexport const defineProperty = (obj, prop, value, getter, setter, configurable = true, enumerable = false, writable = true) => {\r\n    const descriptor = {\r\n        configurable,\r\n        enumerable\r\n    };\r\n\r\n    if (getter || setter) {\r\n        descriptor.get = getter;\r\n        descriptor.set = setter;\r\n    } else {\r\n        descriptor.writable = writable;\r\n        descriptor.value = value;\r\n    }\r\n\r\n    objectDefineProperty(obj, prop, descriptor);\r\n\r\n    return obj;\r\n};\r\n\r\n\r\n// Array ===============================================================================\r\nconst arr = [];\r\nexport const isArray        = Array.isArray;\r\nexport const arrayForEach   = functionBindCall(arr.forEach);\r\nexport const arrayIndexOf   = functionBindCall(arr.indexOf);\r\nexport const arraySplice    = functionBindCall(arr.splice);\r\n\r\n\r\n// Logging ===============================================================================\r\nexport const consoleLog = console.log; // eslint-disable-line\r\nexport const consoleError = console.error || consoleLog; // eslint-disable-line\r\nexport const consoleWarn = console.warn || consoleLog; // eslint-disable-line\r\n\r\n\r\n// Iterators ===============================================================================\r\nexport const SymbolIterator = \"undefined\" !== typeof Symbol && Symbol.iterator ? Symbol.iterator : \"@@iterator\";\r\n\r\n\r\n// DOM ===============================================================================\r\nconst HTMLElementPrototype = HTMLElement.prototype;\r\nexport const doc = document;\r\nexport const head = doc.head;\r\nexport const createDocFragment = () => doc.createDocumentFragment();\r\nexport const createElement = tagName => doc.createElement(tagName);\r\nexport const createTextNode = data => doc.createTextNode(data || \"\");\r\nexport const appendChild = functionBindCall(HTMLElementPrototype.appendChild);\r\nexport const insertBefore = functionBindCall(HTMLElementPrototype.insertBefore);\r\nexport const hasAttribute = functionBindCall(HTMLElementPrototype.hasAttribute);\r\nexport const setAttribute = functionBindCall(HTMLElementPrototype.setAttribute);\r\nexport const removeAttribute = functionBindCall(HTMLElementPrototype.removeAttribute);","import {\r\n    objectDefineProperty,\r\n    objectDefineProperties,\r\n    SymbolIterator\r\n} from \"./runtime-aliases\"\r\n\r\n//-----------------------------------------------------------------------\r\n\r\n// Great reference: http://2ality.com/2015/02/es6-iteration.html\r\nexport function FakeIterator(keys, values) {\r\n    objectDefineProperty(this, \"_\", { value: {\r\n        keys:   keys.slice(0),\r\n        values: values ? values.slice(0) : null,\r\n        idx:    0,\r\n        total:  keys.length\r\n    } });\r\n}\r\nexport default FakeIterator;\r\n\r\nobjectDefineProperties(FakeIterator.prototype, {\r\n    constructor: { value: FakeIterator },\r\n    next: {\r\n        enumerable: true,\r\n        configurable: true,\r\n        value() {\r\n            const response = {\r\n                done: this._.idx === this._.total\r\n            };\r\n\r\n            if (response.done) {\r\n                response.value = undefined;\r\n                return response;\r\n            }\r\n\r\n            const nextIdx = this._.idx++;\r\n\r\n            response.value = this._.keys[nextIdx];\r\n\r\n            if (this._.values) {\r\n                response.value = [ response.value, this._.values[nextIdx] ];\r\n            }\r\n\r\n            return response;\r\n        }\r\n    }\r\n});\r\nobjectDefineProperty(FakeIterator.prototype, SymbolIterator, { value(){ return this; } });\r\n\r\n","import { GLOBAL } from \"./getGlobal\"\r\nimport { FakeIterator } from \"./Iterator\"\r\nimport {\r\n    objectDefineProperties,\r\n    objectDefineProperty,\r\n    arrayIndexOf,\r\n    SymbolIterator\r\n} from \"./runtime-aliases\"\r\n\r\n//============================================================\r\n\r\nexport const Set = GLOBAL.Set && GLOBAL.Set.prototype[SymbolIterator] ? GLOBAL.Set : FakeSet;\r\nexport default Set;\r\n\r\nexport function FakeSet() {\r\n    // FIXME: support for iterable input\r\n}\r\n\r\nobjectDefineProperties(FakeSet.prototype, {\r\n    constructor: { value: FakeSet, configurable: true },\r\n    _: {\r\n        get() {\r\n            const values = [];\r\n            objectDefineProperty(this, \"_\", { value: values });\r\n            return values;\r\n        }\r\n    },\r\n    add: {\r\n        value(item) {\r\n            if (arrayIndexOf(this._, item) === -1) {\r\n                this._.push(item);\r\n            }\r\n            return this;\r\n        }\r\n    },\r\n    has: {\r\n        value(item) { return arrayIndexOf(this._, item) !== -1; }\r\n    },\r\n    size: {\r\n        get() { return this._.length; }\r\n    },\r\n    clear: {\r\n        value() { this._.splice(0); }\r\n    },\r\n    delete: {\r\n        value(item) {\r\n            const idx = arrayIndexOf(this._, item);\r\n            if (idx !== -1) {\r\n                this._.splice(idx, 1);\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n    },\r\n    values: {\r\n        value() {\r\n            return new FakeIterator(this._);\r\n        }\r\n    },\r\n    entries: {\r\n        value() {\r\n            return new FakeIterator(this._, this._);\r\n        }\r\n    },\r\n    forEach: {\r\n        value(cb, thisArg) {\r\n            this._.forEach(item => cb(item, item, this), thisArg);\r\n        }\r\n    },\r\n    [SymbolIterator]: {\r\n        value() {\r\n            return this.values();\r\n        }\r\n    }\r\n});\r\n\r\n\r\n","import Set from \"./es6-Set\"\r\n\r\n//===============================================\r\nconst callbacks = new Set();\r\nlet queue;\r\n\r\n/**\r\n * Queue a callback to be executed after at the start of next event loop.\r\n * This differs from `nextTick` in that callbacks are not executed during\r\n * micro-processing, but rather on next event loop, so this is not ideal\r\n * for logic that can cause UI reflow.\r\n *\r\n * @param {Function} cb\r\n */\r\nexport function queueCallback(cb) {\r\n    if (\"function\" === typeof cb) {\r\n        callbacks.add(cb);\r\n\r\n        if (!queue) {\r\n            queue = setTimeout(flushQueue, 0);\r\n        }\r\n    }\r\n}\r\nexport default queueCallback;\r\n\r\nfunction flushQueue() {\r\n    const cbList  = [...callbacks];\r\n    callbacks.clear();\r\n    queue = null;\r\n    let cb;\r\n    while ((cb = cbList.shift())) {\r\n        cb();\r\n        cb = null;\r\n    }\r\n}\r\n","import objectExtend from \"./objectExtend\"\r\nimport dataStore from \"./dataStore\"\r\nimport queueCallback from \"./queueCallback\"\r\n\r\n//=========================================================\r\nconst PRIVATE = dataStore.create();\r\nconst COMMON_DESTROY_METHOD_NAME = [\r\n    \"destroy\",      // Compose\r\n    \"remove\",       // DOM Events Listeners\r\n    \"off\"           // EventEmitter Listeners\r\n];\r\n\r\n// return all KEYs of an object, even those that are not iterable\r\nfunction objectKeys(prototype){\r\n    let k, keys = [];\r\n    for (k in prototype){\r\n        keys.push(k);\r\n    }\r\n    return keys;\r\n}\r\n\r\n// Base instance methods for Compose'd object\r\nconst baseMethods = /** @lends Compose.prototype */{\r\n\r\n    /**\r\n     * Property indicating whether instance has been destroyed\r\n     */\r\n    isDestroyed: false,\r\n\r\n    /**\r\n     * instance initializing code\r\n     */\r\n    init(){},\r\n\r\n    /**\r\n     * Destroys the instance, by removing its private data.\r\n     * Any attached `onDestroy` callback will be executed `async` - queued and\r\n     * called on next event loop\r\n     *\r\n     * @param {Boolean} [executeCallbacksNow=false]\r\n     */\r\n    destroy(executeCallbacksNow){\r\n        if (PRIVATE.has(this)) {\r\n            let destroyCallbacks = PRIVATE.get(this);\r\n            PRIVATE.delete(this);\r\n\r\n            if (executeCallbacksNow) {\r\n                destroyCallbacks.forEach(callOnDestroyCallback);\r\n            }\r\n            else {\r\n                queueCallback(() => destroyCallbacks.forEach(callOnDestroyCallback));\r\n            }\r\n        }\r\n\r\n        if (\"boolean\" === typeof this.isDestroyed) {\r\n            this.isDestroyed = true;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Adds a callback to the queue to be called when this object's `.destroy()`\r\n     * is called.\r\n     *\r\n     * @param {Function} callback\r\n     */\r\n    onDestroy(callback){\r\n        getInstanceState(this).push(callback);\r\n    },\r\n\r\n    /**\r\n     * Returns the factory for this instance.\r\n     *\r\n     * @return {Compose}\r\n     */\r\n    getFactory(){\r\n        if (this.constructor) {\r\n            return this.constructor;\r\n        }\r\n    }\r\n};\r\n\r\n\r\nconst staticMethods = /** @lends Compose */{\r\n    /**\r\n     * Creates an new factory based on the prototye of the current Factory\r\n     * and any other Factory given on input.\r\n     *\r\n     * @return {Compose}\r\n     */\r\n    extend: function(...args){\r\n        let Class = class extends this {};\r\n\r\n        objectExtend(Class.prototype, args.reduce(function(newProto, obj){\r\n            if (obj) {\r\n                const thisObjProto = (obj.prototype || obj);\r\n                objectKeys(thisObjProto).forEach(function(objKey){\r\n                    newProto[objKey] = thisObjProto[objKey];\r\n                });\r\n            }\r\n            return newProto;\r\n        }, {}));\r\n\r\n        return Class;\r\n    },\r\n\r\n    /**\r\n     * Checks if the Object given on input looks like an instance of this Factory.\r\n     *\r\n     * @return {Boolean}\r\n     */\r\n    isInstanceOf: function(instanceObj){\r\n\r\n        if (!instanceObj) {\r\n            return false;\r\n        }\r\n\r\n        var neededKeys = objectKeys(this.prototype);\r\n\r\n        // If any prototype key is not in the object prototype, then return false\r\n        return !neededKeys.some(function(protoKey){\r\n            return typeof instanceObj[protoKey] === \"undefined\";\r\n        });\r\n\r\n    },\r\n\r\n    /**\r\n     * Creates an instance object based on this factory.\r\n     *\r\n     * @return {Object}\r\n     */\r\n    create: function(){\r\n        return new this(...arguments);\r\n    },\r\n\r\n    /**\r\n     * Returns a standard callback that can be used to remove cleanup instance state\r\n     * from specific Store (WeakMap). Returned function will destroy known Instances\r\n     * that have destroy methods.\r\n     *\r\n     * @param {Object} instanceState\r\n     * @param {WeakMap} [stateStore]\r\n     *\r\n     * @return {Function}\r\n     *\r\n     * @example\r\n     *\r\n     * const MY_PRIVATE = new WeakMap();\r\n     * cont NewWdg = Componse.extend({\r\n     *      init() {\r\n     *          const state = {};\r\n     *          MY_PRIVATE.set(this, state);\r\n     *          ...\r\n     *\r\n     *          this.onDestroy(Compose.getDestroyCallback(state, MY_PRIVATE));\r\n     *      }\r\n     * });\r\n     */\r\n    getDestroyCallback: getDestroyCallback\r\n};\r\n\r\n\r\n/**\r\n * Returns a standard callback that can be used to remove cleanup instance state\r\n * from specific Store (WeakMap). Returned function will destroy known Instances\r\n * that have destroy methods.\r\n *\r\n * @method Compose~getDestroyCallback\r\n *\r\n * @param {Object} instanceState\r\n * @param {WeakMap} [stateStore]\r\n *\r\n * @return {Function}\r\n *\r\n * @example\r\n *\r\n * const MY_PRIVATE = new WeakMap();\r\n * cont NewWdg = Componse.extend({\r\n *      init() {\r\n *          const state = {};\r\n *          MY_PRIVATE.set(this, state);\r\n *          ...\r\n *\r\n *          this.onDestroy(Compose.getDestroyCallback(state, MY_PRIVATE));\r\n *      }\r\n * });\r\n */\r\nexport function getDestroyCallback (instanceState, stateStore) {\r\n    return () => {\r\n        if (instanceState) {\r\n            // Destroy all Compose object\r\n            Object.keys(instanceState).forEach(function (prop) {\r\n                if (instanceState[prop]) {\r\n                    COMMON_DESTROY_METHOD_NAME.some((method) => {\r\n                        if (\r\n                            instanceState[prop][method] &&\r\n                            (method !== \"remove\" || !(instanceState[prop] instanceof Node)) // Caution: should not remove DOM elements.\r\n                        ) {\r\n                            instanceState[prop][method]();\r\n                            return true;\r\n                        }\r\n                    });\r\n\r\n                    instanceState[prop] = undefined;\r\n                }\r\n            });\r\n        }\r\n\r\n        if (stateStore && stateStore.has && stateStore.has(instanceState)) {\r\n            stateStore.delete(instanceState);\r\n        }\r\n    }\r\n}\r\n\r\nfunction getInstanceState(inst) {\r\n    if (!PRIVATE.has(inst)) {\r\n        PRIVATE.set(inst, []);\r\n    }\r\n\r\n    return PRIVATE.get(inst);\r\n}\r\n\r\nfunction callOnDestroyCallback (callback){\r\n    if (\"function\" === typeof callback) {\r\n        callback();\r\n    }\r\n}\r\n\r\nfunction getNewConstructor () {\r\n    function ComposeConstructor(...args) {\r\n        // Called with `new`?\r\n        if (this && this.constructor && this instanceof this.constructor) {\r\n            return this.init(...args);\r\n        }\r\n\r\n        // called directly\r\n        return new ComposeConstructor(...args);\r\n    }\r\n\r\n    ComposeConstructor.prototype.constructor = ComposeConstructor;\r\n    return ComposeConstructor;\r\n}\r\n\r\n/**\r\n * Composes new factory methods from a list of given Objects/Classes.\r\n *\r\n * @class Compose\r\n * @borrows Compose~getDestroyCallback as Compose.getDestroyCallback\r\n *\r\n * @example\r\n *\r\n * var Widget = Compose.create(Model, Events);\r\n *\r\n * myWidget = Widget.create();\r\n *\r\n */\r\nconst Compose = getNewConstructor();\r\nobjectExtend(Compose.prototype, baseMethods);\r\nobjectExtend(Compose, staticMethods);\r\n\r\nexport default Compose;\r\nexport { Compose };\r\n","/* global setImediate:true */\r\nlet reIsNativeCode = /native code/i;\r\n\r\n/**\r\n * Executes a function at the end of the current event Loop - during micro-task processing\r\n *\r\n * @param {Function} callback\r\n */\r\nlet nextTick = (function(){\r\n    if (typeof setImediate !== \"undefined\" && reIsNativeCode.test(setImediate.toString())) {\r\n        return setImediate;\r\n    }\r\n\r\n    // Native Promsie? Use it.\r\n    if (typeof Promise === 'function' && reIsNativeCode.test(Promise.toString())) {\r\n        let resolved = Promise.resolve();\r\n        return function _nextTickPromise(fn) {\r\n            resolved.then(fn).catch(e => console.error(e)); // eslint-disable-line\r\n        };\r\n    }\r\n\r\n    // fallback to setTimeout\r\n    // From: https://bugzilla.mozilla.org/show_bug.cgi?id=686201#c68\r\n    let immediates = [];\r\n    let processing = false;\r\n\r\n    function processPending() {\r\n        setTimeout(function() {\r\n            immediates.shift()();\r\n            if (immediates.length) {\r\n                processPending();\r\n            } else {\r\n                processing = false;\r\n            }\r\n        }, 0);\r\n    }\r\n\r\n    return function _nextTickSetTimeout(fn) {\r\n        immediates.push(fn);\r\n        if (!processing) {\r\n            processing = true;\r\n            processPending();\r\n        }\r\n    };\r\n})();\r\n\r\nlet isQueued = false;\r\nconst queuedCallbacks = new Set();\r\nlet i, t;\r\nconst flushQueue = () => {\r\n    const callbacks = [ ...queuedCallbacks ];\r\n    queuedCallbacks.clear();\r\n    isQueued = false;\r\n    for (i = 0, t = callbacks.length; i < t; i++) {\r\n        callbacks[i]();\r\n    }\r\n};\r\n\r\n/**\r\n * Queues a callback to be executed on nextTick. Unlike calling `nextTick` directly\r\n * `queue()` will ensure that the same callback is not executed more than once when\r\n * `nextTick` runs.\r\n *\r\n * @param {Function} callback\r\n */\r\nnextTick.queue = callback => {\r\n    queuedCallbacks.add(callback);\r\n    if (!isQueued) {\r\n        isQueued = true;\r\n        nextTick(flushQueue);\r\n    }\r\n};\r\n\r\nexport default nextTick;\r\nexport { nextTick };\r\n","import {objectDefineProperty, objectKeys, isArray} from \"@purtuga/common/src/jsutils/runtime-aliases\";\r\nimport Set from \"@purtuga/common/src/jsutils/Set\"\r\nimport nextTick from \"@purtuga/common/src/jsutils/nextTick\"\r\n\r\n//---------------------------------------------------------------------------\r\nexport const OBSERVABLE_IDENTIFIER = \"___$observable$___\"; // FIXME: this should be a Symbol()\r\n\r\nconst DEFAULT_PROP_DEFINITION = { configurable: true, enumerable: true };\r\nconst TRACKERS = new Set();\r\nconst WATCHER_IDENTIFIER = \"___$watching$___\";\r\nconst ARRAY_WATCHABLE_PROTO = \"__$watchable$__\";\r\nconst HAS_ARRAY_WATCHABLE_PROTO = `__$is${ARRAY_WATCHABLE_PROTO}`;\r\nconst ARRAY_MUTATING_METHODS = [\r\n    \"pop\",\r\n    \"push\",\r\n    \"shift\",\r\n    \"splice\",\r\n    \"unshift\",\r\n    \"sort\",\r\n    \"reverse\"\r\n];\r\nconst isPureObject = obj => obj && Object.prototype.toString.call(obj) === \"[object Object]\";\r\nconst NOTIFY_QUEUE = new Set();\r\nlet isNotifyQueued = false;\r\n\r\n/**\r\n * A lightweight utility to Watch an object's properties and get notified when it changes.\r\n *\r\n * @param {Object} obj\r\n *\r\n * @param {String} [prop]\r\n *  the property to be watched. If left undefined, then all existing properties are watched.\r\n *\r\n * @param {Function} [callback]\r\n *  The callback to be executed when property or object changes. If left undefined, then\r\n *  `obj` is only made observable (internal structure created and all current enumerable'\r\n *  properties are made \"watchable\")\r\n *\r\n *  __NOTE:__\r\n *  The callback will include a new non-enumerable property named `stopWatchingAll` of\r\n *  type `Function` that can be used to remove the given callback from all places where\r\n *  it is being used to watch a property. example:\r\n *\r\n *      const obj1 = { first: \"john\" };\r\n *      const obj2 = { last: \"smith\" };\r\n *      const watcher = () => console.log(\"changed\");\r\n *\r\n *      objectWatchProp(obj, \"first\", watcher);\r\n *      objectWatchProp(obj1, \"last\", watcher);\r\n *\r\n *      watcher.stopWatchingAll(); // removes callback from all objects that it is watching\r\n *\r\n *\r\n * @return {ObjectUnwatchProp}\r\n * Return a function to unwatch the property. Function also has a static property named\r\n * `destroy` that will do the same thing (ex. `unwatch.destroy()` is same as `unwatch()`)\r\n *\r\n * @example\r\n *\r\n * const oo = {};\r\n * const notifyNameChanged =() => console.log(`name changed: ${oo.name}`);\r\n * const unWatchName = objectWatchProp(oo, \"name\", notifyNameChanged);\r\n *\r\n * oo.name = \"paul\"; // console outputs: name changed: paul\r\n * unWatchName(); // stop watching\r\n * notifyNameChanged.stopWatchingAll(); // callback's `stopWatchingAll()` can also be called.\r\n *\r\n * @example\r\n *\r\n * const oo = {\r\n *      name: \"paul\",\r\n *      country: \"usa\"\r\n * };\r\n *\r\n * // watch all changes to object\r\n * objectWatchProp(oo, null, () => console.log(\"Something changed in object\"));\r\n *\r\n * // OR: make all properties of object observable\r\n * objectWatchProp(oo);\r\n *\r\n */\r\nexport function objectWatchProp(obj, prop, callback) {\r\n    if (!obj[OBSERVABLE_IDENTIFIER]) {\r\n        setupObjState(obj);\r\n    }\r\n\r\n    // Convert prop to observable?\r\n    if (prop && !obj[OBSERVABLE_IDENTIFIER].props[prop]) {\r\n        setupPropState(obj, prop);\r\n        setupPropInterceptors(obj, prop);\r\n    }\r\n    // Else: do we need to setup the interceptors (again)?\r\n    // (Used by Computed props when they are created against a prop has\r\n    // been setup as an observable)\r\n    else if (prop && obj[OBSERVABLE_IDENTIFIER].props[prop].setupInterceptors) {\r\n        setupPropInterceptors(obj, prop);\r\n    }\r\n\r\n    if (prop && callback) {\r\n        obj[OBSERVABLE_IDENTIFIER].props[prop].storeCallback(callback);\r\n    }\r\n    else if (!prop) {\r\n        makeObservable(obj, false);\r\n\r\n        if (callback) {\r\n            obj[OBSERVABLE_IDENTIFIER].storeCallback(callback);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Unwatch an object property or object.\r\n     *\r\n     * @typedef {Function} ObjectUnwatchProp\r\n     * @property {Function} destroy Same as function returned.\r\n     */\r\n    const unWatch = destroyWatcher.bind(\r\n        obj,\r\n        callback,\r\n        (prop ? obj[OBSERVABLE_IDENTIFIER].props[prop] : obj[OBSERVABLE_IDENTIFIER])\r\n    );\r\n\r\n    unWatch.destroy = unWatch;\r\n    return unWatch;\r\n}\r\n\r\nexport function setupObjState(obj) {\r\n    if (!obj[OBSERVABLE_IDENTIFIER]) {\r\n        objectDefineProperty(obj, OBSERVABLE_IDENTIFIER, {\r\n            configurable: true,\r\n            writable: true,\r\n            deep: false,\r\n            value: {\r\n                props: {},\r\n                dependents: new Set(),\r\n                watchers: new Set(),\r\n                storeCallback: storeCallback\r\n            }\r\n        });\r\n        setupCallbackStore(obj[OBSERVABLE_IDENTIFIER].dependents, false);\r\n        setupCallbackStore(obj[OBSERVABLE_IDENTIFIER].watchers, true);\r\n    }\r\n}\r\n\r\nfunction setupCallbackStore (store, async = false) {\r\n    store.async = async;\r\n    store.isQueued = false;\r\n    store.notify = notify;\r\n}\r\n\r\nfunction setupPropState(obj, prop) {\r\n    if (!obj[OBSERVABLE_IDENTIFIER].props[prop]) {\r\n        obj[OBSERVABLE_IDENTIFIER].props[prop] = {\r\n            val: undefined,\r\n            dependents: new Set(),\r\n            watchers: new Set(),\r\n            parent: obj[OBSERVABLE_IDENTIFIER],\r\n            storeCallback: storeCallback,\r\n            setupInterceptors: true,\r\n            deep: obj[OBSERVABLE_IDENTIFIER].deep\r\n        };\r\n        setupCallbackStore(obj[OBSERVABLE_IDENTIFIER].props[prop].dependents, false);\r\n        setupCallbackStore(obj[OBSERVABLE_IDENTIFIER].props[prop].watchers, true);\r\n    }\r\n    return obj[OBSERVABLE_IDENTIFIER].props[prop];\r\n}\r\n\r\nfunction setupPropInterceptors(obj, prop) {\r\n    const propOldDescriptor =\r\n        Object.getOwnPropertyDescriptor(obj, prop) || DEFAULT_PROP_DEFINITION;\r\n\r\n    if (!propOldDescriptor.get) {\r\n        obj[OBSERVABLE_IDENTIFIER].props[prop].val = obj[prop];\r\n\r\n        // If prop is marked as `deep` then walk the value and convert it to observables\r\n        if (obj[OBSERVABLE_IDENTIFIER].props[prop].deep) {\r\n            makeObservable(obj[OBSERVABLE_IDENTIFIER].props[prop].val);\r\n        }\r\n    }\r\n\r\n    objectDefineProperty(obj, prop, {\r\n        configurable: propOldDescriptor.configurable || false,\r\n        enumerable: propOldDescriptor.enumerable || false,\r\n        get() {\r\n            if (TRACKERS.size) {\r\n                TRACKERS.forEach(\r\n                    obj[OBSERVABLE_IDENTIFIER].props[prop].storeCallback,\r\n                    obj[OBSERVABLE_IDENTIFIER].props[prop]\r\n                );\r\n            }\r\n\r\n            if (propOldDescriptor.get) {\r\n                return propOldDescriptor.get.call(obj);\r\n            }\r\n\r\n            return obj[OBSERVABLE_IDENTIFIER].props[prop].val;\r\n        },\r\n        set(newVal) {\r\n            const priorVal = obj[prop];\r\n            if (propOldDescriptor.set) {\r\n                newVal = propOldDescriptor.set.call(obj, newVal);\r\n            } else {\r\n                obj[OBSERVABLE_IDENTIFIER].props[prop].val = newVal;\r\n            }\r\n\r\n            // If this `deep` is true and the new value is an object,\r\n            // then ensure its observable\r\n            if (obj[OBSERVABLE_IDENTIFIER].props[prop].deep) {\r\n                makeObservable(newVal);\r\n            }\r\n\r\n            if (newVal !== priorVal) {\r\n                obj[OBSERVABLE_IDENTIFIER].props[prop].watchers.notify();\r\n                obj[OBSERVABLE_IDENTIFIER].props[prop].dependents.notify();\r\n                obj[OBSERVABLE_IDENTIFIER].watchers.notify();\r\n            }\r\n\r\n            return newVal;\r\n        }\r\n    });\r\n\r\n    obj[OBSERVABLE_IDENTIFIER].props[prop].setupInterceptors = false;\r\n\r\n    // Notify object watchers that a new prop was added\r\n    if (propOldDescriptor === DEFAULT_PROP_DEFINITION) {\r\n        obj[OBSERVABLE_IDENTIFIER].watchers.notify();\r\n    }\r\n}\r\n\r\n/**\r\n * Makes an object (deep) observable.\r\n *\r\n * @param {Object|Array} obj\r\n * @param {Boolean} [walk=true]\r\n *  If `true` (default), the object's property values are walked and\r\n *  also make observable.\r\n * @param {Boolean} [force=false]\r\n *  if true, then even if object looks like it might have already been\r\n *  converted to an observable, it will still be walked\r\n *  (if `walk` is `true`)\r\n *\r\n * @return {Object|Array} Original `obj` is returned\r\n */\r\nexport function makeObservable(obj, walk = true, force = false) {\r\n    if (!isPureObject(obj) && !isArray(obj)) {\r\n        return obj;\r\n    }\r\n\r\n    if (!obj[OBSERVABLE_IDENTIFIER]) {\r\n        // OBJECT\r\n        if (isPureObject(obj)) {\r\n            setupObjState(obj, force);\r\n        }\r\n        // ARRAY\r\n        else if (isArray(obj)) {\r\n            makeArrayWatchable(obj, force);\r\n        }\r\n    }\r\n\r\n    // If object is marked as \"deep\" and we are not forcing the walk,\r\n    // then no need to do anything. Otherwise, mark this object as\r\n    // being `deep` and keep going\r\n    if (!force && obj[OBSERVABLE_IDENTIFIER].deep) {\r\n        return;\r\n    }\r\n    else if (walk) {\r\n        obj[OBSERVABLE_IDENTIFIER].deep = true;\r\n    }\r\n\r\n    if (isArray(obj)) {\r\n        walkArray(obj);\r\n    }\r\n    else {\r\n        walkObject(obj);\r\n    }\r\n\r\n    return obj;\r\n}\r\n\r\n\r\nfunction walkArray(arr, force) {\r\n    for (let i=0, t=arr.length; i<t; i++) {\r\n        makeObservable(arr[i], true, force);\r\n    }\r\n}\r\n\r\nfunction walkObject(obj, force) {\r\n    // make ALL props observable\r\n    const keys = objectKeys(obj);\r\n\r\n    for (let i=0, t=keys.length; i<t; i++) {\r\n        if (!obj[OBSERVABLE_IDENTIFIER].props[keys[i]]) {\r\n            setupPropState(obj, keys[i]);\r\n            setupPropInterceptors(obj, keys[i]);\r\n        }\r\n\r\n        // Do we need to walk this property's value?\r\n        if (\r\n            !obj[OBSERVABLE_IDENTIFIER].props[keys[i]].deep ||\r\n            force\r\n        ) {\r\n            obj[OBSERVABLE_IDENTIFIER].props[keys[i]].deep = true;\r\n\r\n            if (isPureObject(obj[keys[i]])) {\r\n                makeObservable(obj[keys[i]], true, force);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction notify() {\r\n    // this: new Set(). Set instance could have two additional attributes: async ++ isQueued\r\n\r\n    if (!this.size) {\r\n        return;\r\n    }\r\n\r\n    // If the watcher Set() is synchronous, then execute the callbacks now\r\n    if (!this.async) {\r\n        this.forEach(execCallback);\r\n\r\n    } else {\r\n        this.forEach(pushCallbacksToQueue);\r\n    }\r\n\r\n    queueCallbackAndScheduleRun();\r\n}\r\n\r\nexport function queueCallbackAndScheduleRun(cb) {\r\n    if (cb) {\r\n        pushCallbacksToQueue(cb);\r\n    }\r\n\r\n    if (isNotifyQueued || !NOTIFY_QUEUE.size) {\r\n        return;\r\n    }\r\n\r\n    isNotifyQueued = true;\r\n    nextTick(flushQueue);\r\n}\r\n\r\nfunction pushCallbacksToQueue(callback) {\r\n    NOTIFY_QUEUE.add(callback);\r\n}\r\n\r\nfunction execCallback(cb) {\r\n    cb();\r\n}\r\n\r\nfunction flushQueue() {\r\n    const queuedCallbacks = [...NOTIFY_QUEUE];\r\n    NOTIFY_QUEUE.clear();\r\n    isNotifyQueued = false;\r\n    for (let x=0, total=queuedCallbacks.length; x<total; x++) {\r\n        queuedCallbacks[x]();\r\n    }\r\n    queuedCallbacks.length = 0;\r\n}\r\n\r\nfunction storeCallback(callback) {\r\n    // this === PropState\r\n    if (callback.asDependent && this.dependents) {\r\n        setCallbackAsWatcherOf(callback, this.dependents);\r\n        this.dependents.add(callback);\r\n    } else {\r\n        setCallbackAsWatcherOf(callback, this.watchers);\r\n        this.watchers.add(callback);\r\n    }\r\n}\r\n\r\nexport function destroyWatcher(callback, propSetup) {\r\n    // this == obj\r\n    if (callback) {\r\n        // Object state does not have dependents\r\n        if (propSetup.dependents) {\r\n            propSetup.dependents.delete(callback);\r\n            unsetCallbackAsWatcherOf(callback, propSetup.dependents);\r\n        }\r\n        propSetup.watchers.delete(callback);\r\n        unsetCallbackAsWatcherOf(callback, propSetup.watchers);\r\n    }\r\n}\r\n\r\n/**\r\n * Sets a callback to be added to the list of watchers for any property\r\n * that is accessed after this function is called.\r\n *\r\n * @param {Function} callback\r\n *  The callback to be added to dependency list of watchers.\r\n *  NOTE: the callback will modified to include a new property\r\n *  `stopWatchingAll()` which can be used to remove the given callback\r\n *  from ALL dependencies that include it.\r\n *\r\n */\r\nexport function setDependencyTracker(callback) {\r\n    TRACKERS.add(callback);\r\n}\r\n\r\n/**\r\n * Removes a callback from being added to a property's watchers as they\r\n * are accessed.\r\n *\r\n * @param {Function} callback\r\n */\r\nexport function unsetDependencyTracker(callback) {\r\n    TRACKERS.delete(callback);\r\n}\r\n\r\n/**\r\n * Removes the given callback from all property watchers lists that it may\r\n * be included in.\r\n *\r\n * @param {Function} callback\r\n */\r\nexport function stopTrackerNotification(callback) {\r\n    if (callback[WATCHER_IDENTIFIER]) {\r\n        callback[WATCHER_IDENTIFIER].stopWatchingAll();\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Store a reference to the Set instance provided on input, on the callback.\r\n * @private\r\n * @param {Function} callback\r\n * @param {Set} watchersSet\r\n */\r\nfunction setCallbackAsWatcherOf(callback, watchersSet) {\r\n    if (!callback[WATCHER_IDENTIFIER]) {\r\n        objectDefineProperty(callback, WATCHER_IDENTIFIER, {\r\n            configurable: true,\r\n            writable: true,\r\n            value: {\r\n                watching: new Set()\r\n            }\r\n        });\r\n        objectDefineProperty(callback, \"stopWatchingAll\", {\r\n            configurable: true,\r\n            writable: true,\r\n            value() {\r\n                callback[WATCHER_IDENTIFIER].watching.forEach(watcherList =>\r\n                    watcherList.delete(callback)\r\n                );\r\n                callback[WATCHER_IDENTIFIER].watching.clear();\r\n            }\r\n        });\r\n    }\r\n\r\n    callback[WATCHER_IDENTIFIER].watching.add(watchersSet);\r\n}\r\n\r\n/**\r\n * Removes the reference to the given Set instance from the callback function provided\r\n * @private\r\n * @param {Function} callback\r\n * @param {Set} watchersSet\r\n */\r\nfunction unsetCallbackAsWatcherOf(callback, watchersSet) {\r\n    if (callback[WATCHER_IDENTIFIER]) {\r\n        callback[WATCHER_IDENTIFIER].watching.delete(watchersSet);\r\n    }\r\n}\r\n\r\n\r\nexport function makeArrayWatchable(arr) {\r\n    if (!arr[OBSERVABLE_IDENTIFIER]) {\r\n        setupObjState(arr);\r\n    }\r\n\r\n    // If array already has a watchable prototype, then exit\r\n    if (arr[HAS_ARRAY_WATCHABLE_PROTO]) {\r\n        return;\r\n    }\r\n\r\n    const arrCurrentProto = arr.__proto__; // eslint-disable-line\r\n\r\n    // Create prototype interceptors?\r\n    if (!arrCurrentProto[ARRAY_WATCHABLE_PROTO]) {\r\n        const arrProtoInterceptor = Object.create(arrCurrentProto);\r\n        ARRAY_MUTATING_METHODS.forEach(method => {\r\n            objectDefineProperty(arrProtoInterceptor, method, {\r\n                configurable: true,\r\n                writable: true,\r\n                value: function arrayMethodInterceptor(...args) {\r\n                    // FIXME: need to call `makeObservable` on any value that was inserted, if `deep` is true\r\n                    const response = arrCurrentProto[method].call(this, ...args);\r\n                    this[OBSERVABLE_IDENTIFIER].dependents.notify();\r\n                    this[OBSERVABLE_IDENTIFIER].watchers.notify();\r\n                    return response;\r\n                }\r\n            });\r\n        });\r\n\r\n        // VALUE ADD: include a `size` read only attribute\r\n        objectDefineProperty(arrProtoInterceptor, \"size\", {\r\n            configurable: true,\r\n            get() {\r\n                if (TRACKERS.size) {\r\n                    TRACKERS.forEach(\r\n                        this[OBSERVABLE_IDENTIFIER].storeCallback,\r\n                        this[OBSERVABLE_IDENTIFIER]\r\n                    );\r\n                }\r\n                return this.length;\r\n            }\r\n        });\r\n\r\n        // Add flag to new array interceptor prototype indicating its watchable\r\n        objectDefineProperty(arrProtoInterceptor, HAS_ARRAY_WATCHABLE_PROTO, {\r\n            value: true\r\n        });\r\n\r\n        // Store the new interceptor prototype on the real prototype\r\n        objectDefineProperty(arrCurrentProto, ARRAY_WATCHABLE_PROTO, {\r\n            configurable: true,\r\n            writable: true,\r\n            value: arrProtoInterceptor\r\n        });\r\n    }\r\n\r\n    arr.__proto__ = arrCurrentProto[ARRAY_WATCHABLE_PROTO]; // eslint-disable-line\r\n}\r\n\r\n\r\nexport default objectWatchProp;\r\n","import { GLOBAL } from \"./getGlobal\"\r\nimport { FakeIterator } from \"./Iterator\"\r\nimport {\r\n    arrayIndexOf,\r\n    arraySplice,\r\n    objectDefineProperty,\r\n    objectDefineProperties,\r\n    SymbolIterator\r\n} from \"./runtime-aliases\"\r\n\r\n//======================================================\r\n\r\nexport const Map = GLOBAL.Map && GLOBAL.Map.prototype[SymbolIterator] ? GLOBAL.Map : FakeMap;\r\nexport default Map;\r\n\r\nexport function FakeMap() {\r\n    // FIXME: support for iterable input param\r\n}\r\n\r\nobjectDefineProperties(FakeMap.prototype, {\r\n    constructor: { value: FakeMap, configurable: true },\r\n    _: {\r\n        get() {\r\n            objectDefineProperty(this, \"_\", { value: {\r\n                keys: [],\r\n                values: []\r\n            } });\r\n            return this._;\r\n        }\r\n    },\r\n    get: {\r\n        value(key) {\r\n            return this._.values[arrayIndexOf(this._.keys, key)];\r\n        }\r\n    },\r\n    set: {\r\n        value(key, value) {\r\n            if (arrayIndexOf(this._.keys, key) === -1) {\r\n                this._.keys.push(key);\r\n                this._.values.push(value);\r\n            }\r\n            return this;\r\n        }\r\n    },\r\n    has: {\r\n        value(key) { return arrayIndexOf(this._.keys, key) !== -1; }\r\n    },\r\n    size: {\r\n        get() { return this._.keys.length; }\r\n    },\r\n    clear: {\r\n        value() {\r\n            arraySplice(this._.keys, 0);\r\n            arraySplice(this._.values, 0);\r\n        }\r\n    },\r\n    delete: {\r\n        value(key) {\r\n            const idx = arrayIndexOf(this._.keys, key);\r\n            if (idx !== -1) {\r\n                arraySplice(this._.keys, idx, 1);\r\n                arraySplice(this._.values, idx, 1);\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n    },\r\n    keys: {\r\n        value() {\r\n            return new FakeIterator(this._.keys);\r\n        }\r\n    },\r\n    values: {\r\n        value() {\r\n            return new FakeIterator(this._.values);\r\n        }\r\n    },\r\n    entries: {\r\n        value() {\r\n            return new FakeIterator(this._.keys, this._.values);\r\n        }\r\n    },\r\n    forEach: {\r\n        value(cb, thisArg) {\r\n            this._.keys.forEach((item, i) => cb(this._.values[i], item, this), thisArg);\r\n        }\r\n    },\r\n    [SymbolIterator]: {\r\n        value() {\r\n            return this.entries();\r\n        }\r\n    }\r\n});\r\n\r\n","import dataStore    from \"@purtuga/common/src/jsutils/dataStore\"\r\nimport Map          from \"@purtuga/common/src/jsutils/es6-Map\"\r\n\r\n//=====================================================\r\nconst DOCUMENT              = document;\r\nconst FUNCTION              = Function;\r\nconst ELEMENT_PROTOTYPE     = Element.prototype;\r\nconst ARRAY_PROTOTYPE       = Array.prototype;\r\nconst VALUE_GETTERS         = new Map();\r\nconst _bind                 = FUNCTION.bind.call.bind(FUNCTION.bind);\r\n\r\nexport const DOM_DATA_BIND_PROP = \"DomDataBind\";\r\nexport const PRIVATE            = dataStore.create();\r\nexport const UUID               = `D-${ Date.now() }-${ Math.random().toString(36).replace(/[^a-z0-9]+/g, '') }`;\r\nexport const escapeString       = str => String(str).replace(/[-[\\]/{}()*+?.\\\\^$|]/g, \"\\\\$&\");\r\nexport const bindCallTo         = _bind(FUNCTION.call.bind, FUNCTION.call);\r\nexport const isPureObject       = o => Object.prototype.toString.call(o) === \"[object Object]\";\r\nexport const isString           = s => \"string\" === typeof s;\r\nexport const arrayForEach       = bindCallTo(ARRAY_PROTOTYPE.forEach);\r\nexport const arraySlice         = bindCallTo(ARRAY_PROTOTYPE.slice);\r\nexport const hasAttribute       = bindCallTo(ELEMENT_PROTOTYPE.hasAttribute);\r\nexport const getAttribute       = bindCallTo(ELEMENT_PROTOTYPE.getAttribute);\r\nexport const setAttribute       = bindCallTo(ELEMENT_PROTOTYPE.setAttribute);\r\nexport const removeAttribute    = bindCallTo(ELEMENT_PROTOTYPE.removeAttribute);\r\nexport const insertBefore       = bindCallTo(ELEMENT_PROTOTYPE.insertBefore);\r\nexport const removeChild        = bindCallTo(ELEMENT_PROTOTYPE.removeChild);\r\nexport const createComment      = _bind(DOCUMENT.createComment, DOCUMENT);\r\nexport const createTextNode     = _bind(DOCUMENT.createTextNode, DOCUMENT);\r\nexport const createDocFragment  = _bind(DOCUMENT.createDocumentFragment, DOCUMENT);\r\nexport const logError           = _bind(console.error, console); // eslint-disable-line\r\n\r\n\r\nexport function createValueGetter(evalCode) {\r\n    evalCode = evalCode.trim();\r\n\r\n    if (VALUE_GETTERS.has(evalCode)) {\r\n        return VALUE_GETTERS.get(evalCode);\r\n    }\r\n\r\n    const fn = new FUNCTION(\"$data\", `\r\nwith ($data) {\r\n    if ($data) {\r\n        with ($data) {\r\n            return ${ evalCode };\r\n        }\r\n    } \r\n    else {\r\n        return ${ evalCode };\r\n    }\r\n}\r\n`);\r\n    VALUE_GETTERS.set(evalCode, fn);\r\n    return fn;\r\n}\r\n\r\nexport function getNodeAttrNames(node){\r\n    const attrNames = [];\r\n    const total = node.attributes.length;\r\n\r\n    for(let i = 0; i < total; i++) {\r\n        attrNames.push(node.attributes.item(i).name);\r\n    }\r\n\r\n    return attrNames;\r\n}","/**\r\n * Finds Elements within a given HTML Element using `querySelectorAll` and\r\n * return an Array with those elements.\r\n *\r\n * @function domFind\r\n *\r\n * @param {HTMLElement} domEle\r\n * @param {String} selector\r\n *\r\n * @returns {Array<HTMLElement>}\r\n */\r\nexport function domFind(domEle, selector){\r\n    return Array.prototype.slice.call(domEle.querySelectorAll(selector));\r\n}\r\nexport default domFind;\r\n","import nextTick from \"@purtuga/common/src/jsutils/nextTick\"\r\nimport Compose from \"@purtuga/common/src/jsutils/Compose\"\r\nimport {logError, PRIVATE, removeAttribute} from \"../utils\"\r\nimport {setDependencyTracker, unsetDependencyTracker} from \"@purtuga/observables/src/objectWatchProp\"\r\n\r\n//===================================================================================\r\n\r\n/**\r\n * A DOM element directive.\r\n * NOte that any directive that removes the original DOM element from its parent\r\n * will prevent all subsequent directives from running.\r\n *\r\n * @class Directive\r\n * @extends Compose\r\n *\r\n * @param {String} directiveAttr\r\n *  The directive html element attribute as found in the element.\r\n * @param {String} attrValue\r\n *  The value of the attribute\r\n */\r\nexport class Directive extends Compose {\r\n    /**\r\n     * Checks a given element has an element attribute that matches the Directive.\r\n     * If a match is found, the html Element's attribute that was matched must be\r\n     * returned.\r\n     *\r\n     * @param {HTMLElement} ele\r\n     *\r\n     * @returns {String}\r\n     */\r\n    static has(/*ele*/) { return \"\"; }\r\n\r\n    /**\r\n     * A boolean indicating whether this directive manages the element. If set to true, then\r\n     * `DomDataBind` will not process any other directives after this one.\r\n     */\r\n    static manages() { return false; }\r\n\r\n    /**\r\n     * Render the Directive with given data\r\n     *\r\n     * @param {NodeHandler} handler\r\n     * @param {Node} node\r\n     * @param {Object} data\r\n     */\r\n    render(handler, node, data) {\r\n        let state = PRIVATE.get(handler);\r\n\r\n        if (!state) {\r\n            state = {\r\n                data:       null,\r\n                value:      \"\",\r\n                isQueued:   false,\r\n                deferUpd:   this.update.bind(this, handler),\r\n                tracker:    () => this.render(handler, node, state.data)\r\n                //update: () => {} --- should be defined by Directive subclass\r\n            };\r\n            PRIVATE.set(handler, state);\r\n\r\n        }\r\n\r\n        if (state.data !== data) {\r\n            if (state.tracker.stopWatchingAll) {\r\n                state.tracker.stopWatchingAll();\r\n            }\r\n            state.data = data;\r\n        }\r\n\r\n        if (state.isQueued) {\r\n            return;\r\n        }\r\n\r\n        state.isQueued = true;\r\n        nextTick(state.deferUpd);\r\n    }\r\n\r\n    /**\r\n     * Updates a node by generating a new value for the Directive, storing it\r\n     * in the handler `state.value` and calling `handle.update` after it.\r\n     *\r\n     * @param {NodeHandler} handler\r\n     */\r\n    update(handler) {\r\n        // destruction happens 1ms after .destroy() (Componse#destroy()) is called,\r\n        // so its possible that a handler might come in here having its `.isDestroyed`\r\n        // flag set.\r\n        if (handler.isDestroyed) {\r\n            return;\r\n        }\r\n\r\n        const handlerState = PRIVATE.get(handler);\r\n\r\n        if (handlerState) {\r\n            let newValue = \"\";\r\n\r\n            setDependencyTracker(handlerState.tracker);\r\n\r\n            try {\r\n                newValue = this._tokenValueGetter(handlerState.data || {});\r\n\r\n                // Update node\r\n                if (handler.update) {\r\n                    handler.update(newValue);\r\n                }\r\n            }\r\n            catch(e) {\r\n                logError(e);\r\n            }\r\n\r\n            unsetDependencyTracker(handlerState.tracker);\r\n\r\n            handlerState.isQueued = false;\r\n            if (handlerState.value !== newValue) {\r\n                handlerState.value = newValue;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns an object with a `render` function for the given node.\r\n     *\r\n     * @param {Node} node\r\n     * @param {Array<Directive>} [directives]\r\n     *\r\n     * @return {NodeHandler}\r\n     */\r\n    getNodeHandler(node/*, directives*/) {\r\n        if (this._attr && node.nodeType !== 8 /* no comment nodes */) {\r\n            removeAttribute(node, this._attr);\r\n        }\r\n        return new NodeHandler(this, node);\r\n    }\r\n}\r\nexport default Directive;\r\n\r\n/**\r\n * A node directive handler.\r\n *\r\n * @extends Compose\r\n */\r\nclass NodeHandler extends Compose {\r\n    init(directive, node) {\r\n        this._d = directive;\r\n        this._n = node;\r\n    }\r\n\r\n    // Override destroy (which is by default \"async\" and ensure that notifications\r\n    // are turned off immediately for this Node\r\n    destroy() {\r\n        const state = PRIVATE.get(this);\r\n        if (state){\r\n            if (state.tracker && state.tracker.stopWatchingAll) {\r\n                state.tracker.stopWatchingAll();\r\n            }\r\n            if (state.data) {\r\n                state.data = null;\r\n            }\r\n        }\r\n        super.destroy();\r\n        PRIVATE.delete(this);\r\n    }\r\n\r\n    /**\r\n     * Renders the data given on input to the Node\r\n     *\r\n     * @param data\r\n     */\r\n    render(data) {\r\n        this._d.render(this, this._n, data);\r\n    }\r\n\r\n    /**\r\n     * Applies a new value to the Node. This method will check if the handler instance state data has\r\n     * a method named `update` and if so, delegate to that method as to how the node should be updated.\r\n     *\r\n     * @param newValue\r\n     */\r\n    update(newValue) {\r\n        const state = PRIVATE.get(this);\r\n        if (state && state.update) {\r\n            return state.update(newValue);\r\n        }\r\n    }\r\n}\r\n\r\n","import Directive from \"../directives/Directive\"\r\nimport {\r\n    PRIVATE,\r\n    UUID,\r\n    createValueGetter   } from \"../utils\"\r\n\r\n//===========================================================\r\n\r\nexport class TextBinding extends Directive {\r\n    init(tokenText) {\r\n        this._tokenText = tokenText;\r\n        this._tokenValueGetter = createValueGetter(tokenText);\r\n    }\r\n\r\n    render(handler, node, data) {\r\n        super.render(handler, node, data);\r\n        const state = PRIVATE.get(handler);\r\n        if (!state.update) {\r\n            state.update = newValue => {\r\n                if (newValue !== node.nodeValue) {\r\n                    node.nodeValue = newValue;\r\n                }\r\n            };\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns an object with a `render` function for the given node\r\n     *\r\n     * @param {Node} node\r\n     *\r\n     * @return\r\n     */\r\n    getNodeHandler(node) {\r\n        // Text nodes are processed in a special way in `DomDataBind.getTemplateForDomElement`, where\r\n        // free-floating textnode are replaced with HTML comments in order to not lose their place when\r\n        // converted to text and then back to dom elements. We replace those here now..\r\n        if (node.nodeType === 8 && node.nodeValue === UUID) {\r\n            const nodeToRemove = node;\r\n            // FIXME: below code should use node.ownerDocument???\r\n            node = node.parentNode.insertBefore(document.createTextNode(\"\"), nodeToRemove);\r\n            nodeToRemove.parentNode.removeChild(nodeToRemove);\r\n        }\r\n\r\n        return super.getNodeHandler(node);\r\n    }\r\n}\r\n\r\nexport default TextBinding;\r\n\r\n","import {makeObservable} from \"@purtuga/observables/src/objectWatchProp\";\r\nimport domFind from \"@purtuga/common/src/domutils/domFind\"\r\nimport {\r\n    PRIVATE,\r\n    UUID,\r\n    DOM_DATA_BIND_PROP,\r\n    bindCallTo,\r\n    removeAttribute,\r\n    getAttribute,\r\n    arrayForEach,\r\n    createComment,\r\n    createDocFragment,\r\n    createTextNode,\r\n    logError\r\n} from \"./utils\"\r\nimport TextBinding from \"./bindings/text-binding\"\r\n//=========================================================================================\r\nconst DATA_TOKEN_REG_EXP_STR    = \"{{(.*?)}}\";\r\nconst DROPS_NODES_ON_CLONE = (() => {   // FUCK YOU IE!\r\n    const frag = createDocFragment();\r\n    frag.appendChild(createTextNode(\"test\"));\r\n    frag.appendChild(createTextNode(\"\"));\r\n    return frag.cloneNode(true).childNodes.length === 1;\r\n})();\r\nconst NODE_CONTAINS_MISSES_TEXT_NODES = (() => {    // FUCK YOU IE!\r\n    const div = document.createElement(\"div\");\r\n    const text = createTextNode(\"test\");\r\n    div.appendChild(text);\r\n    return !div.contains(text);\r\n})();\r\n\r\n\r\n// Local aliases\r\nconst nodeSplitText         = bindCallTo(Text.prototype.splitText);\r\n\r\n// short helpers\r\nconst reHasDataToken        = new RegExp(DATA_TOKEN_REG_EXP_STR);\r\nconst reTokenMatch          = new RegExp(DATA_TOKEN_REG_EXP_STR, \"g\");\r\nconst getNodeValue          = node => node ? node.nodeValue : \"\";\r\nconst hasToken              = node => reHasDataToken.test(getNodeValue(node));\r\n\r\n\r\n/**\r\n * A Dom template along with its set of know directives (after parsing it)\r\n */\r\nexport class Template {\r\n    constructor(html, directives = []) {\r\n        this._template = document.createElement(\"template\");\r\n        this._template.innerHTML = html;\r\n        this._directives = directives;\r\n        this._bindings = getBindingFor(this._template.content, directives);\r\n    }\r\n\r\n    /**\r\n     * Creates new DOM Element based on this template, initilizes directives\r\n     * and then applies the data to it.\r\n     *\r\n     * @param {Object} [data]\r\n     *\r\n     * @return {DocumentFragment}\r\n     *  Document Fragment returned will have a property named 'DomDataBind', which is\r\n     *  a TemplateInstance class instance\r\n     */\r\n    cloneWith(data = {}) {\r\n        makeObservable(data);\r\n        const response = document.importNode(this._template.content, true);\r\n        response[DOM_DATA_BIND_PROP] = new TemplateInstance(\r\n            response,\r\n            applyBindingsToTemplateInstance(response, this._bindings, this._directives)\r\n        );\r\n        response[DOM_DATA_BIND_PROP].setData(data);\r\n        return response;\r\n    }\r\n}\r\nexport default Template;\r\n\r\n/**\r\n * Returns a Map() that includes the paths to nodes in the Dom template that\r\n * are using Directives or have bindings.\r\n * The map \"key\" is an array of `childNodes` paths from the root of the template\r\n * all the way to the node.\r\n * The map \"value\" is an array Directive instances for that node\r\n *\r\n * @return {Map}\r\n */\r\nexport function getBindingFor(ele, directives) {\r\n    // FIXME: refactor this entire function to be faster and more efficient\r\n\r\n\r\n    // template bindings Map() structure:\r\n    //\r\n    //      bindings = Map(\r\n    //          [path, via, childNodes, to, element]: [ directive instances ],\r\n    //          // example:\r\n    //          [0,1,3]: [ directiveInstance1, directiveInstance2 ]\r\n    //      )\r\n    //  }\r\n    //\r\n\r\n    // The goal is to be able to provide a path to each elements for which a group of directives will be applied.\r\n    const bindings          = new Map(); // FIXME: these can be global and reusable - since we only ever have one call in flight to this function\r\n    const eleToBindings     = new Map();\r\n    const ignoredChildren   = new Set();\r\n    let domEle;\r\n\r\n    const directiveIterator = Directive => {\r\n        let attrName;\r\n        let attrValue;\r\n        let managesNode;\r\n        let elePlaceholder = domEle;\r\n\r\n        while ((attrName = Directive.has(domEle))) {\r\n            attrValue = getAttribute(domEle, attrName);\r\n            managesNode = Directive.manages();\r\n\r\n            if (managesNode) {\r\n                elePlaceholder = createComment(\"\");\r\n            }\r\n\r\n            getArrayForNodeFromMap(eleToBindings, elePlaceholder).push(\r\n                getDirectiveForAttribute(Directive, attrName, attrValue)\r\n            );\r\n\r\n            removeAttribute(domEle, attrName);\r\n\r\n            if (managesNode) {\r\n                ignoredChildren.add(domEle);\r\n\r\n                // Replace this node with a Comment, and store the node's html\r\n                // as the comment data, which is then used by the directive instance\r\n                // to `render()` it to DOM when applicable\r\n                domEle.parentNode.insertBefore(elePlaceholder, domEle);\r\n                const fakeEle = document.createElement(\"div\");\r\n                fakeEle.appendChild(domEle);\r\n                elePlaceholder.data = fakeEle.innerHTML;\r\n            }\r\n        }\r\n        return managesNode;\r\n    };\r\n\r\n    const processTextNode = child => {\r\n        if (hasToken(child)) {\r\n            reTokenMatch.lastIndex = 0;\r\n            let nodeValue = getNodeValue(child);\r\n            let childTokenMatches = reTokenMatch.exec(nodeValue);\r\n\r\n            while (childTokenMatches) {\r\n                // If no need to split the text node, then just create a binding for it and exit\r\n                if (nodeValue === \"{{\" + childTokenMatches[1] + \"}}\") {\r\n                    getArrayForNodeFromMap(eleToBindings, child).push(getTextBindingForToken(TextBinding, childTokenMatches[1]));\r\n                    childTokenMatches = null;\r\n                }\r\n                else {\r\n                    let tokenTextNode = nodeSplitText(child, childTokenMatches.index);\r\n\r\n                    // IF browser drops empty nodes, then fix the child node (which now is the left portion\r\n                    // of the split)\r\n                    if (DROPS_NODES_ON_CLONE) {\r\n                        fixEmptyTextNode(child);\r\n                    }\r\n\r\n                    // FIXME: need to handle empty node when browser does not do clones correctly (IE for sure... Edge might be fixed now)\r\n\r\n                    // Split again at the end of token, so that we have a dedicated text node for the token value.\r\n                    // Because this will be used as a template, also need to replace this token value node\r\n                    // with an HTML comment, which will be replaced later during directive initialization\r\n                    // The remainder of the Text value is assigned back to `child` so that we can continue\r\n                    // to check it for other text tokens.\r\n                    child = nodeSplitText(tokenTextNode, childTokenMatches[0].length);\r\n                    const tokenPlaceholder = tokenTextNode.parentNode.insertBefore(createComment(UUID), tokenTextNode);\r\n                    tokenTextNode.parentNode.removeChild(tokenTextNode);\r\n\r\n                    getArrayForNodeFromMap(eleToBindings, tokenPlaceholder).push(getTextBindingForToken(TextBinding, childTokenMatches[1]));\r\n\r\n                    // Reset the regular expression (since `child` was also \"reset\") and execute\r\n                    // the regular expression again on the remaining text\r\n                    reTokenMatch.lastIndex = 0;\r\n                    childTokenMatches = reTokenMatch.exec(getNodeValue(child));\r\n\r\n                    if (!childTokenMatches && DROPS_NODES_ON_CLONE) {\r\n                        fixEmptyTextNode(child);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    findAllNodes(ele).forEach(node => {\r\n        let skip = false;\r\n\r\n        if (ignoredChildren.size) {\r\n            for (let ignoredParent of ignoredChildren.values()) {\r\n                if (NODE_CONTAINS_MISSES_TEXT_NODES && node.nodeType === 3) {\r\n                    if (ignoredParent.compareDocumentPosition(node) & 16) {\r\n                        skip = true;\r\n                    }\r\n                }\r\n                else if (ignoredParent.contains(node)) {\r\n                    skip = true;\r\n                }\r\n\r\n                if (skip) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        domEle = node;\r\n\r\n        if (!skip) {\r\n            // Process Element level Directives\r\n            if (node.nodeType === 1) {\r\n                directives.some(directiveIterator);\r\n            }\r\n            // TEXT nodes\r\n            else if (node.nodeType === 3) {\r\n                processTextNode(node);\r\n            }\r\n        }\r\n    });\r\n\r\n    domEle = null;\r\n\r\n\r\n    // Create the list array of node indexes for each binding processed\r\n    eleToBindings.forEach((directiveBindings, bindingEle) => {\r\n        if (ele === bindingEle) {\r\n            bindings.set([], directiveBindings);\r\n            return;\r\n        }\r\n\r\n        const path  = [];\r\n        let walkEle = bindingEle;\r\n        let parent  = walkEle.parentNode;\r\n\r\n        while (walkEle !== ele) {\r\n            path.unshift(path.indexOf.call(parent.childNodes, walkEle));\r\n            walkEle = walkEle.parentNode;\r\n            parent  = walkEle.parentNode;\r\n        }\r\n\r\n        bindings.set(path, directiveBindings);\r\n    });\r\n\r\n    eleToBindings.clear();\r\n    ignoredChildren.clear();\r\n\r\n    return bindings;\r\n}\r\n\r\n/**\r\n * Applies the bindings in the given Map to the DocumentFragment provided on input.\r\n *\r\n * @param {DocumentFragment} frag\r\n * @param {Map<Array<Number>, Array<Directive>>} bindings\r\n * @param {Array<Directive>} Directives\r\n *\r\n * @return {Array<NodeHandler>}\r\n *  An array of Node directive handlers is returned.\r\n */\r\nexport function applyBindingsToTemplateInstance(frag, bindings, Directives) {\r\n    const response = [];\r\n\r\n    bindings.forEach((directivesInstances, path) => {\r\n        const node = getNodeAt(frag, path);\r\n        if (!node) {\r\n            logError(new Error(`dom-data-bind#render(): Unable to find node!`));\r\n            return;\r\n        }\r\n\r\n        for (let i=0, t=directivesInstances.length; i < t; i++) {\r\n            response.push(directivesInstances[i].getNodeHandler(node, Directives));\r\n        }\r\n    });\r\n\r\n    return response;\r\n}\r\n\r\nfunction getNodeAt(root, path) {\r\n    if (!path.length) {\r\n        return root;\r\n    }\r\n\r\n    arrayForEach(path, index => root = root.childNodes[index]);\r\n    return root;\r\n}\r\n\r\nfunction getArrayForNodeFromMap(map, node) {\r\n    if (!map.has(node)) {\r\n        map.set(node, []);\r\n    }\r\n    return map.get(node);\r\n}\r\n\r\n/**\r\n * Returns a node handlers for the given directive\r\n *\r\n * @param {Directive} Directive\r\n * @param {String} tokenText\r\n *  The token text (no curly braces)\r\n *\r\n * @returns {Directive}\r\n *  Returns a Directive instance. Call `.getNodeHandler` to get a handler for a given node\r\n */\r\nfunction getTextBindingForToken(Directive, tokenText) {\r\n    tokenText = tokenText.trim();\r\n\r\n    let directiveInstances = PRIVATE.get(Directive);\r\n\r\n    if (!directiveInstances) {\r\n        directiveInstances = {};\r\n        PRIVATE.set(Directive, directiveInstances);\r\n    }\r\n\r\n    if (!directiveInstances[tokenText]) {\r\n        directiveInstances[tokenText] = new Directive(tokenText);\r\n    }\r\n\r\n    return directiveInstances[tokenText];\r\n}\r\n\r\nfunction getDirectiveForAttribute (Directive, attrName, attrValue) {\r\n    attrValue = attrValue.trim();\r\n\r\n    const directiveSignature    = `${attrName}-${ UUID }-${ attrValue }`;\r\n    let directiveInstances      = PRIVATE.get(Directive);\r\n\r\n    if (!directiveInstances) {\r\n        directiveInstances = {};\r\n        PRIVATE.set(Directive, directiveInstances);\r\n    }\r\n\r\n    if (!directiveInstances[directiveSignature]) {\r\n        directiveInstances[directiveSignature] = new Directive(attrName, attrValue);\r\n    }\r\n\r\n    return directiveInstances[directiveSignature];\r\n}\r\n\r\n/**\r\n *\r\n * @private\r\n * @param {HTMLElement} ele\r\n * @returns {boolean}\r\n */\r\nfunction onlyElementsWithAttributes(ele/*, index, arr*/) {\r\n    return ele.nodeType !== 1 || (ele.nodeType === 1 && ele.attributes.length > 0);\r\n}\r\n\r\n/**\r\n *\r\n * @private\r\n * @param {Array} resultArr\r\n * @param {HTMLElement} ele\r\n * @returns {Array}\r\n */\r\nfunction addTextNodes(resultArr, ele /*, index, arr*/) {\r\n    resultArr.push(ele);\r\n    if (ele.hasChildNodes()) {\r\n        ele = ele.firstChild;\r\n        for (;ele;) {\r\n            const nextSibling = ele.nextSibling;\r\n\r\n            // IF Text node and it has the token\r\n            if (ele.nodeType === 3 && !!ele.nodeValue && reHasDataToken.test(getNodeValue(ele))) {\r\n                resultArr.push(ele);\r\n            }\r\n\r\n            if (DROPS_NODES_ON_CLONE) {\r\n                fixEmptyTextNode(ele);\r\n            }\r\n\r\n            ele = nextSibling;\r\n        }\r\n    }\r\n    return resultArr;\r\n}\r\n\r\nfunction fixEmptyTextNode(node) {\r\n    if (node.nodeType === 3 && DROPS_NODES_ON_CLONE && !node.nodeValue) {\r\n        node.parentNode.insertBefore(createComment(\"\"), node);\r\n        node.parentNode.removeChild(node);\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n * @private\r\n * @param {HTMLElement} ele\r\n *\r\n * @return {Array<Node>}\r\n */\r\nfunction findAllNodes(ele) {\r\n    return [ele]\r\n        .concat(domFind(ele, \"*\"))\r\n        .reduce(addTextNodes, [])\r\n        .filter(onlyElementsWithAttributes);\r\n}\r\n\r\n\r\nclass TemplateInstance {\r\n    constructor(docFrag, bindings) {\r\n        this._frag = docFrag;\r\n        this._bindings = bindings;\r\n    }\r\n\r\n    destroy() {\r\n        if (this._bindings) {\r\n            for (let i = 0, t = this._bindings.length; i < t; i++) {\r\n                this._bindings[i].destroy();\r\n            }\r\n            this._bindings.length = 0;\r\n        }\r\n    }\r\n\r\n    setData(data) {\r\n        for (let i = 0, t = this._bindings.length; i < t; i++) {\r\n            this._bindings[i].render(data);\r\n        }\r\n    }\r\n}\r\n\r\n","import Template from \"./Template\"\r\n\r\n//==========================================================================\r\nconst TEMPLATES = new Map();\r\n\r\n/**\r\n * Returns a DocumentFragment representation of the given `html` code provided on\r\n * input bound to the given data.\r\n *\r\n * @param {String} html\r\n * @param {Object} [data]\r\n * @param {Array} [directives]\r\n *\r\n * @return {DocumentFragment}\r\n */\r\nexport function render(html, data, directives) {\r\n    if (!TEMPLATES.has(html)) {\r\n        TEMPLATES.set(html, new Template(html, directives));\r\n    }\r\n    return TEMPLATES.get(html).cloneWith(data);\r\n}\r\nexport default render;\r\n","import Compose from \"@purtuga/common/src/jsutils/Compose\"\r\nimport {makeObservable} from \"@purtuga/observables/src/objectWatchProp\";\r\nimport { PRIVATE, arrayForEach, isString } from \"./utils\"\r\nimport { getBindingFor, applyBindingsToTemplateInstance } from \"./Template\"\r\nimport { render } from \"./render\";\r\n\r\n//======================================================================\r\n\r\n/**\r\n * Bind data to a DOM element and automatically persist changes in that data to the UI.\r\n * By default, this constructor provides interpolation of Text tokens found in the DOM\r\n * structure (represented with double curly braces: `{{ }}`). Directives can be used\r\n * by extending this constructor and adding them to the [directives]{@link DomDataBind.directives}\r\n * static property.\r\n *\r\n * @class DomDataBind\r\n * @extends Compose\r\n *\r\n * @param {String |HTMLElement} html\r\n *  The HTML element that will be parse and to which `data` will be bound.\r\n *\r\n * @param {Object} data\r\n *  An object whose data will be used to bind to `html` element (once crated) .\r\n *\r\n */\r\nexport const DomDataBind = Compose.extend({\r\n    /**\r\n     * The Element whose data was bound to.\r\n     * When a string is used on input, this will be a DocumentFragment, which\r\n     * means that it could be empty if its content was inserted into DOM\r\n     */\r\n    $ele: null,\r\n\r\n    init(html, data) {\r\n        const Factory = this.getFactory();\r\n        const state = {\r\n            html,\r\n            data,\r\n            directives: Factory.directives.slice(0)\r\n        };\r\n\r\n        PRIVATE.set(this, state);\r\n\r\n        if (isString(html)) {\r\n            this.$ele = render(html, data, state.directives);\r\n            state.bindings = this.$ele._domDataBindNodeHandlers;\r\n        } else {\r\n            this.$ele = html;\r\n            state.bindings = applyBindingsToTemplateInstance(html, getBindingFor(html, state.directives), state.directives);\r\n            if (data) {\r\n                this.setData(data);\r\n            }\r\n        }\r\n\r\n        this.onDestroy(() => {\r\n            arrayForEach(state.bindings, binding => binding.destroy());\r\n\r\n            delete state.data;\r\n            delete state.directives;\r\n            delete state.bindings;\r\n\r\n            Factory.getDestroyCallback(state, PRIVATE)();\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Set data on to the DOM provided during initialization.\r\n     * In most cases, you should never have the need to call this method. Data\r\n     * provided during initialization is \"live\" and changes are automatically\r\n     * reflected to dom.\r\n     */\r\n    setData(data) {\r\n        makeObservable(data);\r\n        const bindings = PRIVATE.get(this).bindings;\r\n        arrayForEach(bindings, binding => binding.render(data));\r\n    }\r\n});\r\nexport default DomDataBind;\r\n\r\n/**\r\n * A list of Directives to be used.\r\n *\r\n * @name DomDataBind.directives\r\n * @type {Array}\r\n */\r\nDomDataBind.directives = [];\r\n","/**\r\n * Check if an element has a given class\r\n *\r\n * @function domHasClass\r\n *\r\n * @param {HTMLElement} el\r\n * @param {String} cssClass\r\n *\r\n * @return {Boolean}\r\n */\r\nexport function domHasClass(el, cssClass){\r\n    if (el && cssClass) {\r\n        return el.classList.contains(cssClass);\r\n    }\r\n    return false;\r\n}\r\nexport default domHasClass;\r\n","/**\r\n * Adds class to an element\r\n *\r\n * @function domAddClass\r\n *\r\n * @param {HTMLElement} el\r\n * @param {String} cssClass\r\n *  Multiple classes can be set using spaces as a delimiter\r\n */\r\nexport function domAddClass(el, cssClass){\r\n    let classNameList = String(cssClass).trim().split(/\\s+/).map(className => className.trim());\r\n    if (el && classNameList.length) {\r\n        classNameList.forEach((cssClass) => el.classList.add(cssClass));\r\n    }\r\n}\r\nexport default domAddClass;","/**\r\n * removes a class from an element\r\n *\r\n * @function domRemoveClass\r\n *\r\n * @param {HTMLElement} el\r\n * @param {String} cssClass\r\n */\r\nexport function domRemoveClass(el, cssClass){\r\n    return el.classList.remove(cssClass);\r\n}\r\nexport default domRemoveClass;","import domHasClass      from \"@purtuga/common/src/domutils/domHasClass\"\r\nimport domAddClass      from \"@purtuga/common/src/domutils/domAddClass\"\r\nimport domRemoveClass   from \"@purtuga/common/src/domutils/domRemoveClass\"\r\nimport Directive        from \"./Directive\"\r\nimport {\r\n    PRIVATE,\r\n    createValueGetter,\r\n    hasAttribute  } from \"../utils\"\r\n\r\n//============================================\r\nconst DIRECTIVE = \"_class\";\r\n\r\nexport class ClassDirective extends Directive {\r\n    static has(ele) {\r\n        return hasAttribute(ele, DIRECTIVE) ? DIRECTIVE : \"\";\r\n    }\r\n\r\n\r\n    init(attr, attrValue) {\r\n        this._attr              = attr;\r\n        this._tokenValueGetter  = createValueGetter((attrValue || \"\"));\r\n    }\r\n\r\n    render(handler, node, data) {\r\n        super.render(handler, node, data);\r\n        const state = PRIVATE.get(handler);\r\n        if (!state.update) {\r\n            state.update = newValue => applyCssClassesToNode(node, newValue, newValue !== state.value ? state.value : {});\r\n        }\r\n    }\r\n}\r\n\r\nexport default ClassDirective;\r\n\r\n\r\nfunction applyCssClassesToNode(node, newClasses = {}, oldClasses = {}) {\r\n    Object.keys(newClasses)\r\n        .concat(Object.keys(oldClasses))\r\n        .forEach(className => {\r\n            if (newClasses[className] && !domHasClass(node, className)) {\r\n                domAddClass(node, className);\r\n            }\r\n            else if (!newClasses[className] && domHasClass(node, className)) {\r\n                domRemoveClass(node, className);\r\n            }\r\n        });\r\n}\r\n","import {\r\n    PRIVATE,\r\n    createValueGetter,\r\n    hasAttribute    }   from \"../utils\"\r\nimport Directive        from \"./Directive\"\r\n\r\n//============================================\r\nconst DIRECTIVE = \"_style\";\r\n\r\nexport class StyleDirective extends Directive {\r\n    static has(ele) {\r\n        return hasAttribute(ele, DIRECTIVE) ? DIRECTIVE : \"\";\r\n    }\r\n\r\n\r\n    init(attr, attrValue) {\r\n        this._attr              = attr;\r\n        this._tokenValueGetter  = createValueGetter((attrValue || \"\"));\r\n    }\r\n\r\n    render(handler, node, data) {\r\n        super.render(handler, node, data);\r\n        const state = PRIVATE.get(handler);\r\n        if (!state.update) {\r\n            const eleStyleList  = node.style;\r\n            state.update        = newValue => {\r\n                Object.keys(newValue).forEach(styleProp => {\r\n                    if (eleStyleList[styleProp] !== newValue[styleProp]) {\r\n                        eleStyleList[styleProp] = newValue[styleProp];\r\n                    }\r\n                });\r\n            };\r\n        }\r\n    }\r\n}\r\n\r\nexport default StyleDirective;","import Directive    from \"./Directive\"\r\nimport {\r\n    PRIVATE,\r\n    DOM_DATA_BIND_PROP,\r\n    arraySlice,\r\n    hasAttribute,\r\n    createComment,\r\n    insertBefore,\r\n    removeChild,\r\n    createValueGetter } from \"../utils\"\r\nimport {render} from \"../render\"\r\n\r\n//============================================\r\nconst DIRECTIVE = \"_if\";\r\n\r\nexport class IfDirective extends Directive {\r\n    static has(ele) {\r\n        return hasAttribute(ele, DIRECTIVE) ? DIRECTIVE : \"\";\r\n    }\r\n\r\n    static manages() { return true; }\r\n\r\n    init(attr, attrValue) {\r\n        this._attr              = attr;\r\n        this._tokenValueGetter  = createValueGetter((attrValue || \"\"));\r\n    }\r\n\r\n    render(handler, node, data) {\r\n        super.render(handler, node, data);\r\n        const state = PRIVATE.get(handler);\r\n\r\n        if (!state.update) {\r\n            state.renderedEle           = null;\r\n            state.insertEle             = handler._placeholderEle;\r\n            state.directives            = handler._directives;\r\n            state.destroyRenderedEle    = destroyRenderedEle;\r\n            state.renderTemplate        = handler._n.data;\r\n            state.update                = renderUpdate;\r\n            handler.onDestroy(() => state.destroyRenderedEle());\r\n        }\r\n    }\r\n\r\n    getNodeHandler(node, directives) {\r\n        const handler = super.getNodeHandler(node);\r\n        handler._placeholderEle = createComment(\"\");\r\n        handler._directives = directives;\r\n        insertBefore(node.parentNode, handler._placeholderEle, node);\r\n        removeChild(node.parentNode, node);\r\n        return handler;\r\n    }\r\n}\r\n\r\nfunction renderUpdate(showElement) {\r\n    // this === state object\r\n    if (this.value === showElement) {\r\n        return;\r\n    }\r\n\r\n    if (showElement && !this.renderedEle) {\r\n        this.renderedEle = render(this.renderTemplate, this.data, this.directives);\r\n        this.renderedEle._children = arraySlice(this.renderedEle.childNodes, 0);\r\n        insertBefore(this.insertEle.parentNode, this.renderedEle, this.insertEle);\r\n    }\r\n    else if (!showElement && this.renderedEle)  {\r\n        this.destroyRenderedEle();\r\n    }\r\n}\r\n\r\nfunction destroyRenderedEle() {\r\n    // this === state object\r\n    if (this.renderedEle) {\r\n        this.renderedEle._children.forEach(e => e.parentNode && e.parentNode.removeChild(e));\r\n        this.renderedEle[DOM_DATA_BIND_PROP].destroy();\r\n        this.renderedEle = null;\r\n    }\r\n}\r\n\r\nexport default IfDirective;\r\n","import Directive        from \"./Directive\"\r\nimport {\r\n    PRIVATE,\r\n    createValueGetter,\r\n    hasAttribute    }   from \"../utils\"\r\n\r\n//============================================\r\nconst DIRECTIVE             = \"_show\";\r\nconst HIDDEN                = \"none\";\r\n\r\nexport class ShowDirective extends Directive {\r\n    static has(ele) {\r\n        return hasAttribute(ele, DIRECTIVE) ? DIRECTIVE : \"\";\r\n    }\r\n\r\n    init(attr, attrValue) {\r\n        this._attr              = attr;\r\n        this._tokenValueGetter  = createValueGetter((attrValue || \"\"));\r\n    }\r\n\r\n    render(handler, node, data) {\r\n        super.render(handler, node, data);\r\n        const state = PRIVATE.get(handler);\r\n        if (!state.update) {\r\n            const eleStyleList      = node.style;\r\n            const eleDisplayStyle   = node.display || \"\";\r\n            state.update            = newValue => {\r\n                if (newValue) {\r\n                    eleStyleList.display = eleDisplayStyle;\r\n                }\r\n                else if (eleStyleList.display !== HIDDEN)  {\r\n                    eleStyleList.display = HIDDEN;\r\n                }\r\n            };\r\n        }\r\n    }\r\n}\r\n\r\nexport default ShowDirective;","import Directive                from \"./Directive\"\r\nimport {\r\n    PRIVATE,\r\n    removeAttribute,\r\n    setAttribute,\r\n    createValueGetter,\r\n    getNodeAttrNames } from \"../utils\"\r\n\r\n//============================================\r\nconst attrRegExp = /^_attr\\.(.*)/;\r\n\r\nexport class AttrDirective extends Directive {\r\n\r\n    static get _matches() { return attrRegExp; }\r\n\r\n    static get _isProp() { return false; }\r\n\r\n    static has(ele) {\r\n        let directiveAttr = \"\";\r\n        getNodeAttrNames(ele).some(attr => this._matches.test(attr) && (directiveAttr = attr));\r\n        return directiveAttr;\r\n    }\r\n\r\n\r\n    init(attr, attrValue) {\r\n        this._attr              = attr;\r\n        this._tokenValueGetter  = createValueGetter((attrValue || \"\"));\r\n        this._htmlAttr          = (new RegExp(this.constructor._matches)).exec(attr)[1];\r\n    }\r\n\r\n    render(handler, node, data) {\r\n        super.render(handler, node, data);\r\n        let state = PRIVATE.get(handler);\r\n        if (!state.update) {\r\n            state.update = newValue => {\r\n                if (this.constructor._isProp) {\r\n                    if (newValue !== state.value) {\r\n                        node[this._htmlAttr] = newValue;\r\n                    }\r\n                }\r\n                else {\r\n                    if (newValue && state.value !== newValue) {\r\n                        setAttribute(node, this._htmlAttr, newValue);\r\n                    }\r\n                    else if (state.value && !newValue) {\r\n                        removeAttribute(node, this._htmlAttr);\r\n                    }\r\n                }\r\n            };\r\n        }\r\n    }\r\n}\r\n\r\nexport default AttrDirective;\r\n","import AttrDirective from \"./attr-directive\"\r\n\r\nconst matchRegExp = /^_prop\\.(.*)/;\r\nexport class PropDirective extends AttrDirective {\r\n    static get _matches() { return matchRegExp; }\r\n    static _isProp() { return true; }\r\n}\r\nexport default PropDirective;\r\n","/**\r\n * Adds an event handler to a DOM element and returns back an\r\n * object that allows for removal of the event.\r\n *\r\n * @function domAddEventListener\r\n *\r\n * @param {HTMLElement} ele\r\n * @param {String} event\r\n *  The event to listen to (ex. `click`). Multiple events can be defined\r\n *  by separating them with whitespace\r\n * @param {Function} callback\r\n * @param {Boolean} [capture]\r\n *\r\n * @return DOMEventListener\r\n *\r\n * @example\r\n *\r\n * var listener = domAddEventHandler(myEle, \"click\", function(){});\r\n * ...\r\n * listener.remove();\r\n */\r\nexport function domAddEventListener(ele, event, callback, capture) {\r\n    let events      = event.split(/\\s+/);\r\n    let evListeners = {};\r\n\r\n    events.forEach(evName => {\r\n        ele.addEventListener(evName, callback, capture);\r\n        evListeners[evName] = {\r\n            remove: () => ele.removeEventListener(evName, callback, capture)\r\n        }\r\n    });\r\n\r\n    /**\r\n     * A DOM Event listener.\r\n     *\r\n     * @typedef {Object} DOMEventListener\r\n     *\r\n     * @property {Function} remove\r\n     * @property {Object} listeners\r\n     *  List of listeners that were bound to the DOM element. Each listeners has a\r\n     *  corresponding `.remove()` method.\r\n     */\r\n    return Object.create({\r\n        listeners: evListeners,\r\n        remove: function () {\r\n            events.forEach(evName => evListeners[evName].remove());\r\n        }\r\n    });\r\n}\r\nexport default domAddEventListener;\r\n","import domAddEventListener  from \"@purtuga/common/src/domutils/domAddEventListener\"\r\nimport Directive            from \"./Directive\"\r\nimport {\r\n    PRIVATE,\r\n    escapeString,\r\n    createValueGetter,\r\n    getNodeAttrNames,\r\n    logError } from \"../utils\"\r\n\r\n//============================================\r\nconst DIRECTIVE             = \"_on.\";\r\nconst matchesDirective      = new RegExp(`^${ escapeString(DIRECTIVE) }(.*)`);\r\n\r\nexport class OnDirective extends Directive {\r\n    static has(ele) {\r\n        let directiveAttr = \"\";\r\n        getNodeAttrNames(ele).some(attr => matchesDirective.test(attr) && (directiveAttr = attr));\r\n        return directiveAttr;\r\n    }\r\n\r\n\r\n    init(directiveAttr, attrValue) {\r\n        this._attr              = directiveAttr;\r\n        this._eventName         = (new RegExp(matchesDirective)).exec(directiveAttr)[1];\r\n        this._tokenValueGetter  = createValueGetter((attrValue || \"\"));\r\n    }\r\n\r\n    /**\r\n     * Handles the event on the node\r\n     *\r\n     * @param {NodeHandler} handler\r\n     * @param {Event} domEv\r\n     */\r\n    handleEvent(handler, domEv) {\r\n        const state = PRIVATE.get(handler);\r\n\r\n        let tokenValue;\r\n        state.data.$ev = domEv;\r\n\r\n        try {\r\n            tokenValue = this._tokenValueGetter(state.data);\r\n        }\r\n        catch(e) {\r\n            logError(e);\r\n            return;\r\n        }\r\n\r\n        delete state.data.$ev;\r\n\r\n        if (\"function\" === typeof tokenValue) {\r\n            return tokenValue.call(handler._n, domEv);\r\n        }\r\n        // DOM EventHandler interface: object having a `handleEvent` method\r\n        else if (tokenValue && \"function\" === tokenValue.handleEvent) {\r\n            tokenValue.handleEvent.call(tokenValue, domEv);\r\n        }\r\n    }\r\n\r\n    // takes care of only storing the data on the node, for when the event is triggered\r\n    render(handler, node, data) {\r\n        let state = PRIVATE.get(handler);\r\n\r\n        if (!state) {\r\n            state = {\r\n                data:       { $data: {} },\r\n                tracker:    () => this.render(handler, node, state.data)\r\n            };\r\n            PRIVATE.set(handler, state);\r\n        }\r\n\r\n        if (data) {\r\n            if (data.$data) {\r\n                state.data = data;\r\n            }\r\n            else {\r\n                state.data.$data = data;\r\n            }\r\n        }\r\n    }\r\n\r\n    getNodeHandler(node) {\r\n        const handler = super.getNodeHandler(node);\r\n        const evListener = domAddEventListener(node, this._eventName, this.handleEvent.bind(this, handler));\r\n        handler.onDestroy(() => evListener.remove());\r\n        return handler;\r\n    }\r\n}\r\n\r\nexport default OnDirective;\r\n","import { OBSERVABLE_IDENTIFIER, makeArrayWatchable } from \"./objectWatchProp\";\r\n\r\n//========================================================================\r\n\r\n/**\r\n * Watch an array for changes.  Utiltiy will override the array's mutating methods\r\n * so that notification can be provided to watchers when it changes\r\n *\r\n * @param {Array} arr\r\n * @param {Function} [callback]\r\n *  If not defined, then array is simply made \"watchable\"\r\n */\r\nexport function arrayWatch(arr, callback) {\r\n    if (!arr[OBSERVABLE_IDENTIFIER]) {\r\n        makeArrayWatchable(arr);\r\n    }\r\n\r\n    if (callback) {\r\n        arr[OBSERVABLE_IDENTIFIER].storeCallback(callback);\r\n    }\r\n\r\n    const unWatch = () => arr[OBSERVABLE_IDENTIFIER].watchers.delete(callback);\r\n    unWatch.destroy = unWatch;\r\n    return unWatch;\r\n}\r\nexport default arrayWatch;\r\n","import Map from \"@purtuga/common/src/jsutils/es6-Map\"\r\nimport {makeObservable, objectWatchProp, unsetDependencyTracker} from \"@purtuga/observables/src/objectWatchProp\"\r\nimport {arrayWatch} from \"@purtuga/observables/src/arrayWatch\"\r\nimport Directive from \"./Directive\"\r\nimport {\r\n    arrayForEach,\r\n    arraySlice,\r\n    createComment,\r\n    createDocFragment,\r\n    createValueGetter,\r\n    DOM_DATA_BIND_PROP,\r\n    getAttribute,\r\n    hasAttribute,\r\n    insertBefore,\r\n    isPureObject,\r\n    PRIVATE,\r\n    removeAttribute,\r\n    removeChild\r\n} from \"../utils\"\r\nimport {render} from \"../render\";\r\n\r\n//============================================\r\nconst DIRECTIVE     = \"_each\";\r\nconst KEY_DIRECTIVE = \"_key\";\r\nconst NOOP          = () => {};\r\nconst isEmptyList   = list => {\r\n    return (Array.isArray(list) && !list.length) || (isPureObject(list) && !Object.keys(list).length);\r\n};\r\n\r\n/**\r\n * Directive to loop through an array or object. In addition, it also support an\r\n * internal binding directive called `b:key`\r\n *\r\n * @class EachDirective\r\n * @extends Directive\r\n *\r\n * @example\r\n *\r\n * // Use with array:\r\n * _each=\"item of arrayList\"\r\n * _each=\"(item, index) of arrayList\"\r\n *\r\n * // Use with Object\r\n * _each=\"value of objectList\"\r\n * _each=\"(value, key) of objectList\"\r\n */\r\nexport class EachDirective extends Directive {\r\n    static has(ele) {\r\n        return hasAttribute(ele, DIRECTIVE) ? DIRECTIVE : \"\";\r\n    }\r\n\r\n    static manages() { return true; }\r\n\r\n\r\n    init(attr, attrValue) {\r\n        const [ iteratorArgs, listVar ] = parseDirectiveValue((attrValue || \"\").trim());\r\n        this._attr              = attr;\r\n        this._iteratorArgs      = iteratorArgs;\r\n        this._tokenValueGetter  = createValueGetter((listVar || \"\"));\r\n    }\r\n\r\n    render(handler, node, data) {\r\n        super.render(handler, node, data);\r\n        const state = PRIVATE.get(handler);\r\n\r\n        if (!state.update) {\r\n            state.binders = [];\r\n            state.bindersByKey = new Map();\r\n            state.listIterator = () => this.iterateOverList(handler, state.value);\r\n            state.isFirstRender = true;\r\n            state.usesKey = false;\r\n            state.getKey = NOOP;\r\n            state.update = newList => {\r\n                if (newList === state.value) {\r\n                    return;\r\n                }\r\n                else if (state.value) {\r\n                    state.value = null;\r\n\r\n                    if (state.listIterator.stopWatchingAll) {\r\n                        state.listIterator.stopWatchingAll();\r\n                    }\r\n                }\r\n\r\n                if (!newList) {\r\n                    this.destroyChildBinders(state.binders, handler);\r\n                    return;\r\n                }\r\n\r\n                unsetDependencyTracker(state.tracker); // We don't need to be notified of changes for individual items.\r\n                state.value = newList;\r\n\r\n                // Make sure data is observable and setup event listners on it.\r\n                makeObservable(newList);\r\n\r\n                if (Array.isArray(newList)) {\r\n                    arrayWatch(newList, state.listIterator);\r\n                }\r\n                else if (isPureObject(newList)) {\r\n                    objectWatchProp(newList, null, state.listIterator);\r\n                }\r\n\r\n                if (isEmptyList(newList) && state.binders) {\r\n                    this.destroyChildBinders(state.binders, handler);\r\n                }\r\n                else {\r\n                    this.iterateOverList(handler, newList);\r\n                }\r\n            };\r\n\r\n            // When handler is destroyed, remove data listeners\r\n            handler.onDestroy(() => {\r\n                if (state.listIterator.stopWatchingAll) {\r\n                    state.listIterator.stopWatchingAll();\r\n                }\r\n                state.bindersByKey.clear();\r\n                this.destroyChildBinders(state.binders, handler);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Destroy the binder instances and remove Elements from DOM.\r\n     *\r\n     * @param binders\r\n     * @param handler\r\n     */\r\n    destroyChildBinders(binders, handler) {\r\n        if (!binders || !binders.length) {\r\n            return;\r\n        }\r\n\r\n        binders = binders.splice(0);\r\n\r\n        if (handler._isSoleChild) {\r\n            const parentEle = handler._placeholderEle.parentNode;\r\n            parentEle.textContent = \"\";\r\n            parentEle.appendChild(handler._placeholderEle);\r\n            setTimeout(() => {\r\n                arrayForEach(binders, binder => binder._destroy());\r\n            });\r\n        }\r\n        else {\r\n            arrayForEach(binders, binder => binder._destroy());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns an object (`dataObj` if provided on input) with additional keys - each\r\n     * one being the argNames that the user defined in their HTML `_each` template.\r\n     *\r\n     * It essentially matches up two array by using the keys from one array and mapping to\r\n     * values from the second array at exactly the same location.\r\n     * Example:\r\n     *\r\n     *      _each=\"item in arrayList\"\r\n     *      arrayList = [ \"value 1\" ]\r\n     *\r\n     *      // Array Keys           // Array values             // result: object\r\n     *      // Defined in the       // Data in actual           // Matches the key\r\n     *      // template             // Array                    // to the data\r\n     *      //-------------------   //-----------------         //---------------------\r\n     *      [                       [                   ===     {\r\n     *          \"item\"                  \"value 1\"       ===         item: \"value1\"\r\n     *      ]                       ]                   ===     }\r\n     *\r\n     * @param {Array} values\r\n     * @param {Object} [dataObj]\r\n     *\r\n     * @returns {Object}\r\n     */\r\n    getDataForIteration(values, dataObj) {\r\n        return this._iteratorArgs.reduce(\r\n            (rowData, argName) => {\r\n                rowData[argName] = values.shift();\r\n                return rowData;\r\n            },\r\n            dataObj || {}\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Iterates over a new set (list) and eitehr updates or builds out new elements for each item\r\n     * in that list.\r\n     *\r\n     * @param handler\r\n     * @param newData\r\n     */\r\n    iterateOverList(handler, newData) {\r\n        const state             = PRIVATE.get(handler);\r\n        const attachedEleBinder = [];\r\n        const newDomElements    = createDocFragment();\r\n        let isArray             = Array.isArray(newData);\r\n        let data;\r\n\r\n        if (isArray) {\r\n            isArray = true;\r\n            data = newData;\r\n        }\r\n        else if (isPureObject(newData)) {\r\n            data = Object.keys(newData);\r\n        } else {\r\n            return;\r\n        }\r\n\r\n        for (let i = 0, t = data.length; i < t; i++) {\r\n            let rowData = { $data: state.data.$data || state.data };\r\n\r\n            if (isArray) {\r\n                this.getDataForIteration([ data[i], i ], rowData);\r\n            }\r\n            else {\r\n                this.getDataForIteration([ newData[ data[i] ], data[i], i ], rowData);\r\n            }\r\n\r\n            const binder = this.getRowBinder(handler, rowData);\r\n            binder._loop.pos = i;\r\n            attachedEleBinder.push(binder);\r\n            newDomElements.appendChild(binder);\r\n        }\r\n\r\n        if (newDomElements.hasChildNodes()) {\r\n            insertBefore(handler._placeholderEle.parentNode, newDomElements, handler._placeholderEle);\r\n        }\r\n\r\n        // store the new attached set of elements in their new positions, and\r\n        // clean up old Binders that are no longer being used/displayed\r\n        // FIXME: this needs to be more efficient!!!!!!\r\n        arrayForEach(state.binders.splice(0, state.binders.length, ...attachedEleBinder), childBinder => {\r\n            if (attachedEleBinder.indexOf(childBinder) === -1) {\r\n                childBinder._destroy();\r\n            }\r\n        });\r\n\r\n        if (state.binders.length) {\r\n            this.positionChildren(\r\n                handler._placeholderEle.parentNode,\r\n                handler._placeholderEle,\r\n                state.binders\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handles processing a single data item by either updating and existing binder or creating\r\n     * a new binder.\r\n     *\r\n     * @param {NodeHandler} handler\r\n     * @param {Object} rowData\r\n     *\r\n     * @returns {Template}\r\n     *  returns an array wtih two values:\r\n     *  -   the binder for the data item (could be an exising one)\r\n     *  -   Document fragment containing any new Elements that should be inserted into dom\r\n     */\r\n    getRowBinder(handler, rowData) {\r\n        const state     = PRIVATE.get(handler);\r\n        let itemBinder  = null;\r\n        let rowKey      = state.getKey(rowData);\r\n        let rowEleBinder;\r\n\r\n        if (rowKey) {\r\n            rowEleBinder = state.bindersByKey.get(rowKey);\r\n        }\r\n\r\n        // If a binder already exists for this key, then just update its data\r\n        if (rowEleBinder) {\r\n            delete rowData.$data;\r\n            rowEleBinder[DOM_DATA_BIND_PROP].setData(rowData);\r\n            itemBinder = rowEleBinder;\r\n            return itemBinder;\r\n        }\r\n\r\n        // Render a new Element from the template and store the nodes that are\r\n        // created by it (needed for later).\r\n        rowEleBinder = render(handler._n.data, rowData, handler._directives);\r\n\r\n        // Is it first render? if so, then we need to determine if the DOM element\r\n        // that was rendered has the _key attribute\r\n        if (state.isFirstRender) {\r\n            state.isFirstRender = false;\r\n\r\n            if (\r\n                rowEleBinder.childNodes.length === 1 &&\r\n                rowEleBinder.firstChild.nodeType === 1 &&\r\n                hasAttribute(rowEleBinder.firstChild, KEY_DIRECTIVE)\r\n            ) {\r\n                state.usesKey = true;\r\n                state.getKey = createValueGetter(getAttribute(rowEleBinder.firstChild, KEY_DIRECTIVE));\r\n                rowKey = state.getKey(rowData);\r\n            }\r\n        }\r\n\r\n        if (state.usesKey) {\r\n            removeAttribute(rowEleBinder.firstChild, KEY_DIRECTIVE);\r\n        }\r\n\r\n        rowEleBinder._children = arraySlice(rowEleBinder.childNodes, 0);\r\n        rowEleBinder._destroy = destroyRowElement;\r\n        rowEleBinder._state = state;\r\n        rowEleBinder._loop  = { rowEle: rowEleBinder, rowKey, pos: -1 };\r\n\r\n        if (rowKey) {\r\n            state.bindersByKey.set(rowKey, rowEleBinder);\r\n        }\r\n\r\n        itemBinder = rowEleBinder;\r\n        return itemBinder;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {HTMLElement} eleParentNode\r\n     * @param {HTMLElement} placeholderEle\r\n     * @param {Array} childEleBinders\r\n     */\r\n    positionChildren(eleParentNode, placeholderEle, childEleBinders) {\r\n        // FIXME: speed improvement = convert to while() looop\r\n        arrayForEach(childEleBinders, (childBinder, index) => {\r\n            if (childBinder._loop.pos === index) {\r\n                return;\r\n            }\r\n\r\n            insertBefore(\r\n                eleParentNode,\r\n                childBinder._loop.rowEle,\r\n                childEleBinders[index + 1] ? childEleBinders[index + 1]._loop.rowEle : placeholderEle\r\n            );\r\n            childBinder._loop.pos = index;\r\n        });\r\n    }\r\n\r\n    getNodeHandler(node, directives) {\r\n        const handler           = super.getNodeHandler(node);\r\n        handler._directives     = directives;\r\n        handler._placeholderEle = createComment(\"\");\r\n        handler._isSoleChild    = hasDedicatedParent(node);\r\n\r\n        insertBefore(node.parentNode, handler._placeholderEle, node);\r\n        removeChild(node.parentNode, node);\r\n        return handler;\r\n    }\r\n}\r\n\r\nfunction destroyRowElement () {\r\n    // this === DocumentFragment from `render()`\r\n\r\n    // remove all elements/nodes of this row from DOM\r\n    for (let i = 0, t = this._children.length; i < t; i++) {\r\n        this._children[i].parentNode && this._children[i].parentNode.removeChild(this._children[i]);\r\n    }\r\n\r\n    if (this._loop.rowKey) {\r\n        this._state.bindersByKey.delete(this._loop.rowKey);\r\n    }\r\n\r\n    this._state = null;\r\n    this[DOM_DATA_BIND_PROP].destroy();\r\n}\r\n\r\nfunction parseDirectiveValue(attrValue) {\r\n    let matches = /\\(?(.+?)\\)?\\W?(?:of|in)\\W(.*)/.exec(attrValue);\r\n    if (matches) {\r\n        matches = matches.slice(1);\r\n        matches[0] = matches[0].split(/,/).map(argName => String(argName).trim());\r\n        return matches;\r\n    }\r\n    return [];\r\n}\r\n\r\nfunction hasDedicatedParent(node) {\r\n    return Array.prototype.every.call(node.parentNode.childNodes, childNode => {\r\n        return childNode === node || (childNode.nodeType === 3 && !childNode.textContent.trim());\r\n    });\r\n}\r\n\r\n\r\nexport default EachDirective;\r\n","import Directive                from \"./Directive\"\r\nimport {\r\n    PRIVATE,\r\n    createValueGetter,\r\n    hasAttribute } from \"../utils\"\r\n\r\n//============================================\r\nconst DIRECTIVE = \"_html\";\r\n\r\nexport class HtmlDirective extends Directive {\r\n    static has(ele) {\r\n        return hasAttribute(ele, DIRECTIVE) ? DIRECTIVE : \"\";\r\n    }\r\n\r\n\r\n    init(attr, attrValue) {\r\n        this._attr              = attr;\r\n        this._tokenValueGetter  = createValueGetter((attrValue || \"\"));\r\n    }\r\n\r\n    render(handler, node, data) {\r\n        super.render(handler, node, data);\r\n        const state = PRIVATE.get(handler);\r\n        if (!state.update) {\r\n            state.update = newValue => {\r\n                if (newValue === state.value) {\r\n                    return;\r\n                }\r\n\r\n                node.innerHTML = newValue;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default HtmlDirective;\r\n\r\n","import DomDataBind      from \"./DomDataBind\"\r\nimport render           from \"./render\"\r\nimport Directive        from \"./directives/Directive\"\r\nimport ClassDirective   from \"./directives/class-directive\"\r\nimport StyleDirective   from \"./directives/style-directive\"\r\nimport IfDirective      from \"./directives/if-directive\"\r\nimport ShowDirective    from \"./directives/show-directive\"\r\nimport AttrDirective    from \"./directives/attr-directive\"\r\nimport PropDirective    from \"./directives/prop-directive\"\r\nimport OnDirective      from \"./directives/on-directive\"\r\nimport EachDirective    from \"./directives/each-directive\"\r\nimport HtmlDirective    from \"./directives/html-directive\"\r\n\r\n\r\nconst allDirectives = [\r\n    EachDirective,\r\n    IfDirective,\r\n    ClassDirective,\r\n    StyleDirective,\r\n    ShowDirective,\r\n    AttrDirective,\r\n    PropDirective,\r\n    OnDirective,\r\n    HtmlDirective\r\n];\r\n\r\nconst DomDataBindAll = DomDataBind.extend();\r\nDomDataBindAll.directives = allDirectives;\r\n\r\nexport default DomDataBindAll;\r\nexport {\r\n    DomDataBindAll,\r\n    DomDataBind,\r\n    render,\r\n    allDirectives,\r\n    Directive,\r\n    EachDirective,\r\n    IfDirective,\r\n    ClassDirective,\r\n    StyleDirective,\r\n    ShowDirective,\r\n    AttrDirective,\r\n    PropDirective,\r\n    OnDirective,\r\n    HtmlDirective\r\n};"],"sourceRoot":""}