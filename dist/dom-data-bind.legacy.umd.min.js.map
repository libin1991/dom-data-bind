{"version":3,"sources":["webpack://DomDataBind/webpack/universalModuleDefinition","webpack://DomDataBind/webpack/bootstrap","webpack://DomDataBind/./node_modules/@purtuga/common/src/jsutils/getGlobal.js","webpack://DomDataBind/(webpack)/buildin/global.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/jsutils/runtime-aliases.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/jsutils/objectExtend.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/jsutils/WeakMap.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/jsutils/dataStore.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/jsutils/Iterator.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/jsutils/Set.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/jsutils/queueCallback.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/jsutils/Compose.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/jsutils/Map.js","webpack://DomDataBind/./src/utils.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/domutils/isTemplateElement.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/domutils/domFind.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/jsutils/uuid.js","webpack://DomDataBind/./src/directives/NodeHandler.js","webpack://DomDataBind/./src/directives/Directive.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/domutils/domInsertBefore.js","webpack://DomDataBind/./src/bindings/text-binding.js","webpack://DomDataBind/./src/Template.js","webpack://DomDataBind/./src/view.js","webpack://DomDataBind/./src/TemplateInstance.js","webpack://DomDataBind/./src/render.js","webpack://DomDataBind/./src/DomDataBind.js","webpack://DomDataBind/./src/directives/attr-directive.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/domutils/domHasClass.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/domutils/domAddClass.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/domutils/domRemoveClass.js","webpack://DomDataBind/./src/directives/class-directive.js","webpack://DomDataBind/./src/directives/each-directive.js","webpack://DomDataBind/./src/directives/html-directive.js","webpack://DomDataBind/./src/directives/if-directive.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/domutils/domAddEventListener.js","webpack://DomDataBind/./src/directives/on-directive.js","webpack://DomDataBind/./src/directives/prop-directive.js","webpack://DomDataBind/./src/directives/show-directive.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/domutils/domSetStyle.js","webpack://DomDataBind/./src/directives/style-directive.js","webpack://DomDataBind/./src/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","GLOBAL","_typeof","global","self","Function","g","this","eval","e","functionBind","functionBindCall","toString","isObject","obj","isString","objectDefineProperty","objectDefineProperties","defineProperties","objectKeys","keys","arr","isArray","Array","arrayForEach","forEach","arrayIndexOf","indexOf","arraySplice","splice","arraySlice","slice","consoleLog","console","log","consoleError","error","SymbolIterator","warn","iterator","HTMLElementPrototype","HTMLElement","doc","document","createElement","head","tagName","createTextNode","data","hasAttribute","appendChild","insertBefore","getAttribute","setAttribute","removeAttribute","objectExtend","FakeWeakMap","mergeIntoObj","response","_len","arguments","length","mergeObjects","_key","total","deepMerge","shift","WeakMap","counter","Date","now","Math","random","set","entry","writable","undefined","delete","has","dataStore","stash","FakeIterator","values","idx","constructor","next","configurable","done","_","nextIdx","Set","FakeSet","_defineProperty","add","item","push","size","clear","entries","cb","thisArg","_this","queue","callbacks","queueCallback","setTimeout","flushQueue","cbList","_toConsumableArray","PRIVATE","COMMON_DESTROY_METHOD_NAME","k","baseMethods","isDestroyed","init","destroy","executeCallbacksNow","destroyCallbacks","callOnDestroyCallback","onDestroy","callback","inst","getInstanceState","getFactory","staticMethods","extend","Class","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","apply","_inherits","args","reduce","newProto","thisObjProto","objKey","isInstanceOf","instanceObj","some","protoKey","_construct","getDestroyCallback","instanceState","stateStore","prop","method","Node","Compose","ComposeConstructor","_len2","_key2","getNewConstructor","Map","FakeMap","Map_defineProperty","DOCUMENT","FUNCTION","ELEMENT_PROTOTYPE","Element","VALUE_GETTERS","DOM_DATA_BIND_PROP","UUID","concat","replace","bindCallTo","isPureObject","removeChild","createComment","isTemplate","ele","eleToStringValue","content","logError","createValueGetter","evalCode","trim","fn","getNodeAttrNames","node","attrNames","attributes","domFind","domEle","selector","querySelectorAll","pad","num","substr","globalCount","count","fingerprint","navigator","mimeTypes","userAgent","uuid","generate","timestamp","getTime","nextCounter","NodeHandler","_Compose","NodeHandler_classCallCheck","NodeHandler_possibleConstructorReturn","NodeHandler_getPrototypeOf","NodeHandler_inherits","_createClass","directive","directives","_directives","_d","_directive","_n","_node","state","tracker","stopWatchingAll","_get","render","Directive","Directive_classCallCheck","Directive_possibleConstructorReturn","Directive_getPrototypeOf","Directive_inherits","Directive_createClass","handler","isQueued","update","handlerState","newValue","_tokenValueGetter","_attr","nodeType","cleanNode","NodeHandlerConstructor","domInsertBefore","newNode","referenceNode","parentNode","TextBinding","_Directive","text_binding_classCallCheck","text_binding_possibleConstructorReturn","text_binding_getPrototypeOf","text_binding_inherits","text_binding_createClass","tokenText","_tokenText","nodeValue","nodeToRemove","text_binding_get","DROPS_NODES_ON_CLONE","frag","createDocumentFragment","cloneNode","childNodes","NODE_CONTAINS_MISSES_TEXT_NODES","div","text","contains","nodeSplitText","Text","splitText","reHasDataToken","RegExp","reTokenMatch","getNodeValue","hasToken","test","Template","html","Template_classCallCheck","id","innerHTML","_bindings","getBindingFor","bindings","eleToBindings","ignoredChildren","directiveIterator","attrName","attrValue","managesNode","elePlaceholder","manages","getArrayForNodeFromMap","getDirectiveForAttribute","fakeEle","addTextNodes","filter","onlyElementsWithAttributes","findAllNodes","skip","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","ignoredParent","compareDocumentPosition","err","return","child","lastIndex","childTokenMatches","exec","getTextBindingForToken","tokenTextNode","index","fixEmptyTextNode","tokenPlaceholder","processTextNode","directiveBindings","bindingEle","path","walkEle","parent","unshift","applyBindingsToTemplateInstance","Directives","directivesInstances","getNodeAt","getNodeHandler","Error","map","directiveInstances","directiveSignature","resultArr","hasChildNodes","firstChild","nextSibling","TEMPLATES","view","cacheKey","hasTemplate","TemplateInstance","docFrag","templateId","TemplateInstance_classCallCheck","_frag","_childNodes","fromTemplateId","TemplateInstance_createClass","nodeEle","viewTemplate","importNode","setData","DomDataBind","$ele","Factory","binding","AttrDirective","attr_directive_classCallCheck","attr_directive_possibleConstructorReturn","attr_directive_getPrototypeOf","attr_directive_inherits","attr_directive_createClass","attr","_htmlAttr","_matches","directiveAttr","_isProp","domHasClass","el","cssClass","classList","domAddClass","classNameList","String","split","className","domRemoveClass","remove","ClassDirective","class_directive_classCallCheck","class_directive_possibleConstructorReturn","class_directive_getPrototypeOf","class_directive_inherits","class_directive_createClass","newClasses","oldClasses","EACH","KEY_DIRECTIVE","destroyBinder","binder","_destroy","defaultRowKey","EachDirectiveNodeHandler","iterateOverList","each_directive_assertThisInitialized","each_directive_get","each_directive_getPrototypeOf","_placeholderEle","_isSoleChild","every","childNode","textContent","hasDedicatedParent","_viewTemplate","usesKey","getKey","firstChildNode","setupViewTemplate","newList","listIterator","list","isEmptyList","binders","destroyChildBinders","bindersByKey","EachDirective","each_directive_classCallCheck","each_directive_possibleConstructorReturn","each_directive_inherits","each_directive_createClass","_parseDirectiveValue2","_slicedToArray","matches","argName","parseDirectiveValue","iteratorArgs","listVar","_iteratorArgs","parentEle","dataObj","rowData","newData","iterationDataList","isDataArray","currentBinders","binderToBeDestroyed","totalItems","_handler$_viewTemplat","$root","$parent","$data","getDataForIteration","rowKey","_loop","recover","pos","positionRowInDom","_binderToBeDestroyed$","recycleBinderKey","destroyRowElement","_handler","binderIndex","defaultInsertMarkerElement","HtmlDirective","html_directive_classCallCheck","html_directive_possibleConstructorReturn","html_directive_getPrototypeOf","html_directive_inherits","html_directive_createClass","IfDirective","if_directive_classCallCheck","if_directive_possibleConstructorReturn","if_directive_getPrototypeOf","if_directive_inherits","if_directive_createClass","_get2","if_directive_get","_class2","showElement","_renderedEle","_renderTemplate","destroy_renderedEle","domAddEventListener","event","capture","events","evListeners","evName","addEventListener","removeEventListener","listeners","matchesDirective","str","escapeString","OnDirective","on_directive_classCallCheck","on_directive_possibleConstructorReturn","on_directive_getPrototypeOf","on_directive_inherits","on_directive_createClass","_eventName","domEv","tokenValue","$ev","handleEvent","on_directive_get","evListener","matchRegExp","PropDirective","_AttrDirective","prop_directive_classCallCheck","prop_directive_possibleConstructorReturn","prop_directive_getPrototypeOf","prop_directive_inherits","prop_directive_createClass","ShowDirective","show_directive_classCallCheck","show_directive_possibleConstructorReturn","show_directive_getPrototypeOf","show_directive_inherits","show_directive_createClass","show_directive_get","_class","_origDisplayStyle","style","display","eleStyleList","domSetStyle","styles","domSetStyle_typeof","StyleDirective","style_directive_classCallCheck","style_directive_possibleConstructorReturn","style_directive_getPrototypeOf","style_directive_inherits","style_directive_createClass","__webpack_exports__","DomDataBindAll","attr_directive_AttrDirective","class_directive_ClassDirective","each_directive_EachDirective","html_directive_HtmlDirective","if_directive_IfDirective","on_directive_OnDirective","show_directive_ShowDirective","style_directive_StyleDirective","src_DomDataBind","src_render","directives_namespaceObject","directives_Directive","allDirectives"],"mappings":"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","file":"dom-data-bind.legacy.umd.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"DomDataBind\"] = factory();\n\telse\n\t\troot[\"DomDataBind\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","\r\nexport const GLOBAL = (() => {\r\n    const undef = 'undefined';\r\n    /* global self, window, global */\r\n    if (typeof window !== undef) { return window; }\r\n    if (typeof global !== undef) { return global; }\r\n    if (typeof self !== undef) { return self; }\r\n    return Function('return this;')();\r\n})();\r\n\r\nexport function getGlobal() {\r\n    return GLOBAL;\r\n}\r\nexport default getGlobal;","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/**\r\n * return a value to a given method\r\n *\r\n * @function\r\n * @param {Function} fn\r\n * @param {*} ctx The context to be assigned to `fn`\r\n * @return {Function}\r\n *\r\n * @example\r\n *\r\n * f = functionBin(function() { console.log(`Hello ${this.name}`); }, { name: \"Jackson\" });\r\n * f(); // => \"Hello Jackson\"\r\n */\r\nexport const functionBind = Function.bind.call.bind(Function.bind);\r\n\r\n/**\r\n * return a bound `.call` to the given method.\r\n *\r\n * @type function\r\n * @param {Function} fn\r\n * @return {Function}\r\n * @example\r\n *\r\n * forEach = functionBindCall(Array.prototype.forEach);\r\n * // same as doing: Array.prototype.forEach.call (but returns a new \"call\" method);\r\n */\r\nexport const functionBindCall = functionBind(Function.call.bind, Function.call);\r\n\r\n// Object ===============================================================================\r\nexport const toString                 = functionBindCall(Object.prototype.toString);\r\nexport const isObject                 = obj => toString(obj) === \"[object Object]\";\r\nexport const isString                 = obj => toString(obj) === \"[object String]\";\r\nexport const isFunction               = obj => toString(obj) === \"[object Function]\";\r\nexport const objectDefineProperty     = Object.defineProperty;\r\nexport const objectDefineProperties   = Object.defineProperties;\r\nexport const objectKeys               = Object.keys;\r\nexport const defineProperty = (obj, prop, value, getter, setter, configurable = true, enumerable = false, writable = true) => {\r\n    const descriptor = {\r\n        configurable,\r\n        enumerable\r\n    };\r\n\r\n    if (getter || setter) {\r\n        descriptor.get = getter;\r\n        descriptor.set = setter;\r\n    } else {\r\n        descriptor.writable = writable;\r\n        descriptor.value = value;\r\n    }\r\n\r\n    objectDefineProperty(obj, prop, descriptor);\r\n\r\n    return obj;\r\n};\r\n\r\n\r\n// Array ===============================================================================\r\nconst arr = [];\r\nexport const isArray        = Array.isArray;\r\nexport const arrayForEach   = functionBindCall(arr.forEach);\r\nexport const arrayIndexOf   = functionBindCall(arr.indexOf);\r\nexport const arraySplice    = functionBindCall(arr.splice);\r\nexport const arraySlice    = functionBindCall(arr.slice);\r\n\r\n\r\n// Logging ===============================================================================\r\nexport const consoleLog = console.log; // eslint-disable-line\r\nexport const consoleError = console.error || consoleLog; // eslint-disable-line\r\nexport const consoleWarn = console.warn || consoleLog; // eslint-disable-line\r\n\r\n\r\n// Iterators ===============================================================================\r\nexport const SymbolIterator = \"undefined\" !== typeof Symbol && Symbol.iterator ? Symbol.iterator : \"@@iterator\";\r\n\r\n\r\n// DOM ===============================================================================\r\nconst HTMLElementPrototype = HTMLElement.prototype;\r\nexport const doc = document;\r\nexport const head = doc.head;\r\nexport const createDocFragment = () => doc.createDocumentFragment();\r\nexport const createElement = tagName => doc.createElement(tagName);\r\nexport const createTextNode = data => doc.createTextNode(data || \"\");\r\nexport const appendChild = functionBindCall(HTMLElementPrototype.appendChild);\r\nexport const insertBefore = functionBindCall(HTMLElementPrototype.insertBefore);\r\nexport const hasAttribute = functionBindCall(HTMLElementPrototype.hasAttribute);\r\nexport const getAttribute = functionBindCall(HTMLElementPrototype.getAttribute);\r\nexport const setAttribute = functionBindCall(HTMLElementPrototype.setAttribute);\r\nexport const removeAttribute = functionBindCall(HTMLElementPrototype.removeAttribute);","import {isObject} from \"./runtime-aliases.js\";\r\n\r\n//============================================================\r\n\r\n/**\r\n * Extends an object with the properties of another.\r\n *\r\n * @param {Object|Boolean} mergeIntoObj\r\n *  The object that will have the properties of every other object provided\r\n *  on input merged into. This can also be a `Boolean`, in which case,\r\n *  a deep merge of objects will be done - argument number 2 will\r\n *  become the `mergeIntoObj`.\r\n * @param {...Object} mergeObjects\r\n *\r\n * @return {Object}\r\n */\r\nexport function objectExtend(mergeIntoObj, ...mergeObjects) {\r\n    let response    = mergeIntoObj || {};\r\n    let total       = mergeObjects.length;\r\n    let deepMerge   = false;\r\n    let i;\r\n    let key;\r\n\r\n    if (typeof mergeIntoObj === \"boolean\") {\r\n        deepMerge   = mergeIntoObj;\r\n        response    = mergeObjects.shift() || {};\r\n        total       = mergeObjects.length;\r\n    }\r\n\r\n    for (i = 0; i < total; i++) {\r\n        if (!mergeObjects[i]) {\r\n            continue;\r\n        }\r\n\r\n        for (key in mergeObjects[i]) {\r\n            if (mergeObjects[i].hasOwnProperty(key)) {\r\n                if (\r\n                    deepMerge &&\r\n                    isObject(response[key]) &&\r\n                    isObject(mergeObjects[i][key])\r\n                ) {\r\n                    response[key] = objectExtend( true, response[key], mergeObjects[i][key]);\r\n\r\n                } else {\r\n                    response[key] = mergeObjects[i][key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return response;\r\n}\r\nexport default objectExtend;","// POLYFILL FOR WeakMap\r\n//  [pt] changed how \"delete\" is defined so that it can work in IE8\r\n\r\n/* jshint ignore:start */\r\n/**\r\n * @license\r\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\r\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\n * Code distributed by Google as part of the polymer project is also\r\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n */\r\nvar FakeWeakMap;\r\nif (typeof WeakMap === 'undefined') {\r\n    (function() {\r\n        var defineProperty = Object.defineProperty;\r\n        var counter = Date.now() % 1e9;\r\n\r\n        var WeakMap = FakeWeakMap = function() {\r\n            this.name = '__st' + (Math.random() * 1e9 >>> 0) + (counter++ + '__');\r\n        };\r\n\r\n        WeakMap.prototype = {\r\n            set: function(key, value) {\r\n                var entry = key[this.name];\r\n                if (entry && entry[0] === key)\r\n                    entry[1] = value;\r\n                else\r\n                    defineProperty(key, this.name, {value: [key, value], writable: true});\r\n                return this;\r\n            },\r\n            get: function(key) {\r\n                var entry;\r\n                return (entry = key[this.name]) && entry[0] === key ?\r\n                    entry[1] : undefined;\r\n            },\r\n            // [pt] Quotes around the delete property needed for IE8\r\n            \"delete\": function(key) {\r\n                var entry = key[this.name];\r\n                if (!entry || entry[0] !== key) return false;\r\n                entry[0] = entry[1] = undefined;\r\n                return true;\r\n            },\r\n            has: function(key) {\r\n                var entry = key[this.name];\r\n                if (!entry) return false;\r\n                return entry[0] === key;\r\n            }\r\n        };\r\n\r\n        window.WeakMap = WeakMap;\r\n    })();\r\n} else {\r\n    FakeWeakMap = WeakMap\r\n}\r\n/* jshint ignore:end */\r\nexport { FakeWeakMap as WeakMap };\r\nexport default FakeWeakMap;\r\n","import {WeakMap} from \"./WeakMap\";\r\n\r\n/**\r\n * Returns an object that contains an initialized WeakMap (`stash` property)\r\n * where data can be stored.\r\n *\r\n * @namespace dataStore\r\n *\r\n */\r\nvar dataStore = /** @lends dataStore */{\r\n    /**\r\n     * Stash data here.\r\n     * @type WeakMap\r\n     */\r\n    stash:  new WeakMap(),\r\n    /**\r\n     * Create a private data store and return it.\r\n     * @return {WeakMap}\r\n     */\r\n    create: function(){\r\n        return new WeakMap();\r\n    }\r\n};\r\n\r\nexport default dataStore;\r\nexport { dataStore };\r\n","import {\r\n    objectDefineProperty,\r\n    objectDefineProperties,\r\n    SymbolIterator\r\n} from \"./runtime-aliases\"\r\n\r\n//-----------------------------------------------------------------------\r\n\r\n// Great reference: http://2ality.com/2015/02/es6-iteration.html\r\nexport function FakeIterator(keys, values) {\r\n    objectDefineProperty(this, \"_\", { value: {\r\n        keys:   keys.slice(0),\r\n        values: values ? values.slice(0) : null,\r\n        idx:    0,\r\n        total:  keys.length\r\n    } });\r\n}\r\nexport default FakeIterator;\r\n\r\nobjectDefineProperties(FakeIterator.prototype, {\r\n    constructor: { value: FakeIterator },\r\n    next: {\r\n        enumerable: true,\r\n        configurable: true,\r\n        value() {\r\n            const response = {\r\n                done: this._.idx === this._.total\r\n            };\r\n\r\n            if (response.done) {\r\n                response.value = undefined;\r\n                return response;\r\n            }\r\n\r\n            const nextIdx = this._.idx++;\r\n\r\n            response.value = this._.keys[nextIdx];\r\n\r\n            if (this._.values) {\r\n                response.value = [ response.value, this._.values[nextIdx] ];\r\n            }\r\n\r\n            return response;\r\n        }\r\n    }\r\n});\r\nobjectDefineProperty(FakeIterator.prototype, SymbolIterator, { value(){ return this; } });\r\n\r\n","import { GLOBAL } from \"./getGlobal\"\r\nimport { FakeIterator } from \"./Iterator\"\r\nimport {\r\n    objectDefineProperties,\r\n    objectDefineProperty,\r\n    arrayIndexOf,\r\n    SymbolIterator\r\n} from \"./runtime-aliases\"\r\n\r\n//============================================================\r\n\r\nexport const Set = GLOBAL.Set && GLOBAL.Set.prototype[SymbolIterator] ? GLOBAL.Set : FakeSet;\r\nexport default Set;\r\n\r\nexport function FakeSet() {\r\n    // FIXME: support for iterable input\r\n}\r\n\r\nobjectDefineProperties(FakeSet.prototype, {\r\n    constructor: { value: FakeSet, configurable: true },\r\n    _: {\r\n        get() {\r\n            const values = [];\r\n            objectDefineProperty(this, \"_\", { value: values });\r\n            return values;\r\n        }\r\n    },\r\n    add: {\r\n        value(item) {\r\n            if (arrayIndexOf(this._, item) === -1) {\r\n                this._.push(item);\r\n            }\r\n            return this;\r\n        }\r\n    },\r\n    has: {\r\n        value(item) { return arrayIndexOf(this._, item) !== -1; }\r\n    },\r\n    size: {\r\n        get() { return this._.length; }\r\n    },\r\n    clear: {\r\n        value() { this._.splice(0); }\r\n    },\r\n    delete: {\r\n        value(item) {\r\n            const idx = arrayIndexOf(this._, item);\r\n            if (idx !== -1) {\r\n                this._.splice(idx, 1);\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n    },\r\n    values: {\r\n        value() {\r\n            return new FakeIterator(this._);\r\n        }\r\n    },\r\n    entries: {\r\n        value() {\r\n            return new FakeIterator(this._, this._);\r\n        }\r\n    },\r\n    forEach: {\r\n        value(cb, thisArg) {\r\n            this._.forEach(item => cb(item, item, this), thisArg);\r\n        }\r\n    },\r\n    [SymbolIterator]: {\r\n        value() {\r\n            return this.values();\r\n        }\r\n    }\r\n});\r\n\r\n\r\n","import Set from \"./es6-Set\"\r\n\r\n//===============================================\r\nconst callbacks = new Set();\r\nlet queue;\r\n\r\n/**\r\n * Queue a callback to be executed after at the start of next event loop.\r\n * This differs from `nextTick` in that callbacks are not executed during\r\n * micro-processing, but rather on next event loop, so this is not ideal\r\n * for logic that can cause UI reflow.\r\n *\r\n * @param {Function} cb\r\n */\r\nexport function queueCallback(cb) {\r\n    if (\"function\" === typeof cb) {\r\n        callbacks.add(cb);\r\n\r\n        if (!queue) {\r\n            queue = setTimeout(flushQueue, 0);\r\n        }\r\n    }\r\n}\r\nexport default queueCallback;\r\n\r\nfunction flushQueue() {\r\n    const cbList  = [...callbacks];\r\n    callbacks.clear();\r\n    queue = null;\r\n    let cb;\r\n    while ((cb = cbList.shift())) {\r\n        cb();\r\n        cb = null;\r\n    }\r\n}\r\n","import objectExtend from \"./objectExtend\"\r\nimport dataStore from \"./dataStore\"\r\nimport queueCallback from \"./queueCallback\"\r\n\r\n//=========================================================\r\nconst PRIVATE = dataStore.create();\r\nconst COMMON_DESTROY_METHOD_NAME = [\r\n    \"destroy\",      // Compose\r\n    \"remove\",       // DOM Events Listeners\r\n    \"off\"           // EventEmitter Listeners\r\n];\r\n\r\n// return all KEYs of an object, even those that are not iterable\r\nfunction objectKeys(prototype){\r\n    let k, keys = [];\r\n    for (k in prototype){\r\n        keys.push(k);\r\n    }\r\n    return keys;\r\n}\r\n\r\n// Base instance methods for Compose'd object\r\nconst baseMethods = /** @lends Compose.prototype */{\r\n\r\n    /**\r\n     * Property indicating whether instance has been destroyed\r\n     */\r\n    isDestroyed: false,\r\n\r\n    /**\r\n     * instance initializing code\r\n     */\r\n    init(){},\r\n\r\n    /**\r\n     * Destroys the instance, by removing its private data.\r\n     * Any attached `onDestroy` callback will be executed `async` - queued and\r\n     * called on next event loop\r\n     *\r\n     * @param {Boolean} [executeCallbacksNow=false]\r\n     */\r\n    destroy(executeCallbacksNow){\r\n        if (PRIVATE.has(this)) {\r\n            let destroyCallbacks = PRIVATE.get(this);\r\n            PRIVATE.delete(this);\r\n\r\n            if (executeCallbacksNow) {\r\n                destroyCallbacks.forEach(callOnDestroyCallback);\r\n            }\r\n            else {\r\n                queueCallback(() => destroyCallbacks.forEach(callOnDestroyCallback));\r\n            }\r\n        }\r\n\r\n        if (\"boolean\" === typeof this.isDestroyed) {\r\n            this.isDestroyed = true;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Adds a callback to the queue to be called when this object's `.destroy()`\r\n     * is called.\r\n     *\r\n     * @param {Function} callback\r\n     */\r\n    onDestroy(callback){\r\n        getInstanceState(this).push(callback);\r\n    },\r\n\r\n    /**\r\n     * Returns the factory for this instance.\r\n     *\r\n     * @return {Compose}\r\n     */\r\n    getFactory(){\r\n        if (this.constructor) {\r\n            return this.constructor;\r\n        }\r\n    }\r\n};\r\n\r\n\r\nconst staticMethods = /** @lends Compose */{\r\n    /**\r\n     * Creates an new factory based on the prototye of the current Factory\r\n     * and any other Factory given on input.\r\n     *\r\n     * @return {Compose}\r\n     */\r\n    extend: function(...args){\r\n        let Class = class extends this {};\r\n\r\n        objectExtend(Class.prototype, args.reduce(function(newProto, obj){\r\n            if (obj) {\r\n                const thisObjProto = (obj.prototype || obj);\r\n                objectKeys(thisObjProto).forEach(function(objKey){\r\n                    newProto[objKey] = thisObjProto[objKey];\r\n                });\r\n            }\r\n            return newProto;\r\n        }, {}));\r\n\r\n        return Class;\r\n    },\r\n\r\n    /**\r\n     * Checks if the Object given on input looks like an instance of this Factory.\r\n     *\r\n     * @return {Boolean}\r\n     */\r\n    isInstanceOf: function(instanceObj){\r\n\r\n        if (!instanceObj) {\r\n            return false;\r\n        }\r\n\r\n        var neededKeys = objectKeys(this.prototype);\r\n\r\n        // If any prototype key is not in the object prototype, then return false\r\n        return !neededKeys.some(function(protoKey){\r\n            return typeof instanceObj[protoKey] === \"undefined\";\r\n        });\r\n\r\n    },\r\n\r\n    /**\r\n     * Creates an instance object based on this factory.\r\n     *\r\n     * @return {Object}\r\n     */\r\n    create: function(){\r\n        return new this(...arguments);\r\n    },\r\n\r\n    /**\r\n     * Returns a standard callback that can be used to remove cleanup instance state\r\n     * from specific Store (WeakMap). Returned function will destroy known Instances\r\n     * that have destroy methods.\r\n     *\r\n     * @param {Object} instanceState\r\n     * @param {WeakMap} [stateStore]\r\n     *\r\n     * @return {Function}\r\n     *\r\n     * @example\r\n     *\r\n     * const MY_PRIVATE = new WeakMap();\r\n     * cont NewWdg = Componse.extend({\r\n     *      init() {\r\n     *          const state = {};\r\n     *          MY_PRIVATE.set(this, state);\r\n     *          ...\r\n     *\r\n     *          this.onDestroy(Compose.getDestroyCallback(state, MY_PRIVATE));\r\n     *      }\r\n     * });\r\n     */\r\n    getDestroyCallback: getDestroyCallback\r\n};\r\n\r\n\r\n/**\r\n * Returns a standard callback that can be used to remove cleanup instance state\r\n * from specific Store (WeakMap). Returned function will destroy known Instances\r\n * that have destroy methods.\r\n *\r\n * @method Compose~getDestroyCallback\r\n *\r\n * @param {Object} instanceState\r\n * @param {WeakMap} [stateStore]\r\n *\r\n * @return {Function}\r\n *\r\n * @example\r\n *\r\n * const MY_PRIVATE = new WeakMap();\r\n * cont NewWdg = Componse.extend({\r\n *      init() {\r\n *          const state = {};\r\n *          MY_PRIVATE.set(this, state);\r\n *          ...\r\n *\r\n *          this.onDestroy(Compose.getDestroyCallback(state, MY_PRIVATE));\r\n *      }\r\n * });\r\n */\r\nexport function getDestroyCallback (instanceState, stateStore) {\r\n    return () => {\r\n        if (instanceState) {\r\n            // Destroy all Compose object\r\n            Object.keys(instanceState).forEach(function (prop) {\r\n                if (instanceState[prop]) {\r\n                    COMMON_DESTROY_METHOD_NAME.some((method) => {\r\n                        if (\r\n                            instanceState[prop][method] &&\r\n                            (method !== \"remove\" || !(instanceState[prop] instanceof Node)) // Caution: should not remove DOM elements.\r\n                        ) {\r\n                            instanceState[prop][method]();\r\n                            return true;\r\n                        }\r\n                    });\r\n\r\n                    instanceState[prop] = undefined;\r\n                }\r\n            });\r\n        }\r\n\r\n        if (stateStore && stateStore.has && stateStore.has(instanceState)) {\r\n            stateStore.delete(instanceState);\r\n        }\r\n    }\r\n}\r\n\r\nfunction getInstanceState(inst) {\r\n    if (!PRIVATE.has(inst)) {\r\n        PRIVATE.set(inst, []);\r\n    }\r\n\r\n    return PRIVATE.get(inst);\r\n}\r\n\r\nfunction callOnDestroyCallback (callback){\r\n    if (\"function\" === typeof callback) {\r\n        callback();\r\n    }\r\n}\r\n\r\nfunction getNewConstructor () {\r\n    function ComposeConstructor(...args) {\r\n        // Called with `new`?\r\n        if (this && this.constructor && this instanceof this.constructor) {\r\n            return this.init(...args);\r\n        }\r\n\r\n        // called directly\r\n        return new ComposeConstructor(...args);\r\n    }\r\n\r\n    ComposeConstructor.prototype.constructor = ComposeConstructor;\r\n    return ComposeConstructor;\r\n}\r\n\r\n/**\r\n * Composes new factory methods from a list of given Objects/Classes.\r\n *\r\n * @class Compose\r\n * @borrows Compose~getDestroyCallback as Compose.getDestroyCallback\r\n *\r\n * @example\r\n *\r\n * var Widget = Compose.create(Model, Events);\r\n *\r\n * myWidget = Widget.create();\r\n *\r\n */\r\nconst Compose = getNewConstructor();\r\nobjectExtend(Compose.prototype, baseMethods);\r\nobjectExtend(Compose, staticMethods);\r\n\r\nexport default Compose;\r\nexport { Compose };\r\n","import { GLOBAL } from \"./getGlobal\"\r\nimport { FakeIterator } from \"./Iterator\"\r\nimport {\r\n    arrayIndexOf,\r\n    arraySplice,\r\n    objectDefineProperty,\r\n    objectDefineProperties,\r\n    SymbolIterator\r\n} from \"./runtime-aliases\"\r\n\r\n//======================================================\r\n\r\nexport const Map = GLOBAL.Map && GLOBAL.Map.prototype[SymbolIterator] ? GLOBAL.Map : FakeMap;\r\nexport default Map;\r\n\r\nexport function FakeMap() {\r\n    // FIXME: support for iterable input param\r\n}\r\n\r\nobjectDefineProperties(FakeMap.prototype, {\r\n    constructor: { value: FakeMap, configurable: true },\r\n    _: {\r\n        get() {\r\n            objectDefineProperty(this, \"_\", { value: {\r\n                keys: [],\r\n                values: []\r\n            } });\r\n            return this._;\r\n        }\r\n    },\r\n    get: {\r\n        value(key) {\r\n            return this._.values[arrayIndexOf(this._.keys, key)];\r\n        }\r\n    },\r\n    set: {\r\n        value(key, value) {\r\n            if (arrayIndexOf(this._.keys, key) === -1) {\r\n                this._.keys.push(key);\r\n                this._.values.push(value);\r\n            }\r\n            return this;\r\n        }\r\n    },\r\n    has: {\r\n        value(key) { return arrayIndexOf(this._.keys, key) !== -1; }\r\n    },\r\n    size: {\r\n        get() { return this._.keys.length; }\r\n    },\r\n    clear: {\r\n        value() {\r\n            arraySplice(this._.keys, 0);\r\n            arraySplice(this._.values, 0);\r\n        }\r\n    },\r\n    delete: {\r\n        value(key) {\r\n            const idx = arrayIndexOf(this._.keys, key);\r\n            if (idx !== -1) {\r\n                arraySplice(this._.keys, idx, 1);\r\n                arraySplice(this._.values, idx, 1);\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n    },\r\n    keys: {\r\n        value() {\r\n            return new FakeIterator(this._.keys);\r\n        }\r\n    },\r\n    values: {\r\n        value() {\r\n            return new FakeIterator(this._.values);\r\n        }\r\n    },\r\n    entries: {\r\n        value() {\r\n            return new FakeIterator(this._.keys, this._.values);\r\n        }\r\n    },\r\n    forEach: {\r\n        value(cb, thisArg) {\r\n            this._.keys.forEach((item, i) => cb(this._.values[i], item, this), thisArg);\r\n        }\r\n    },\r\n    [SymbolIterator]: {\r\n        value() {\r\n            return this.entries();\r\n        }\r\n    }\r\n});\r\n\r\n","import dataStore    from \"@purtuga/common/src/jsutils/dataStore\"\r\nimport Map          from \"@purtuga/common/src/jsutils/es6-Map\"\r\nimport {\r\n    functionBindCall,\r\n    isObject,\r\n    isString,\r\n    arrayForEach,\r\n    arraySlice,\r\n    hasAttribute,\r\n    setAttribute,\r\n    getAttribute,\r\n    removeAttribute,\r\n    insertBefore,\r\n    createElement,\r\n    createTextNode,\r\n    createDocFragment,\r\n    consoleError,\r\n    functionBind\r\n} from \"@purtuga/common/src/jsutils/runtime-aliases.js\"\r\nimport {isTemplateElement} from \"@purtuga/common/src/domutils/isTemplateElement.js\"\r\n//=====================================================\r\nconst DOCUMENT              = document;\r\nconst FUNCTION              = Function;\r\nconst ELEMENT_PROTOTYPE     = Element.prototype;\r\nconst VALUE_GETTERS         = new Map();\r\nlet counter = 1;\r\n\r\nexport {\r\n    arrayForEach,\r\n    arraySlice,\r\n    hasAttribute,\r\n    setAttribute,\r\n    getAttribute,\r\n    removeAttribute,\r\n    insertBefore,\r\n    createElement,\r\n    createTextNode,\r\n    createDocFragment,\r\n    isString\r\n};\r\n\r\nexport const DOM_DATA_BIND_PROP = \"DomDataBind\";\r\nexport const PRIVATE            = dataStore.create();\r\nexport const UUID               = `D-${ Date.now() }-${ Math.random().toString(36).replace(/[^a-z0-9]+/g, '') }`;\r\nexport const escapeString       = str => String(str).replace(/[-[\\]/{}()*+?.\\\\^$|]/g, \"\\\\$&\");\r\nexport const bindCallTo         = functionBindCall;\r\nexport const isPureObject       = isObject;\r\nexport const removeChild        = functionBindCall(ELEMENT_PROTOTYPE.removeChild);\r\nexport const createComment      = functionBind(DOCUMENT.createComment, DOCUMENT);\r\nexport const isTemplate         = isTemplateElement;\r\nexport const logError           = consoleError;\r\n\r\n\r\n/**\r\n * Create a Function to be used in retrieving a given value from a data structure\r\n * @param evalCode\r\n * @param name\r\n * @returns {*}\r\n */\r\nexport function createValueGetter(evalCode, name = \"runtime\") {\r\n    evalCode = evalCode.trim();\r\n\r\n    if (VALUE_GETTERS.has(evalCode)) {\r\n        return VALUE_GETTERS.get(evalCode);\r\n    }\r\n\r\n    const fn = new FUNCTION(\"$DATA\", `\r\nwith ($DATA) {\r\n    if ($DATA.$data) {\r\n        with ($DATA.$data) {\r\n            return (${ evalCode });\r\n        }\r\n    } \r\n    return (${ evalCode });\r\n}\r\n//# sourceURL=valueGetter:${name}.${counter++}.js`);\r\n\r\n    VALUE_GETTERS.set(evalCode, fn);\r\n    return fn;\r\n}\r\n\r\n/**\r\n * Returns an array of attributes names found on a given HTML node\r\n *\r\n * @param {HTMLElement} node\r\n * @returns {Array}\r\n */\r\nexport function getNodeAttrNames(node){\r\n    const attrNames = [];\r\n    const total = node.attributes.length;\r\n\r\n    for(let i = 0; i < total; i++) {\r\n        attrNames.push(node.attributes.item(i).name);\r\n    }\r\n\r\n    return attrNames;\r\n}","import {toString} from \"../jsutils/runtime-aliases.js\";\r\n\r\n/**\r\n * Returns a boolean indicating if provided element on input is a HTML Template element (like).\r\n *\r\n * @param {HTMLElement} ele\r\n *\r\n * @returns {boolean}\r\n */\r\nexport function isTemplateElement(ele) {\r\n    const eleToStringValue = toString(ele);\r\n    return eleToStringValue === \"[object HTMLTemplateElement]\" ||\r\n        (eleToStringValue === \"[object HTMLUnknownElement]\" && !!ele.content);\r\n}","/**\r\n * Finds Elements within a given HTML Element using `querySelectorAll` and\r\n * return an Array with those elements.\r\n *\r\n * @function domFind\r\n *\r\n * @param {HTMLElement} domEle\r\n * @param {String} selector\r\n *\r\n * @returns {Array<HTMLElement>}\r\n */\r\nexport function domFind(domEle, selector){\r\n    return Array.prototype.slice.call(domEle.querySelectorAll(selector));\r\n}\r\nexport default domFind;\r\n","// Some of the code below was taken from from https://github.com/ericelliott/cuid/\r\n\r\n/**\r\n * Generates a unique id. This is really a CUID.\r\n *\r\n * @namespace uuid\r\n */\r\nvar\r\n    base    = 36,\r\n    counter = 1,\r\n    letter  = \"c\",\r\n    pad     = function(num, size) {\r\n        var s = \"000000000\" + num;\r\n        return s.substr(s.length-size);\r\n    },\r\n\r\n    globalCount = (function() {\r\n        var i, count = 0; // eslint-disable-line\r\n        for (i in window) {\r\n            count++;\r\n        }\r\n        return count;\r\n    }()),\r\n\r\n    fingerprint = (function() {\r\n        return pad(\r\n            (navigator.mimeTypes.length + navigator.userAgent.length).toString(36) + globalCount.toString(36),\r\n            4\r\n        );\r\n    }());\r\n\r\n\r\nvar uuid = Object.create(/** @lends uuid */{\r\n    generate: function(){\r\n        var\r\n            timestamp   = (new Date().getTime()).toString(base),\r\n            nextCounter = pad((counter++).toString(base), 4),\r\n            random      = 'xxxxxxxx'.replace(/[x]/g, function() {\r\n            // This code from: http://stackoverflow.com/a/2117523/471188\r\n                var v = Math.random()*16|0;\r\n                return v.toString(16);\r\n            });\r\n\r\n        return (letter + timestamp + nextCounter + fingerprint + random);\r\n\r\n    }\r\n});\r\n\r\nexport default uuid;\r\nexport { uuid };\r\n","import Compose from \"@purtuga/common/src/jsutils/Compose.js\";\r\nimport {PRIVATE} from \"../utils.js\";\r\n\r\n/**\r\n * A Directive Node handler\r\n *\r\n * @extends Compose\r\n *\r\n * @param {Directive} directive Directive instance\r\n * @param {Node} node\r\n */\r\nexport class NodeHandler extends Compose {\r\n    init(directive, node, directives) {\r\n        this._directives = directives;\r\n        this._d = this._directive = directive;\r\n        this._n = this._node = node;\r\n    }\r\n\r\n    /**\r\n     * List of directives that were used during parsing of the template\r\n     * @name NodeHandler#_directives\r\n     * @type Array<Directive>\r\n     */\r\n\r\n    /**\r\n     * The Directive instance that is tied to this node handler\r\n     * @name NodeHandler#_directive\r\n     * @type Directive\r\n     * @protected\r\n     */\r\n\r\n    /**\r\n     * The Node associated with this node handler\r\n     * @name NodeHandler#_node\r\n     * @type Node\r\n     * @protected\r\n     */\r\n\r\n    // Override destroy (which is by default \"async\" and ensure that notifications\r\n    // are turned off immediately for this Node\r\n    destroy() {\r\n        const state = PRIVATE.get(this);\r\n        if (state){\r\n            if (state.tracker && state.tracker.stopWatchingAll) {\r\n                state.tracker.stopWatchingAll();\r\n            }\r\n            if (state.data) {\r\n                state.data = null;\r\n            }\r\n        }\r\n        super.destroy();\r\n        PRIVATE.delete(this);\r\n    }\r\n\r\n    /**\r\n     * Renders the data given on input to the Template.\r\n     * (By default, it proxies to the Directive#render())\r\n     *\r\n     * @param data\r\n     */\r\n    render(data) {\r\n        this._d.render(this, this._n, data);\r\n    }\r\n\r\n    /**\r\n     * Shoudl be overwritten to contain the logic as to how a new value (generated by the Directive's `render()`)\r\n     * should be applied to the live HTML. Should be overwritten.\r\n     *\r\n     * @param {*} newValue\r\n     */\r\n    update(/*newValue*/) {}// eslint-disable-line\r\n}\r\n","import Compose from \"@purtuga/common/src/jsutils/Compose\"\r\nimport {logError, PRIVATE, removeAttribute} from \"../utils\"\r\nimport {NodeHandler} from \"./NodeHandler.js\";\r\n\r\n//===================================================================================\r\n\r\n/**\r\n * A DOM element directive.\r\n * NOte that any directive that removes the original DOM element from its parent\r\n * will prevent all subsequent directives from running.\r\n *\r\n * @class Directive\r\n * @extends Compose\r\n *\r\n * @param {String} directiveAttr\r\n *  The directive html element attribute as found in the element.\r\n * @param {String} attrValue\r\n *  The value of the attribute\r\n */\r\nexport class Directive extends Compose {\r\n    /**\r\n     * Checks a given element has an element attribute that matches the Directive.\r\n     * If a match is found, the html Element's attribute that was matched must be\r\n     * returned.\r\n     *\r\n     * @param {HTMLElement} ele\r\n     *\r\n     * @returns {String}\r\n     */\r\n    static has(/*ele*/) { return \"\"; }\r\n\r\n    /**\r\n     * A boolean indicating whether this directive manages the element. If set to true, then\r\n     * `DomDataBind` will not process any other directives after this one.\r\n     */\r\n    static manages() { return false; }\r\n\r\n    /**\r\n     * The Class that will be used to initialize a new node handler for the directive\r\n     *\r\n     * @type NodeHandler\r\n     * @constructor\r\n     */\r\n    static NodeHandlerConstructor = NodeHandler;\r\n\r\n    /**\r\n     * Render the Directive with given data\r\n     *\r\n     * @param {NodeHandler} handler\r\n     * @param {Node} node\r\n     * @param {Object} data\r\n     */\r\n    render(handler, node, data) {\r\n        let state = PRIVATE.get(handler);\r\n\r\n        if (!state) {\r\n            /**\r\n             * Directive Node Handler state\r\n             *\r\n             * @typedef {Object} NodeHandlerState\r\n             *\r\n             * @property {*} data\r\n             * @property {*} value\r\n             * @property {Boolean} isQueued\r\n             * @property {Function} tracker\r\n             * @property {Function} update\r\n             */\r\n            state = {\r\n                data:       null,\r\n                value:      \"\",\r\n                isQueued:   false,\r\n                tracker:    () => this.render(handler, node, state.data)\r\n                //update: () => {} --- should be defined by Directive subclass\r\n            };\r\n            PRIVATE.set(handler, state);\r\n\r\n        }\r\n\r\n        if (state.data !== data) {\r\n            // With use of observables, the tracker function get a `stopWatchingAll()` method\r\n            // which removes this tracker from all property dependency lists.\r\n            if (state.tracker.stopWatchingAll) {\r\n                state.tracker.stopWatchingAll();\r\n            }\r\n            state.data = data;\r\n        }\r\n\r\n        this.update(handler);\r\n    }\r\n\r\n    /**\r\n     * Updates a node by generating a new value for the Directive, storing it\r\n     * in the handler `state.value` and calling `handle.update` after it.\r\n     *\r\n     * @param {NodeHandler} handler\r\n     */\r\n    update(handler) {\r\n        // destruction happens 1ms after .destroy() (Componse#destroy()) is called,\r\n        // so its possible that a handler might come in here having its `.isDestroyed`\r\n        // flag set.\r\n        if (handler.isDestroyed) {\r\n            return;\r\n        }\r\n\r\n        const handlerState = PRIVATE.get(handler);\r\n\r\n        if (handlerState) {\r\n            let newValue = \"\";\r\n\r\n            try {\r\n                newValue = this._tokenValueGetter(handlerState.data || {});\r\n\r\n                // Update node\r\n                if (handler.update) {\r\n                    handler.update(newValue);\r\n                }\r\n            }\r\n            catch(e) {\r\n                logError(e);\r\n            }\r\n\r\n            if (handlerState.value !== newValue) {\r\n                handlerState.value = newValue;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Cleans the node by removing Directive specific attribute. By default, the `_attr`\r\n     * that was given to this constructor will be removed from the node.\r\n     *\r\n     * @param {Node} node\r\n     */\r\n    cleanNode(node) {\r\n        if (this._attr && node.nodeType !== 8 /* don't process comment nodes */) {\r\n            removeAttribute(node, this._attr);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns a node handler for this Directive on the provided Node\r\n     *\r\n     * @param {Node} node\r\n     * @param {Array<Directive>} [directives]\r\n     *\r\n     * @return {NodeHandler}\r\n     */\r\n    getNodeHandler(node, directives) {\r\n        this.cleanNode(node);\r\n        return new this.constructor.NodeHandlerConstructor(this, node, directives);\r\n    }\r\n}\r\nexport default Directive;\r\n\r\n","/**\r\n * Shortcut/Functional alias to `Node.insertBefore` method.\r\n *\r\n * @param {Node|DocumentFragment} newNode\r\n * @param {Node} referenceNode\r\n *\r\n * @returns {Node|DocumentFragment}\r\n */\r\nexport function domInsertBefore(newNode, referenceNode) {\r\n    if (referenceNode && referenceNode.parentNode && referenceNode.parentNode.insertBefore) {\r\n        referenceNode.parentNode.insertBefore(newNode, referenceNode);\r\n    }\r\n    return newNode;\r\n}\r\nexport default domInsertBefore;\r\n\r\n","import Directive from \"../directives/Directive\"\r\nimport {\r\n    UUID,\r\n    createTextNode,\r\n    createValueGetter   } from \"../utils\"\r\nimport {domInsertBefore} from \"@purtuga/common/src/domutils/domInsertBefore.js\"\r\nimport {NodeHandler} from \"../directives/NodeHandler.js\";\r\n\r\n//===========================================================\r\n\r\nexport class TextBinding extends Directive {\r\n    static NodeHandlerConstructor = class extends NodeHandler {\r\n        update(newValue) {\r\n            if (newValue !== this._node.nodeValue) {\r\n                this._node.nodeValue = newValue;\r\n            }\r\n        }\r\n    };\r\n\r\n    init(tokenText) {\r\n        this._tokenText = tokenText;\r\n        this._tokenValueGetter = createValueGetter(tokenText, \"text\");\r\n    }\r\n\r\n    getNodeHandler(node) {\r\n        // Text nodes are processed in a special way in `DomDataBind.getTemplateForDomElement`, where\r\n        // free-floating textnode are replaced with HTML comments in order to not lose their place when\r\n        // converted to text and then back to dom elements. We replace those here now..\r\n        if (node.nodeType === 8 && node.nodeValue === UUID) {\r\n            const nodeToRemove = node;\r\n            node = domInsertBefore(createTextNode(\"\"), nodeToRemove);\r\n            nodeToRemove.parentNode.removeChild(nodeToRemove);\r\n        }\r\n\r\n        return super.getNodeHandler(node);\r\n    }\r\n}\r\n\r\nexport default TextBinding;\r\n\r\n","import domFind from \"@purtuga/common/src/domutils/domFind.js\"\r\nimport {uuid} from \"@purtuga/common/src/jsutils/uuid.js\"\r\nimport {\r\n    PRIVATE,\r\n    UUID,\r\n    bindCallTo,\r\n    removeAttribute,\r\n    getAttribute,\r\n    arrayForEach,\r\n    createComment,\r\n    createDocFragment,\r\n    createTextNode,\r\n    logError,\r\n    createElement,\r\n    isTemplate\r\n} from \"./utils\"\r\nimport TextBinding from \"./bindings/text-binding.js\"\r\n\r\n\r\n//=========================================================================================\r\nconst DATA_TOKEN_REG_EXP_STR    = \"{{(.*?)}}\";\r\nconst DROPS_NODES_ON_CLONE = (() => {   // FUCK YOU IE!\r\n    const frag = createDocFragment();\r\n    frag.appendChild(createTextNode(\"test\"));\r\n    frag.appendChild(createTextNode(\"\"));\r\n    return frag.cloneNode(true).childNodes.length === 1;\r\n})();\r\nconst NODE_CONTAINS_MISSES_TEXT_NODES = (() => {    // FUCK YOU IE!\r\n    const div = createElement(\"div\");\r\n    const text = createTextNode(\"test\");\r\n    div.appendChild(text);\r\n    return !div.contains(text);\r\n})();\r\n\r\n\r\n// Local aliases\r\nconst nodeSplitText         = bindCallTo(Text.prototype.splitText);\r\n\r\n// short helpers\r\nconst reHasDataToken        = new RegExp(DATA_TOKEN_REG_EXP_STR);\r\nconst reTokenMatch          = new RegExp(DATA_TOKEN_REG_EXP_STR, \"g\");\r\nconst getNodeValue          = node => node ? node.nodeValue : \"\";\r\nconst hasToken              = node => reHasDataToken.test(getNodeValue(node));\r\n\r\n// FIXME: use insertBefore() alias in several places below\r\n\r\n\r\n/**\r\n * A Dom template along with its set of know directives (after parsing it)\r\n */\r\nexport class Template {\r\n    constructor(html, directives = []) {\r\n        this.id = uuid.generate();\r\n\r\n        if (!isTemplate(html)) {\r\n            this.ele = createElement(\"template\");\r\n            this.ele.innerHTML = html;\r\n        } else {\r\n            this.ele = html;\r\n        }\r\n\r\n        this._directives = directives;\r\n\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n            // DEV MODE:: warn about directive positioning\r\n            if (directives.length) {\r\n                const directivesPosition = directives.reduce(function(positions, Directive, index){\r\n                    positions[Directive.name] = index;\r\n                    positions[`has${Directive.name}`] = true;\r\n                    return positions;\r\n                }, {});\r\n\r\n                if (directivesPosition.hasEachDirective && directivesPosition.EachDirective !== 0) {\r\n                    console.warn(`DomDataBind: 'EachDirective' position in 'directives' array should be 0!`); // eslint-disable-line\r\n                }\r\n\r\n                if (!directivesPosition.hasEachDirective && directivesPosition.hasIfDirective) {\r\n                    if (directivesPosition.hasEachDirective && directivesPosition.IfDirective !== 1) {\r\n                        console.warn(`DomDataBind: 'IfDirective' position in 'directives' array should be 1 (right after 'EachDirective')!`); // eslint-disable-line\r\n                    } else if (directivesPosition.IfDirective !== 0) {\r\n                        console.warn(`DomDataBind: 'IfDirective' position in 'directives' array should be 0!`); // eslint-disable-line\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        this._bindings = getBindingFor(this.ele.content, directives);\r\n    }\r\n\r\n    /**\r\n     * The template unique id\r\n     * @name Template#id\r\n     * @type {String}\r\n     */\r\n\r\n    /**\r\n     * The HTMLTemplateElement\r\n     * @name Template#ele\r\n     * @type {HTMLTemplateElement}\r\n     */\r\n}\r\nexport default Template;\r\n\r\n/**\r\n * Returns a Map() that includes the paths to nodes in the Dom template that\r\n * are using Directives or have bindings.\r\n * The map \"key\" is an array of `childNodes` paths from the root of the template\r\n * all the way to the node.\r\n * The map \"value\" is an array Directive instances for that node\r\n *\r\n * @return {Map}\r\n */\r\nexport function getBindingFor(ele, directives) {\r\n    // FIXME: refactor this entire function to be faster and more efficient\r\n\r\n\r\n    // template bindings Map() structure:\r\n    //\r\n    //      bindings = Map(\r\n    //          [path, via, childNodes, to, element]: [ directive instances ],\r\n    //          // example:\r\n    //          [0,1,3]: [ directiveInstance1, directiveInstance2 ]\r\n    //      )\r\n    //  }\r\n    //\r\n\r\n    // The goal is to be able to provide a path to each elements for which a group of directives will be applied.\r\n    const bindings          = new Map(); // FIXME: these can be global and reusable - since we only ever have one call in flight to this function\r\n    const eleToBindings     = new Map();\r\n    const ignoredChildren   = new Set();\r\n    let domEle;\r\n\r\n    // FIXME: convert to singleton function\r\n    //          Arguments should be:\r\n    //                  Directive, domEle, eleToBindings, ignoreChildren\r\n    //          Returns a boolean\r\n    const directiveIterator = Directive => {\r\n        let attrName;\r\n        let attrValue;\r\n        let managesNode;\r\n        let elePlaceholder = domEle;\r\n\r\n        while ((attrName = Directive.has(domEle))) {\r\n            attrValue = getAttribute(domEle, attrName);\r\n            managesNode = Directive.manages();\r\n\r\n            if (managesNode) {\r\n                elePlaceholder = createComment(\"\");\r\n            }\r\n\r\n            getArrayForNodeFromMap(eleToBindings, elePlaceholder).push(\r\n                getDirectiveForAttribute(Directive, attrName, attrValue)\r\n            );\r\n\r\n            removeAttribute(domEle, attrName);\r\n\r\n            if (managesNode) {\r\n                ignoredChildren.add(domEle);\r\n\r\n                // Replace this node with a Comment, and store the node's html\r\n                // as the comment data, which is then used by the directive instance\r\n                // to `render()` it to DOM when applicable\r\n                domEle.parentNode.insertBefore(elePlaceholder, domEle);\r\n                const fakeEle = createElement(\"div\");\r\n                fakeEle.appendChild(domEle);\r\n                elePlaceholder.data = fakeEle.innerHTML;\r\n            }\r\n        }\r\n        return managesNode;\r\n    };\r\n\r\n    // FIXME: convert to singleton Function\r\n    //          Arguments needed:\r\n    //              child, eleToBindings,\r\n    const processTextNode = child => {\r\n        if (hasToken(child)) {\r\n            reTokenMatch.lastIndex = 0;\r\n            let nodeValue = getNodeValue(child);\r\n            let childTokenMatches = reTokenMatch.exec(nodeValue);\r\n\r\n            while (childTokenMatches) {\r\n                // If no need to split the text node, then just create a binding for it and exit\r\n                if (nodeValue === \"{{\" + childTokenMatches[1] + \"}}\") {\r\n                    getArrayForNodeFromMap(eleToBindings, child).push(getTextBindingForToken(TextBinding, childTokenMatches[1]));\r\n                    childTokenMatches = null;\r\n                }\r\n                else {\r\n                    let tokenTextNode = nodeSplitText(child, childTokenMatches.index);\r\n\r\n                    // IF browser drops empty nodes, then fix the child node (which now is the left portion\r\n                    // of the split)\r\n                    if (DROPS_NODES_ON_CLONE) {\r\n                        fixEmptyTextNode(child);\r\n                    }\r\n\r\n                    // Split again at the end of token, so that we have a dedicated text node for the token value.\r\n                    // Because this will be used as a template, also need to replace this token value node\r\n                    // with an HTML comment, which will be replaced later during directive initialization\r\n                    // The remainder of the Text value is assigned back to `child` so that we can continue\r\n                    // to check it for other text tokens.\r\n                    child = nodeSplitText(tokenTextNode, childTokenMatches[0].length);\r\n                    const tokenPlaceholder = tokenTextNode.parentNode.insertBefore(createComment(UUID), tokenTextNode);\r\n                    tokenTextNode.parentNode.removeChild(tokenTextNode);\r\n\r\n                    getArrayForNodeFromMap(eleToBindings, tokenPlaceholder).push(getTextBindingForToken(TextBinding, childTokenMatches[1]));\r\n\r\n                    // Reset the regular expression (since `child` was also \"reset\") and execute\r\n                    // the regular expression again on the remaining text\r\n                    reTokenMatch.lastIndex = 0;\r\n                    childTokenMatches = reTokenMatch.exec(getNodeValue(child));\r\n\r\n                    if (!childTokenMatches && DROPS_NODES_ON_CLONE) {\r\n                        fixEmptyTextNode(child);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    // FIXME: convert to for() loop - Perf!\r\n    findAllNodes(ele).forEach(node => {\r\n        let skip = false;\r\n\r\n        if (ignoredChildren.size) {\r\n            for (let ignoredParent of ignoredChildren.values()) {\r\n                if (NODE_CONTAINS_MISSES_TEXT_NODES && node.nodeType === 3) {\r\n                    if (ignoredParent.compareDocumentPosition(node) & 16) {\r\n                        skip = true;\r\n                    }\r\n                }\r\n                else if (ignoredParent.contains(node)) {\r\n                    skip = true;\r\n                }\r\n\r\n                if (skip) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        domEle = node;\r\n\r\n        if (!skip) {\r\n            // Process Element level Directives\r\n            if (node.nodeType === 1) {\r\n                directives.some(directiveIterator);\r\n            }\r\n            // TEXT nodes\r\n            else if (node.nodeType === 3) {\r\n                processTextNode(node);\r\n            }\r\n        }\r\n    });\r\n\r\n    domEle = null;\r\n\r\n\r\n    // Create the list array of node indexes for each binding processed\r\n    eleToBindings.forEach((directiveBindings, bindingEle) => {\r\n        if (ele === bindingEle) {\r\n            bindings.set([], directiveBindings);\r\n            return;\r\n        }\r\n\r\n        const path  = [];\r\n        let walkEle = bindingEle;\r\n        let parent  = walkEle.parentNode;\r\n\r\n        while (walkEle !== ele) {\r\n            path.unshift(path.indexOf.call(parent.childNodes, walkEle));\r\n            walkEle = walkEle.parentNode;\r\n            parent  = walkEle.parentNode;\r\n        }\r\n\r\n        bindings.set(path, directiveBindings);\r\n    });\r\n\r\n    eleToBindings.clear();\r\n    ignoredChildren.clear();\r\n\r\n    return bindings;\r\n}\r\n\r\n/**\r\n * Applies the bindings in the given Map to the DocumentFragment provided on input.\r\n *\r\n * @param {DocumentFragment} frag\r\n * @param {Map<Array<Number>, Array<Directive>>} bindings\r\n * @param {Array<Directive>} Directives\r\n *\r\n * @return {Array<NodeHandler>}\r\n *  An array of Node directive handlers is returned.\r\n */\r\nexport function applyBindingsToTemplateInstance(frag, bindings, Directives) {\r\n    const response = [];\r\n\r\n    bindings.forEach((directivesInstances, path) => {\r\n        const node = getNodeAt(frag, path);\r\n        if (!node) {\r\n            logError(new Error(`dom-data-bind#render(): Unable to find node!`));\r\n            return;\r\n        }\r\n\r\n        for (let i=0, t=directivesInstances.length; i < t; i++) {\r\n            response.push(directivesInstances[i].getNodeHandler(node, Directives));\r\n        }\r\n    });\r\n\r\n    return response;\r\n}\r\n\r\nfunction getNodeAt(root, path) {\r\n    if (!path.length) {\r\n        return root;\r\n    }\r\n    // FIXME: use for loop here.\r\n    arrayForEach(path, index => root = root.childNodes[index]);\r\n    return root;\r\n}\r\n\r\nfunction getArrayForNodeFromMap(map, node) {\r\n    if (!map.has(node)) {\r\n        map.set(node, []);\r\n    }\r\n    return map.get(node);\r\n}\r\n\r\n/**\r\n * Returns a node handlers for the given directive\r\n *\r\n * @param {Directive} Directive\r\n * @param {String} tokenText\r\n *  The token text (no curly braces)\r\n *\r\n * @returns {Directive}\r\n *  Returns a Directive instance. Call `.getNodeHandler` to get a handler for a given node\r\n */\r\nfunction getTextBindingForToken(Directive, tokenText) {\r\n    tokenText = tokenText.trim();\r\n\r\n    let directiveInstances = PRIVATE.get(Directive);\r\n\r\n    if (!directiveInstances) {\r\n        directiveInstances = {};\r\n        PRIVATE.set(Directive, directiveInstances);\r\n    }\r\n\r\n    if (!directiveInstances[tokenText]) {\r\n        directiveInstances[tokenText] = new Directive(tokenText);\r\n    }\r\n\r\n    return directiveInstances[tokenText];\r\n}\r\n\r\nfunction getDirectiveForAttribute (Directive, attrName, attrValue) {\r\n    attrValue = attrValue.trim();\r\n\r\n    const directiveSignature    = `${attrName}-${ UUID }-${ attrValue }`;\r\n    let directiveInstances      = PRIVATE.get(Directive);\r\n\r\n    if (!directiveInstances) {\r\n        directiveInstances = {};\r\n        PRIVATE.set(Directive, directiveInstances);\r\n    }\r\n\r\n    if (!directiveInstances[directiveSignature]) {\r\n        directiveInstances[directiveSignature] = new Directive(attrName, attrValue);\r\n    }\r\n\r\n    return directiveInstances[directiveSignature];\r\n}\r\n\r\n/**\r\n *\r\n * @private\r\n * @param {HTMLElement} ele\r\n * @returns {boolean}\r\n */\r\nfunction onlyElementsWithAttributes(ele/*, index, arr*/) {\r\n    return ele.nodeType !== 1 || (ele.nodeType === 1 && ele.attributes.length > 0);\r\n}\r\n\r\n/**\r\n *\r\n * @private\r\n * @param {Array} resultArr\r\n * @param {HTMLElement} ele\r\n * @returns {Array}\r\n */\r\nfunction addTextNodes(resultArr, ele /*, index, arr*/) {\r\n    resultArr.push(ele);\r\n    if (ele.hasChildNodes()) {\r\n        ele = ele.firstChild;\r\n        for (;ele;) {\r\n            const nextSibling = ele.nextSibling;\r\n\r\n            // IF Text node and it has the token\r\n            if (ele.nodeType === 3 && !!ele.nodeValue && reHasDataToken.test(getNodeValue(ele))) {\r\n                resultArr.push(ele);\r\n            }\r\n\r\n            if (DROPS_NODES_ON_CLONE) {\r\n                fixEmptyTextNode(ele);\r\n            }\r\n\r\n            ele = nextSibling;\r\n        }\r\n    }\r\n    return resultArr;\r\n}\r\n\r\nfunction fixEmptyTextNode(node) {\r\n    if (node.nodeType === 3 && DROPS_NODES_ON_CLONE && !node.nodeValue) {\r\n        node.parentNode.insertBefore(createComment(\"\"), node);\r\n        node.parentNode.removeChild(node);\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n * @private\r\n * @param {HTMLElement} ele\r\n *\r\n * @return {Array<Node>}\r\n */\r\nfunction findAllNodes(ele) {\r\n    return [ele]\r\n        .concat(domFind(ele, \"*\"))\r\n        .reduce(addTextNodes, [])\r\n        .filter(onlyElementsWithAttributes);\r\n}\r\n\r\n\r\n","import Template from \"./Template.js\"\r\nimport {isString} from \"./utils.js\";\r\nimport {isTemplate} from \"./utils.js\";\r\n\r\n\r\n//==========================================================================\r\n// Keeps a map between `html string` and `Template` instance\r\nconst TEMPLATES = new Map();\r\n\r\n/**\r\n * Create a UI view template for the given html string. Returned view (Template) are cached (memoized)\r\n * and thus a previously view template will just return the previous Template instance\r\n *\r\n * @param {String|HTMLTemplateElement} html\r\n * @param {Array<Directive>} directives\r\n *\r\n * @returns {HTMLTemplateElement}\r\n */\r\nexport function view(html, directives = view.directives || []) {\r\n    const isHtmlString = isString(html);\r\n    const cacheKey = isHtmlString ? html : html.innerHTML;\r\n\r\n    if (!hasTemplate(cacheKey)) {\r\n        TEMPLATES.set(\r\n            cacheKey,\r\n            new Template(html, directives)\r\n        );\r\n    }\r\n\r\n    // DEVELOPMENT MODE (is removed during webpack build)\r\n    if (process.env.NODE_ENV !== \"production\") {\r\n        if (!isString(html) && !isTemplate(html)) {\r\n            console.warn(`dom-data-bind.view(): 'html' argument must be either String or HTMLTemplateElement!`); //eslint-disable-line\r\n        }\r\n    }\r\n\r\n    return TEMPLATES.get(cacheKey);\r\n}\r\n\r\n/**\r\n * A list of directives that might be used in views. Used as the default value to the\r\n * `directives` input argument of `view()`.\r\n *\r\n * @type {Array<Directive>>|null}\r\n */\r\nview.directives = null;\r\n\r\n/**\r\n * Checks if a view template already exists for the given html\r\n *\r\n * @type {function(*=): boolean}\r\n */\r\nview.has = hasTemplate;\r\n\r\n/**\r\n * Checks if a view template already exists for the given html\r\n * @param html\r\n * @returns {boolean}\r\n */\r\nfunction hasTemplate(html) {\r\n    return TEMPLATES.has(html);\r\n}\r\n","import {arraySlice} from \"./utils.js\";\r\n\r\n/**\r\n * Interface for a template instance.\r\n */\r\nexport class TemplateInstance {\r\n    /**\r\n     *\r\n     * @param {DocumentFragment} docFrag\r\n     * @param {Array<NodeHandler>} bindings\r\n     * @param {String} [templateId]\r\n     */\r\n    constructor(docFrag, bindings, templateId = \"\") {\r\n        this._frag = docFrag;\r\n        this._bindings = bindings;\r\n        this._childNodes = arraySlice(docFrag.childNodes, 0);\r\n        this.fromTemplateId = templateId;\r\n    }\r\n\r\n    /**\r\n     * Recovers the original nodes rendered from the template into\r\n     * the DocumentFragment\r\n     */\r\n    recover() {\r\n        this._childNodes.forEach(nodeEle => this._frag.appendChild(nodeEle));\r\n    }\r\n\r\n    /**\r\n     * Destroys all bindings of the Template\r\n     */\r\n    destroy() {\r\n        if (this._bindings) {\r\n            for (let i = 0, t = this._bindings.length; i < t; i++) {\r\n                this._bindings[i].destroy();\r\n            }\r\n            this._bindings.length = 0;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets data on the Template by passing it to all directives to act on.\r\n     * @param data\r\n     */\r\n    setData(data) {\r\n        for (let i = 0, t = this._bindings.length; i < t; i++) {\r\n            this._bindings[i].render(data);\r\n        }\r\n    }\r\n}\r\n","import {view} from \"./view.js\";\r\nimport {DOM_DATA_BIND_PROP} from \"./utils.js\";\r\nimport {TemplateInstance} from \"./TemplateInstance.js\";\r\nimport {applyBindingsToTemplateInstance, Template} from \"./Template.js\";\r\n\r\n\r\n//==========================================================================\r\n\r\n/**\r\n * Returns a DocumentFragment representation of the given `html` code provided on\r\n * input bound to the given data.\r\n *\r\n * @param {String|HTMLTemplateElement|Template} html\r\n * @param {Object} [data]\r\n * @param {Array<Directive>} [directives]\r\n *\r\n * @return {DocumentFragment}\r\n *  Document Fragment returned will have a property named 'DomDataBind', which is\r\n *  a TemplateInstance class instance\r\n */\r\nexport function render(html, data, directives) {\r\n    const viewTemplate = html instanceof Template ? html : view(html, directives);\r\n    const response = document.importNode(viewTemplate.ele.content, true);\r\n\r\n    response[DOM_DATA_BIND_PROP] = new TemplateInstance(\r\n        response,\r\n        applyBindingsToTemplateInstance(response, viewTemplate._bindings, viewTemplate._directives),\r\n        viewTemplate.id\r\n    );\r\n    response[DOM_DATA_BIND_PROP].setData(data);\r\n    return response;\r\n}\r\n\r\nexport default render;\r\n","import Compose from \"@purtuga/common/src/jsutils/Compose\"\r\nimport { PRIVATE, arrayForEach, isString } from \"./utils\"\r\nimport { getBindingFor, applyBindingsToTemplateInstance } from \"./Template\"\r\nimport { render } from \"./render\";\r\n\r\n//======================================================================\r\n\r\n/**\r\n * Bind data to a DOM element and automatically persist changes in that data to the UI.\r\n * By default, this constructor provides interpolation of Text tokens found in the DOM\r\n * structure (represented with double curly braces: `{{ }}`). Directives can be used\r\n * by extending this constructor and adding them to the [directives]{@link DomDataBind.directives}\r\n * static property.\r\n *\r\n * @class DomDataBind\r\n * @extends Compose\r\n *\r\n * @param {String |HTMLElement} html\r\n *  The HTML element that will be view and to which `data` will be bound.\r\n *\r\n * @param {Object} data\r\n *  An object whose data will be used to bind to `html` element (once crated) .\r\n *\r\n */\r\nexport const DomDataBind = Compose.extend({\r\n    /**\r\n     * The Element whose data was bound to.\r\n     * When a string is used on input, this will be a DocumentFragment, which\r\n     * means that it could be empty if its content was inserted into DOM\r\n     */\r\n    $ele: null,\r\n\r\n    init(html, data) {\r\n        const Factory = this.getFactory();\r\n        const state = {\r\n            html,\r\n            data,\r\n            directives: Factory.directives.slice(0)\r\n        };\r\n\r\n        PRIVATE.set(this, state);\r\n\r\n        if (isString(html)) {\r\n            this.$ele = render(html, data, state.directives);\r\n            state.bindings = this.$ele._bindings;\r\n        } else {\r\n            this.$ele = html;\r\n            state.bindings = applyBindingsToTemplateInstance(html, getBindingFor(html, state.directives), state.directives);\r\n            if (data) {\r\n                this.setData(data);\r\n            }\r\n        }\r\n\r\n        this.onDestroy(() => {\r\n            arrayForEach(state.bindings, binding => binding.destroy());\r\n\r\n            delete state.data;\r\n            delete state.directives;\r\n            delete state.bindings;\r\n\r\n            Factory.getDestroyCallback(state, PRIVATE)();\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Set data on to the DOM provided during initialization.\r\n     * In most cases, you should never have the need to call this method. Data\r\n     * provided during initialization is \"live\" and changes are automatically\r\n     * reflected to dom.\r\n     */\r\n    setData(data) {\r\n        const bindings = PRIVATE.get(this).bindings;\r\n        arrayForEach(bindings, binding => binding.render(data));\r\n    }\r\n});\r\nexport default DomDataBind;\r\n\r\n/**\r\n * A list of Directives to be used.\r\n *\r\n * @name DomDataBind.directives\r\n * @type {Array}\r\n */\r\nDomDataBind.directives = [];\r\n","import Directive                from \"./Directive\"\r\nimport {\r\n    PRIVATE,\r\n    removeAttribute,\r\n    setAttribute,\r\n    createValueGetter,\r\n    getNodeAttrNames } from \"../utils\"\r\nimport {NodeHandler} from \"./NodeHandler.js\";\r\n\r\n//============================================\r\nconst attrRegExp = /^_attr\\.(.*)/;\r\n\r\nexport class AttrDirective extends Directive {\r\n    static NodeHandlerConstructor = class extends NodeHandler {\r\n        update(newValue) {\r\n            const state = PRIVATE.get(this);\r\n            const _htmlAttr = this._directive._htmlAttr;\r\n\r\n            if (this._directive.constructor._isProp) {\r\n                if (newValue !== state.value) {\r\n                    this._node[_htmlAttr] = newValue;\r\n                }\r\n            }\r\n            else {\r\n                if (newValue && state.value !== newValue) {\r\n                    setAttribute(this._node, _htmlAttr, newValue);\r\n                }\r\n                else if (state.value && !newValue) {\r\n                    removeAttribute(this._node, _htmlAttr);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    static _matches = attrRegExp;\r\n\r\n    static _isProp = false;\r\n\r\n    static has(ele) {\r\n        let directiveAttr = \"\";\r\n        getNodeAttrNames(ele).some(attr => this._matches.test(attr) && (directiveAttr = attr));\r\n        return directiveAttr;\r\n    }\r\n\r\n    init(attr, attrValue) {\r\n        this._attr              = attr;\r\n        this._tokenValueGetter  = createValueGetter((attrValue || \"\"), \"attr\");\r\n        this._htmlAttr          = (new RegExp(this.constructor._matches)).exec(attr)[1];\r\n    }\r\n}\r\n\r\nexport default AttrDirective;\r\n","/**\r\n * Check if an element has a given class\r\n *\r\n * @function domHasClass\r\n *\r\n * @param {HTMLElement} el\r\n * @param {String} cssClass\r\n *\r\n * @return {Boolean}\r\n */\r\nexport function domHasClass(el, cssClass){\r\n    if (el && cssClass) {\r\n        return el.classList.contains(cssClass);\r\n    }\r\n    return false;\r\n}\r\nexport default domHasClass;\r\n","/**\r\n * Adds class to an element\r\n *\r\n * @function domAddClass\r\n *\r\n * @param {HTMLElement} el\r\n * @param {String} cssClass\r\n *  Multiple classes can be set using spaces as a delimiter\r\n */\r\nexport function domAddClass(el, cssClass){\r\n    let classNameList = String(cssClass).trim().split(/\\s+/).map(className => className.trim());\r\n    if (el && classNameList.length) {\r\n        classNameList.forEach((cssClass) => el.classList.add(cssClass));\r\n    }\r\n}\r\nexport default domAddClass;","/**\r\n * removes a class from an element\r\n *\r\n * @function domRemoveClass\r\n *\r\n * @param {HTMLElement} el\r\n * @param {String} cssClass\r\n */\r\nexport function domRemoveClass(el, cssClass){\r\n    return el.classList.remove(cssClass);\r\n}\r\nexport default domRemoveClass;","import domHasClass      from \"@purtuga/common/src/domutils/domHasClass\"\r\nimport domAddClass      from \"@purtuga/common/src/domutils/domAddClass\"\r\nimport domRemoveClass   from \"@purtuga/common/src/domutils/domRemoveClass\"\r\nimport Directive        from \"./Directive\"\r\nimport {\r\n    PRIVATE,\r\n    createValueGetter,\r\n    hasAttribute  } from \"../utils\"\r\nimport {NodeHandler} from \"./NodeHandler.js\";\r\n\r\n//============================================\r\nconst DIRECTIVE = \"_class\";\r\n\r\nexport class ClassDirective extends Directive {\r\n    static NodeHandlerConstructor = class ClassDirectiveNodeHandler extends NodeHandler {\r\n        update(newClasses) {\r\n            const { _node: node } = this;\r\n            const oldClasses = PRIVATE.get(this).value || {};\r\n\r\n            Object.keys(newClasses)\r\n                .concat(Object.keys(oldClasses))\r\n                .forEach(className => {\r\n                    if (newClasses[className] && !domHasClass(node, className)) {\r\n                        domAddClass(node, className);\r\n                    }\r\n                    else if (!newClasses[className] && domHasClass(node, className)) {\r\n                        domRemoveClass(node, className);\r\n                    }\r\n                });\r\n        }\r\n    };\r\n\r\n    static has(ele) {\r\n        return hasAttribute(ele, DIRECTIVE) ? DIRECTIVE : \"\";\r\n    }\r\n\r\n    init(attr, attrValue) {\r\n        this._attr              = attr;\r\n        this._tokenValueGetter  = createValueGetter((attrValue || \"\"), \"class\");\r\n    }\r\n}\r\n\r\nexport default ClassDirective;\r\n\r\n","import Map from \"@purtuga/common/src/jsutils/es6-Map\"\r\nimport {domInsertBefore} from \"@purtuga/common/src/domutils/domInsertBefore.js\"\r\nimport {\r\n    arraySplice,\r\n    isArray,\r\n    objectKeys\r\n} from \"@purtuga/common/src/jsutils/runtime-aliases.js\"\r\nimport Directive from \"./Directive\"\r\nimport {\r\n    arrayForEach,\r\n    createComment,\r\n    createValueGetter,\r\n    DOM_DATA_BIND_PROP,\r\n    getAttribute,\r\n    hasAttribute,\r\n    isPureObject,\r\n    PRIVATE,\r\n    removeAttribute,\r\n    removeChild\r\n} from \"../utils\"\r\n\r\nimport {render} from \"../render\";\r\nimport {view} from \"../view.js\";\r\nimport {NodeHandler} from \"./NodeHandler.js\";\r\n\r\n//============================================\r\nconst EACH = Symbol(\"directive.each.setup\");\r\nconst DIRECTIVE     = \"_each\";\r\nconst KEY_DIRECTIVE = \"_key\";\r\nconst destroyBinder = binder => binder._destroy();\r\nconst defaultRowKey = data => data;\r\nconst isEmptyList   = list => (isArray(list) && !list.length) || (isPureObject(list) && !objectKeys(list).length);\r\n\r\nclass EachDirectiveNodeHandler extends NodeHandler {\r\n\r\n    binders = [];\r\n\r\n    bindersByKey = new Map();\r\n\r\n    listIterator = () => this._directive.iterateOverList(this, PRIVATE.get(this).value);\r\n\r\n    init(directive, node, directives) {\r\n        super.init(directive, node, directives);\r\n        this._placeholderEle = createComment(\"directive.each\");\r\n        this._isSoleChild = hasDedicatedParent(this._node);\r\n\r\n        // create the template for the row content, which is stored in the Comment node data\r\n        this._viewTemplate = view(node.data, directives);\r\n        if (!this._viewTemplate[EACH]) {\r\n            setupViewTemplate(this._viewTemplate);\r\n        }\r\n\r\n        domInsertBefore(this._placeholderEle, node);\r\n        removeChild(node.parentNode, node);\r\n    }\r\n\r\n\r\n    update(newList) {\r\n        const state = PRIVATE.get(this);\r\n\r\n        if (newList !== state.value) {\r\n            state.value = null;\r\n\r\n            if (this.listIterator.stopWatchingAll) {\r\n                this.listIterator.stopWatchingAll();\r\n            }\r\n        }\r\n\r\n        if (!newList) {\r\n            this._directive.destroyChildBinders(this.binders, this);\r\n            return;\r\n        }\r\n\r\n        state.value = newList;\r\n\r\n        if (isEmptyList(newList) && this.binders) {\r\n            this._directive.destroyChildBinders(this.binders, this);\r\n        }\r\n        else {\r\n            this.listIterator();\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        // Support for Observables\r\n        if (this.listIterator.stopWatchingAll) {\r\n            this.listIterator.stopWatchingAll();\r\n        }\r\n        this.bindersByKey.clear();\r\n        this._directive.destroyChildBinders(this.binders, this);\r\n        super.destroy();\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Directive to loop through an array or object. In addition, it also support an\r\n * internal binding directive called `b:key`\r\n *\r\n * @class EachDirective\r\n * @extends Directive\r\n *\r\n * @example\r\n *\r\n * // Use with array:\r\n * _each=\"item of arrayList\"\r\n * _each=\"(item, index) of arrayList\"\r\n *\r\n * // Use with Object\r\n * _each=\"value of objectList\"\r\n * _each=\"(value, key) of objectList\"\r\n */\r\nexport class EachDirective extends Directive {\r\n    static NodeHandlerConstructor = EachDirectiveNodeHandler;\r\n\r\n    static has(ele) {\r\n        return hasAttribute(ele, DIRECTIVE) ? DIRECTIVE : \"\";\r\n    }\r\n\r\n    static manages() { return true; }\r\n\r\n    init(attr, attrValue) {\r\n        const [ iteratorArgs, listVar ] = parseDirectiveValue((attrValue || \"\").trim());\r\n        this._attr              = attr;\r\n        this._iteratorArgs      = iteratorArgs;\r\n        this._tokenValueGetter  = createValueGetter((listVar || \"\"), \"each\");\r\n    }\r\n\r\n    /**\r\n     * Destroy the binder instances and remove Elements from DOM.\r\n     *\r\n     * @param binders\r\n     * @param handler\r\n     */\r\n    destroyChildBinders(binders, handler) {\r\n        if (!binders || !binders.length) {\r\n            return;\r\n        }\r\n\r\n        binders = binders.splice(0);\r\n\r\n        if (handler._isSoleChild) { // Supper fast way to just clear the UI\r\n            const parentEle = handler._placeholderEle.parentNode;\r\n            parentEle.textContent = \"\";\r\n            parentEle.appendChild(handler._placeholderEle);\r\n            setTimeout(() => {\r\n                arrayForEach(binders, binder => binder._destroy());\r\n            });\r\n        }\r\n        else {\r\n            arrayForEach(binders, binder => binder._destroy());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns an object (`dataObj` if provided on input) with additional keys - each\r\n     * one being the argNames that the user defined in their HTML `_each` template.\r\n     *\r\n     * It essentially matches up two array by using the keys from one array and mapping to\r\n     * values from the second array at exactly the same location.\r\n     * Example:\r\n     *\r\n     *      _each=\"item in arrayList\"\r\n     *      arrayList = [ \"value 1\" ]\r\n     *\r\n     *      // Array Keys           // Array values             // result: object\r\n     *      // Defined in the       // Data in actual           // Matches the key\r\n     *      // template             // Array                    // to the data\r\n     *      //-------------------   //-----------------         //---------------------\r\n     *      [                       [                   ===     {\r\n     *          \"item\"                  \"value 1\"       ===         item: \"value1\"\r\n     *      ]                       ]                   ===     }\r\n     *\r\n     * @param {Array} values\r\n     * @param {Object} [dataObj]\r\n     *\r\n     * @returns {Object}\r\n     */\r\n    getDataForIteration(values, dataObj) {\r\n        return this._iteratorArgs.reduce(\r\n            (rowData, argName) => {\r\n                rowData[argName] = values.shift();\r\n                return rowData;\r\n            },\r\n            dataObj || {}\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Iterates over a new set (list) and eitehr updates or builds out new elements for each item\r\n     * in that list.\r\n     *\r\n     * @param handler\r\n     * @param newData\r\n     */\r\n    iterateOverList(handler, newData) {\r\n        /** @type NodeHandlerState */\r\n        const state = PRIVATE.get(handler);\r\n        let isDataArray             = isArray(newData);\r\n        let iterationDataList;\r\n\r\n\r\n        if (isDataArray) {\r\n            isDataArray = true;\r\n            iterationDataList = newData;\r\n        }\r\n        else if (isPureObject(newData)) {\r\n            iterationDataList = objectKeys(newData);\r\n        } else {\r\n            return;\r\n        }\r\n\r\n        const currentBinders        = handler.binders;\r\n        const binderToBeDestroyed   = new Map();    // Will be recycled\r\n        const totalItems            = iterationDataList.length;\r\n        const { usesKey, getKey }   = handler._viewTemplate[EACH];\r\n\r\n        // Loop through each piece of data and build a DOM binder for it.\r\n        // The data should be in sync with `currentBinders`\r\n        for (let i = 0; i < totalItems; i++) {\r\n            let rowData = { // FIXME: can this object creation be avoided? For Arrays - it should be possible. Objects - not sure.\r\n                $root: state.data.$root || state.data,\r\n                $parent: state.data,\r\n                $data: state.data.$data || state.data\r\n            };\r\n\r\n            // Adjust the rowData to have the `key` and/or `value` and `index` as top level items\r\n            // These are added to the rowData object just created above.\r\n            if (isDataArray) {\r\n                this.getDataForIteration([ iterationDataList[i], i ], rowData);\r\n            }\r\n            else {\r\n                this.getDataForIteration([ newData[ iterationDataList[i] ], iterationDataList[i], i ], rowData);\r\n            }\r\n\r\n            const rowKey = getKey(\r\n                usesKey\r\n                    ? rowData                               // => Use rowData created above - getKey() will run a value getter on it.\r\n                    : isDataArray\r\n                        ? iterationDataList[i]              // => Use the object from the newData\r\n                        : newData[ iterationDataList[i] ]   // => Use the Object key\r\n            );\r\n\r\n            // If a binder currently exists, then see if it is the one previously\r\n            // created for this row's data\r\n            if (currentBinders[i] && currentBinders[i]._loop.rowKey === rowKey) {\r\n                currentBinders[i][DOM_DATA_BIND_PROP].setData(rowData);\r\n                continue;\r\n            }\r\n\r\n            // If there is a binder at the current position, then its not the one need.\r\n            // move it to the `to be destroyed` list.\r\n            if (currentBinders[i]) {\r\n                currentBinders[i][DOM_DATA_BIND_PROP].recover();\r\n                binderToBeDestroyed.set(\r\n                    currentBinders[i]._loop.rowKey,\r\n                    currentBinders[i]\r\n                );\r\n                currentBinders[i] = null;\r\n            }\r\n\r\n            // Do we have a rowBinder for this data item in the existing list,\r\n            // but perhaps at a different location? Get it and move it to the new position.\r\n            // Old position in the existing array is set to null (avoids mutating array)\r\n            let binder = handler.bindersByKey.get(rowKey);\r\n\r\n            if (binder) {\r\n                if (binder._loop.pos !== null && currentBinders[binder._loop.pos] === binder) {\r\n                    currentBinders[binder._loop.pos] = null;\r\n                }\r\n            } else {\r\n                binder = binderToBeDestroyed.get(rowKey);\r\n\r\n                if (binder) {\r\n                    binderToBeDestroyed.delete(rowKey);\r\n                }\r\n            }\r\n\r\n            if (binder) {\r\n                currentBinders[i] = binder;\r\n                binder._loop.pos = i;\r\n                currentBinders[i][DOM_DATA_BIND_PROP].recover();\r\n                positionRowInDom(currentBinders, i, handler._placeholderEle);\r\n                currentBinders[i][DOM_DATA_BIND_PROP].setData(rowData);\r\n                continue;\r\n            }\r\n\r\n            // Create new binder\r\n            // First check if we can recycle one that is tagged to be destroyed.\r\n            // if not, then create a new one.\r\n            if (binderToBeDestroyed.size) {\r\n                const [recycleBinderKey, recycleBinder] = binderToBeDestroyed.entries().next().value;\r\n                binder = recycleBinder;\r\n                binder[DOM_DATA_BIND_PROP].setData(rowData);\r\n                binderToBeDestroyed.delete(recycleBinderKey);\r\n                binder._loop.rowKey = rowKey;\r\n                binder._loop.pos = i;\r\n            } else {\r\n                binder = render(handler._viewTemplate, rowData, handler._directives);\r\n                binder._destroy = destroyRowElement;\r\n                binder._handler = handler; // needed by destroyRowElement()\r\n                binder._loop  = { rowKey, pos: i };\r\n            }\r\n\r\n            currentBinders[i] = binder;\r\n            handler.bindersByKey.set(rowKey, binder);\r\n            positionRowInDom(currentBinders, i, handler._placeholderEle);\r\n        }\r\n\r\n        // Destroy binders that were not used\r\n        if (binderToBeDestroyed.size) {\r\n            arrayForEach(binderToBeDestroyed.values(), destroyBinder);\r\n            binderToBeDestroyed.clear();\r\n        }\r\n\r\n        // remove any left over items in currentBinders where is no longer part of newData\r\n        if (totalItems < currentBinders.length) {\r\n            arrayForEach(arraySplice(currentBinders, totalItems), destroyBinder);\r\n        }\r\n    }\r\n}\r\n\r\nfunction setupViewTemplate (viewTemplate) {\r\n    if (!viewTemplate[EACH]) {\r\n        viewTemplate[EACH] = {\r\n            usesKey: false,\r\n            getKey: defaultRowKey\r\n        };\r\n        const firstChildNode = viewTemplate.ele.content.firstChild;\r\n\r\n        if (\r\n            firstChildNode &&\r\n            firstChildNode.hasAttribute &&\r\n            hasAttribute(firstChildNode, KEY_DIRECTIVE)\r\n        ) {\r\n            viewTemplate[EACH].usesKey = true;\r\n            viewTemplate[EACH].getKey = createValueGetter(getAttribute(firstChildNode, KEY_DIRECTIVE), \"each.key\");\r\n            removeAttribute(firstChildNode, KEY_DIRECTIVE);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction positionRowInDom(currentBinders, binderIndex, defaultInsertMarkerElement) {\r\n    const binder = currentBinders[binderIndex];\r\n\r\n    // Get all original nodes from binder back to the DocumentFragment\r\n    binder[DOM_DATA_BIND_PROP].recover();\r\n\r\n    // If we have a binder after this one, then do an insertBefore using the first node of the nextSibling\r\n    if (currentBinders[binderIndex + 1]) {\r\n        domInsertBefore(binder, currentBinders[binderIndex + 1][DOM_DATA_BIND_PROP]._childNodes[0]);\r\n    } else {\r\n        // Just place the binder before the marker\r\n        domInsertBefore(binder, defaultInsertMarkerElement);\r\n    }\r\n}\r\n\r\nfunction destroyRowElement () {\r\n    // remove all elements/nodes of this row from DOM\r\n    this[DOM_DATA_BIND_PROP].recover();\r\n\r\n    if (this._loop.rowKey) {\r\n        this._handler.bindersByKey.delete(this._loop.rowKey);\r\n    }\r\n\r\n    this[DOM_DATA_BIND_PROP].destroy();\r\n}\r\n\r\nfunction parseDirectiveValue(attrValue) {\r\n    let matches = /\\(?(.+?)\\)?\\W?(?:of|in)\\W(.*)/.exec(attrValue);\r\n    if (matches) {\r\n        matches = matches.slice(1);\r\n        matches[0] = matches[0].split(/,/).map(argName => String(argName).trim());\r\n        return matches;\r\n    }\r\n    return [];\r\n}\r\n\r\nfunction hasDedicatedParent(node) {\r\n    return Array.prototype.every.call(node.parentNode.childNodes, childNode => {\r\n        return childNode === node || (childNode.nodeType === 3 && !childNode.textContent.trim());\r\n    });\r\n}\r\n\r\n\r\nexport default EachDirective;\r\n","import Directive                from \"./Directive\"\r\nimport {\r\n    PRIVATE,\r\n    createValueGetter,\r\n    hasAttribute } from \"../utils\"\r\nimport {NodeHandler} from \"./NodeHandler.js\";\r\n//============================================\r\nconst DIRECTIVE = \"_html\";\r\n\r\nexport class HtmlDirective extends Directive {\r\n    static NodeHandlerConstructor = class extends NodeHandler {\r\n        update(newValue) {\r\n            if (newValue === PRIVATE.get(this).value) {\r\n                return;\r\n            }\r\n\r\n            this._node.innerHTML = newValue;\r\n        }\r\n    };\r\n\r\n    static has(ele) {\r\n        return hasAttribute(ele, DIRECTIVE) ? DIRECTIVE : \"\";\r\n    }\r\n\r\n    init(attr, attrValue) {\r\n        this._attr              = attr;\r\n        this._tokenValueGetter  = createValueGetter((attrValue || \"\"), \"html\");\r\n    }\r\n}\r\n\r\nexport default HtmlDirective;\r\n\r\n","import Directive    from \"./Directive\"\r\nimport {\r\n    PRIVATE,\r\n    DOM_DATA_BIND_PROP,\r\n    hasAttribute,\r\n    createComment,\r\n    removeChild,\r\n    createValueGetter } from \"../utils\"\r\nimport {render} from \"../render\"\r\nimport {NodeHandler} from \"./NodeHandler.js\";\r\nimport {domInsertBefore} from \"@purtuga/common/src/domutils/domInsertBefore.js\"\r\n\r\n//============================================\r\nconst DIRECTIVE = \"_if\";\r\n\r\nexport class IfDirective extends Directive {\r\n    static NodeHandlerConstructor = class extends NodeHandler {\r\n\r\n        _renderedEle = null;\r\n\r\n        _renderTemplate = this._node.data;\r\n\r\n        init(...args) {\r\n            super.init(...args);\r\n            this._placeholderEle = createComment(\"directive.if\");\r\n            domInsertBefore(this._placeholderEle, this._node);\r\n            removeChild(this._node.parentNode, this._node);\r\n        }\r\n        update(showElement) {\r\n            const state = PRIVATE.get(this);\r\n\r\n            // If there is no change in Element visibility, then only update its data.\r\n            if (state.value === showElement) {\r\n                if (this._renderedEle) {\r\n                    this._renderedEle[DOM_DATA_BIND_PROP].setData(state.data);\r\n                }\r\n                return;\r\n            }\r\n\r\n            if (showElement && !this._renderedEle) {\r\n                this._renderedEle = render(this._renderTemplate, state.data, this._directives);\r\n                domInsertBefore(this._renderedEle, this._placeholderEle);\r\n            } else if (!showElement)  {\r\n                this.destroy_renderedEle();\r\n            }\r\n        }\r\n\r\n        destroy_renderedEle() {\r\n            if (this._renderedEle) {\r\n                this._renderedEle[DOM_DATA_BIND_PROP].recover();\r\n                this._renderedEle[DOM_DATA_BIND_PROP].destroy();\r\n                this._renderedEle = null;\r\n            }\r\n        }\r\n    };\r\n\r\n    static has(ele) {\r\n        return hasAttribute(ele, DIRECTIVE) ? DIRECTIVE : \"\";\r\n    }\r\n\r\n    static manages() { return true; }\r\n\r\n    init(attr, attrValue) {\r\n        this._attr              = attr;\r\n        this._tokenValueGetter  = createValueGetter((attrValue || \"\"), \"if\");\r\n    }\r\n}\r\n\r\nexport default IfDirective;\r\n","/**\r\n * Adds an event handler to a DOM element and returns back an\r\n * object that allows for removal of the event.\r\n *\r\n * @function domAddEventListener\r\n *\r\n * @param {HTMLElement} ele\r\n * @param {String} event\r\n *  The event to listen to (ex. `click`). Multiple events can be defined\r\n *  by separating them with whitespace\r\n * @param {Function} callback\r\n * @param {Boolean} [capture]\r\n *\r\n * @return DOMEventListener\r\n *\r\n * @example\r\n *\r\n * var listener = domAddEventHandler(myEle, \"click\", function(){});\r\n * ...\r\n * listener.remove();\r\n */\r\nexport function domAddEventListener(ele, event, callback, capture) {\r\n    let events      = event.split(/\\s+/);\r\n    let evListeners = {};\r\n\r\n    events.forEach(evName => {\r\n        ele.addEventListener(evName, callback, capture);\r\n        evListeners[evName] = {\r\n            remove: () => ele.removeEventListener(evName, callback, capture)\r\n        }\r\n    });\r\n\r\n    /**\r\n     * A DOM Event listener.\r\n     *\r\n     * @typedef {Object} DOMEventListener\r\n     *\r\n     * @property {Function} remove\r\n     * @property {Object} listeners\r\n     *  List of listeners that were bound to the DOM element. Each listeners has a\r\n     *  corresponding `.remove()` method.\r\n     */\r\n    return Object.create({\r\n        listeners: evListeners,\r\n        remove: function () {\r\n            events.forEach(evName => evListeners[evName].remove());\r\n        }\r\n    });\r\n}\r\nexport default domAddEventListener;\r\n","import domAddEventListener  from \"@purtuga/common/src/domutils/domAddEventListener\"\r\nimport Directive            from \"./Directive\"\r\nimport {\r\n    PRIVATE,\r\n    escapeString,\r\n    createValueGetter,\r\n    getNodeAttrNames,\r\n    logError } from \"../utils\"\r\n\r\n//============================================\r\nconst DIRECTIVE             = \"_on.\";\r\nconst matchesDirective      = new RegExp(`^${ escapeString(DIRECTIVE) }(.*)`);\r\n\r\nexport class OnDirective extends Directive {\r\n    static has(ele) {\r\n        let directiveAttr = \"\";\r\n        getNodeAttrNames(ele).some(attr => matchesDirective.test(attr) && (directiveAttr = attr));\r\n        return directiveAttr;\r\n    }\r\n\r\n\r\n    init(directiveAttr, attrValue) {\r\n        this._attr              = directiveAttr;\r\n        this._eventName         = (new RegExp(matchesDirective)).exec(directiveAttr)[1];\r\n        this._tokenValueGetter  = createValueGetter((attrValue || \"\"), \"on\");\r\n    }\r\n\r\n    /**\r\n     * Handles the event on the node\r\n     *\r\n     * @param {NodeHandler} handler\r\n     * @param {Event} domEv\r\n     */\r\n    handleEvent(handler, domEv) {\r\n        const state = PRIVATE.get(handler);\r\n\r\n        let tokenValue;\r\n        state.data.$ev = domEv;\r\n\r\n        try {\r\n            tokenValue = this._tokenValueGetter(state.data);\r\n        }\r\n        catch(e) {\r\n            logError(e);\r\n            return;\r\n        }\r\n\r\n        delete state.data.$ev;\r\n\r\n        if (\"function\" === typeof tokenValue) {\r\n            return tokenValue.call(handler._n, domEv);\r\n        }\r\n        // DOM EventHandler interface: object having a `handleEvent` method\r\n        else if (tokenValue && \"function\" === tokenValue.handleEvent) {\r\n            tokenValue.handleEvent.call(tokenValue, domEv);\r\n        }\r\n    }\r\n\r\n    // takes care of only storing the data on the node, for when the event is triggered\r\n    render(handler, node, data) {\r\n        let state = PRIVATE.get(handler);\r\n\r\n        if (!state) {\r\n            state = {\r\n                data:       { $data: {} },\r\n                tracker:    () => this.render(handler, node, state.data)\r\n            };\r\n            PRIVATE.set(handler, state);\r\n        }\r\n\r\n        if (data) {\r\n            if (data.$data) {\r\n                state.data = data;\r\n            }\r\n            else {\r\n                state.data.$data = data;\r\n            }\r\n        }\r\n    }\r\n\r\n    getNodeHandler(node) {\r\n        const handler = super.getNodeHandler(node);\r\n\r\n        // FIXME: this is not good - needs re-writing to ensure only one handle is attached.\r\n\r\n        const evListener = domAddEventListener(node, this._eventName, this.handleEvent.bind(this, handler));\r\n\r\n\r\n        handler.onDestroy(() => evListener.remove());\r\n        return handler;\r\n    }\r\n}\r\n\r\nexport default OnDirective;\r\n","import AttrDirective from \"./attr-directive\"\r\n\r\nconst matchRegExp = /^_prop\\.(.*)/;\r\nexport class PropDirective extends AttrDirective {\r\n    static get _matches() { return matchRegExp; }\r\n    static _isProp() { return true; }\r\n}\r\nexport default PropDirective;\r\n","import Directive        from \"./Directive\"\r\nimport {\r\n    createValueGetter,\r\n    hasAttribute    }   from \"../utils\"\r\nimport {NodeHandler} from \"./NodeHandler.js\";\r\n\r\n//============================================\r\nconst DIRECTIVE             = \"_show\";\r\nconst HIDDEN                = \"none\";\r\n\r\nexport class ShowDirective extends Directive {\r\n    static NodeHandlerConstructor = class extends NodeHandler {\r\n        init(...args) {\r\n            super.init(...args);\r\n            this._origDisplayStyle = this._node.style.display || \"\";\r\n        }\r\n        update(newValue) {\r\n            const eleStyleList = this._node.style;\r\n\r\n            if (newValue) {\r\n                eleStyleList.display = this._origDisplayStyle;\r\n            }\r\n            else if (eleStyleList.display !== HIDDEN)  {\r\n                eleStyleList.display = HIDDEN;\r\n            }\r\n        }\r\n    };\r\n\r\n    static has(ele) {\r\n        return hasAttribute(ele, DIRECTIVE) ? DIRECTIVE : \"\";\r\n    }\r\n\r\n    init(attr, attrValue) {\r\n        this._attr              = attr;\r\n        this._tokenValueGetter  = createValueGetter((attrValue || \"\"), \"show\");\r\n    }\r\n}\r\n\r\nexport default ShowDirective;","/**\r\n * Sets styles on an element\r\n *\r\n * @function domSetStyle\r\n *\r\n * @param {HTMLElement} el\r\n * @param {Object} styles\r\n *\r\n * @example\r\n *\r\n * domSetStyle(document.body, {\"background-color\", \"yellow\"});\r\n */\r\nexport function domSetStyle(el, styles){\r\n    if (!el || typeof styles !== \"object\"){\r\n        return;\r\n    }\r\n    Object.keys(styles).forEach(function(prop){\r\n        el.style[prop] = styles[prop];\r\n    });\r\n}\r\nexport default domSetStyle;\r\n","import {\r\n    createValueGetter,\r\n    hasAttribute    }   from \"../utils\"\r\nimport Directive        from \"./Directive\"\r\nimport {NodeHandler} from \"./NodeHandler.js\";\r\nimport {domSetStyle} from \"@purtuga/common/src/domutils/domSetStyle.js\"\r\n//============================================\r\nconst DIRECTIVE = \"_style\";\r\n\r\nexport class StyleDirective extends Directive {\r\n    static NodeHandlerConstructor = class extends NodeHandler {\r\n        update(newValue) {\r\n            domSetStyle(this._node, newValue);\r\n        }\r\n    };\r\n\r\n    static has(ele) {\r\n        return hasAttribute(ele, DIRECTIVE) ? DIRECTIVE : \"\";\r\n    }\r\n\r\n\r\n    init(attr, attrValue) {\r\n        this._attr              = attr;\r\n        this._tokenValueGetter  = createValueGetter((attrValue || \"\"), \"style\");\r\n    }\r\n}\r\n\r\nexport default StyleDirective;","import DomDataBind          from \"./DomDataBind.js\"\r\nimport render               from \"./render.js\"\r\nimport Directive            from \"./directives/Directive.js\"\r\nimport * as allDirectives   from \"./directives/index.js\";\r\n\r\nconst DomDataBindAll = DomDataBind.extend();\r\nDomDataBindAll.directives = allDirectives;\r\n\r\nexport * from \"./directives/index.js\"\r\nexport default DomDataBindAll;\r\nexport {\r\n    DomDataBindAll,\r\n    DomDataBind,\r\n    render,\r\n    allDirectives,\r\n    Directive\r\n};"],"sourceRoot":""}