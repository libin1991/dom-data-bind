{"version":3,"sources":["webpack://DomDataBind/webpack/universalModuleDefinition","webpack://DomDataBind/webpack/bootstrap","webpack://DomDataBind/./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/jsutils/getGlobal.js","webpack://DomDataBind/(webpack)/buildin/global.js","webpack://DomDataBind/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://DomDataBind/./node_modules/@babel/runtime/helpers/esm/construct.js","webpack://DomDataBind/./node_modules/@babel/runtime/helpers/esm/classCallCheck.js","webpack://DomDataBind/./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack://DomDataBind/./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","webpack://DomDataBind/./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack://DomDataBind/./node_modules/@babel/runtime/helpers/esm/inherits.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/jsutils/runtime-aliases.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/jsutils/objectExtend.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/jsutils/WeakMap.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/jsutils/dataStore.js","webpack://DomDataBind/./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack://DomDataBind/./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack://DomDataBind/./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack://DomDataBind/./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack://DomDataBind/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/jsutils/Iterator.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/jsutils/Set.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/jsutils/queueCallback.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/jsutils/Compose.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/jsutils/Map.js","webpack://DomDataBind/./src/utils.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/domutils/isTemplateElement.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/domutils/domFind.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/jsutils/uuid.js","webpack://DomDataBind/./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack://DomDataBind/./node_modules/@babel/runtime/helpers/esm/get.js","webpack://DomDataBind/./node_modules/@babel/runtime/helpers/esm/superPropBase.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/domutils/domInsertBefore.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/domutils/domRemoveChild.js","webpack://DomDataBind/./src/directives/NodeHandler.js","webpack://DomDataBind/./src/directives/Directive.js","webpack://DomDataBind/./src/view.js","webpack://DomDataBind/./src/TemplateInstance.js","webpack://DomDataBind/./src/render.js","webpack://DomDataBind/./src/bindings/text-binding.js","webpack://DomDataBind/./src/Template.js","webpack://DomDataBind/./src/DomDataBind.js","webpack://DomDataBind/./src/directives/attr-directive.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/domutils/domHasClass.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/domutils/domAddClass.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/domutils/domRemoveClass.js","webpack://DomDataBind/./src/directives/class-directive.js","webpack://DomDataBind/./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack://DomDataBind/./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack://DomDataBind/./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack://DomDataBind/./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack://DomDataBind/./src/directives/each-directive.js","webpack://DomDataBind/./src/directives/html-directive.js","webpack://DomDataBind/./src/directives/if-directive.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/domutils/domAddEventListener.js","webpack://DomDataBind/./src/directives/on-directive.js","webpack://DomDataBind/./src/directives/prop-directive.js","webpack://DomDataBind/./src/directives/show-directive.js","webpack://DomDataBind/./node_modules/@purtuga/common/src/domutils/domSetStyle.js","webpack://DomDataBind/./src/directives/style-directive.js","webpack://DomDataBind/./src/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_typeof2","obj","iterator","constructor","_typeof","__webpack_exports__","GLOBAL","_babel_runtime_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_0__","global","self","Function","g","this","e","_setPrototypeOf","setPrototypeOf","__proto__","construct_construct","Parent","args","Class","Reflect","construct","sham","Proxy","Date","toString","isNativeReflectConstruct","a","push","apply","instance","arguments","_classCallCheck","Constructor","TypeError","_assertThisInitialized","ReferenceError","_possibleConstructorReturn","esm_typeof","_getPrototypeOf","getPrototypeOf","_inherits","subClass","superClass","writable","configurable","functionBind","functionBindCall","isObject","isString","objectDefineProperty","objectDefineProperties","defineProperties","objectKeys","keys","arr","isArray","Array","arrayForEach","forEach","arrayIndexOf","indexOf","arraySplice","splice","arraySlice","slice","consoleLog","console","log","consoleError","error","SymbolIterator","warn","HTMLElementPrototype","HTMLElement","doc","document","createElement","head","tagName","createTextNode","data","hasAttribute","appendChild","insertBefore","getAttribute","setAttribute","removeAttribute","isDocFragment","node","objectExtend","FakeWeakMap","mergeIntoObj","response","_len","length","mergeObjects","_key","total","deepMerge","shift","WeakMap","counter","now","Math","random","set","entry","undefined","delete","has","dataStore","stash","_toConsumableArray","arr2","_arrayWithoutHoles","iter","from","_iterableToArray","_nonIterableSpread","_defineProperty","FakeIterator","values","idx","next","done","_","nextIdx","Set","FakeSet","add","item","size","clear","entries","cb","thisArg","queue","callbacks","queueCallback","setTimeout","flushQueue","cbList","PRIVATE","COMMON_DESTROY_METHOD_NAME","k","baseMethods","isDestroyed","init","destroy","executeCallbacksNow","destroyCallbacks","callOnDestroyCallback","onDestroy","callback","inst","getInstanceState","getFactory","staticMethods","extend","_this","reduce","newProto","thisObjProto","objKey","isInstanceOf","instanceObj","some","protoKey","getDestroyCallback","instanceState","stateStore","prop","method","Node","Compose","ComposeConstructor","_len2","_key2","getNewConstructor","Map","FakeMap","DOCUMENT","FUNCTION","ELEMENT_PROTOTYPE","Element","VALUE_GETTERS","DOM_DATA_BIND_PROP","UUID","concat","replace","bindCallTo","isPureObject","removeChild","createComment","isTemplate","ele","eleToStringValue","content","logError","createValueGetter","evalCode","trim","fn","getNodeAttrNames","attrNames","attributes","domFind","domEle","selector","querySelectorAll","pad","num","substr","globalCount","count","fingerprint","navigator","mimeTypes","userAgent","uuid","generate","timestamp","getTime","nextCounter","_defineProperties","target","props","descriptor","_createClass","protoProps","staticProps","get_get","receiver","base","_superPropBase","desc","getOwnPropertyDescriptor","domInsertBefore","newNode","referenceNode","parentNode","domRemoveChild","childNode","NodeHandler","_Compose","directive","directives","_directives","_d","_directive","_n","_node","state","tracker","stopWatchingAll","render","Directive","handler","isQueued","update","handlerState","newValue","_tokenValueGetter","_attr","nodeType","cleanNode","NodeHandlerConstructor","TEMPLATES","view","html","cacheKey","innerHTML","hasTemplate","Template","TemplateInstance","docFrag","bindings","templateId","_frag","_bindings","_childNodes","childNodes","fromTemplateId","nodeEle","recover","viewTemplate","importNode","applyBindingsToTemplateInstance","id","setData","ID","isAttached","TextBindingNodeHandler","_get2","nodeValue","_placeholderEle","_externalNodes","_template","_templateInst","isNull","isUndefined","setPlaceholder","DomDataBind","isCurrentExternal","storeExternals","removeExternals","every","newNodeEle","destroyTemplateView","TextBinding","_Directive","tokenText","_tokenText","DROPS_NODES_ON_CLONE","frag","createDocumentFragment","cloneNode","NODE_CONTAINS_MISSES_TEXT_NODES","div","text","contains","nodeSplitText","Text","splitText","reHasDataToken","RegExp","reTokenMatch","getNodeValue","hasToken","test","getBindingFor","eleToBindings","ignoredChildren","directiveIterator","attrName","attrValue","managesNode","elePlaceholder","manages","getArrayForNodeFromMap","getDirectiveForAttribute","fakeEle","addTextNodes","filter","onlyElementsWithAttributes","findAllNodes","skip","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","ignoredParent","compareDocumentPosition","err","return","child","lastIndex","childTokenMatches","exec","getTextBindingForToken","tokenTextNode","index","fixEmptyTextNode","tokenPlaceholder","processTextNode","directiveBindings","bindingEle","path","walkEle","parent","unshift","Directives","directivesInstances","getNodeAt","getNodeHandler","Error","map","directiveInstances","directiveSignature","resultArr","hasChildNodes","firstChild","nextSibling","$ele","Factory","binding","AttrDirective","attr","_htmlAttr","_matches","directiveAttr","_isProp","domHasClass","el","cssClass","classList","domAddClass","classNameList","String","split","className","domRemoveClass","remove","ClassDirective","newClasses","oldClasses","_slicedToArray","_arrayWithHoles","_arr","_e","_s","_i","_iterableToArrayLimit","_nonIterableRest","EACH","KEY_DIRECTIVE","destroyBinder","binder","_destroy","defaultRowKey","EachDirectiveNodeHandler","iterateOverList","_isSoleChild","textContent","hasDedicatedParent","_viewTemplate","usesKey","getKey","firstChildNode","setupViewTemplate","newList","listIterator","list","isEmptyList","binders","destroyChildBinders","bindersByKey","EachDirective","_parseDirectiveValue2","matches","argName","parseDirectiveValue","iteratorArgs","listVar","_iteratorArgs","parentEle","dataObj","rowData","newData","iterationDataList","isDataArray","currentBinders","binderToBeDestroyed","totalItems","_handler$_viewTemplat","$root","$parent","$data","getDataForIteration","rowKey","_loop","pos","positionRowInDom","_binderToBeDestroyed$","recycleBinderKey","destroyRowElement","_handler","binderIndex","defaultInsertMarkerElement","HtmlDirective","IfDirective","_temp","showElement","_renderedEle","_renderTemplate","teardown","domAddEventListener","event","capture","events","evListeners","evName","addEventListener","removeEventListener","listeners","matchesDirective","str","escapeString","isNumber","keyAliases","13","27","9","46","32","38","40","37","39","keyCodesAliases","OnDirectiveNodeHandler","setup","domEv","_this$_directive$_inf","_info","hasModifiers","modifiers","whichKey","which","_filter","KeyboardEvent","tokenValue","returnValue","$ev","handleEvent","once","stop","stopPropagation","prevent","preventDefault","_evListener","_eventName","OnDirective","directiveString","Boolean","parseDirectiveString","modifier","matchRegExp","PropDirective","_AttrDirective","ShowDirective","_class","_origDisplayStyle","style","display","eleStyleList","domSetStyle","styles","StyleDirective","DomDataBindAll","allDirectives","attr_directive_AttrDirective","class_directive_ClassDirective","each_directive_EachDirective","html_directive_HtmlDirective","if_directive_IfDirective","on_directive_OnDirective","prop_directive_PropDirective","show_directive_ShowDirective","style_directive_StyleDirective","render_render","directives_namespaceObject","Directive_Directive","directiveName"],"mappings":"8DAAA,SAAAA,EAAAC,GACA,iBAAAC,SAAA,iBAAAC,OACAA,OAAAD,QAAAD,IACA,mBAAAG,eAAAC,IACAD,UAAAH,GACA,iBAAAC,QACAA,QAAA,YAAAD,IAEAD,EAAA,YAAAC,IARA,CASCK,EAAA,WACD,mBCTA,IAAAC,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAP,QAGA,IAAAC,EAAAI,EAAAE,IACAC,EAAAD,EACAE,GAAA,EACAT,YAUA,OANAU,EAAAH,GAAAI,KAAAV,EAAAD,QAAAC,IAAAD,QAAAM,GAGAL,EAAAQ,GAAA,EAGAR,EAAAD,QA0DA,OArDAM,EAAAM,EAAAF,EAGAJ,EAAAO,EAAAR,EAGAC,EAAAQ,EAAA,SAAAd,EAAAe,EAAAC,GACAV,EAAAW,EAAAjB,EAAAe,IACAG,EAAAC,eAAAnB,EAAAe,GAA0CK,YAAA,EAAAC,IAAAL,KAK1CV,EAAAgB,EAAA,SAAAtB,GACA,oBAAAuB,eAAAC,aACAN,EAAAC,eAAAnB,EAAAuB,OAAAC,aAAwDC,MAAA,WAExDP,EAAAC,eAAAnB,EAAA,cAAiDyB,OAAA,KAQjDnB,EAAAoB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAAnB,EAAAmB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,EAAAY,OAAA,MAGA,GAFAxB,EAAAgB,EAAAO,GACAX,EAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAAnB,EAAAQ,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAvB,EAAA2B,EAAA,SAAAhC,GACA,IAAAe,EAAAf,KAAA2B,WACA,WAA2B,OAAA3B,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAK,EAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,EAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD7B,EAAAgC,EAAA,GAIAhC,IAAAiC,EAAA,kCClFA,SAAAC,EAAAC,GAA6U,OAA1OD,EAA3E,mBAAAjB,QAAA,iBAAAA,OAAAmB,SAA2E,SAAAD,GAAoC,cAAAA,GAA+B,SAAAA,GAAoC,OAAAA,GAAA,mBAAAlB,QAAAkB,EAAAE,cAAApB,QAAAkB,IAAAlB,OAAAa,UAAA,gBAAAK,IAAmIA,GAE9T,SAAAG,EAAAH,GAWf,OATAG,EADA,mBAAArB,QAAA,WAAAiB,EAAAjB,OAAAmB,UACA,SAAAD,GACA,OAAAD,EAAAC,IAGA,SAAAA,GACA,OAAAA,GAAA,mBAAAlB,QAAAkB,EAAAE,cAAApB,QAAAkB,IAAAlB,OAAAa,UAAA,SAAAI,EAAAC,KAIAA,GAbAnC,EAAAQ,EAAA+B,EAAA,sBAAAD,0FCCaE,EACK,oBAEV,IAAO1C,EAAP,YAAAc,EAAA6B,EAAA,EAAA7B,CAAOd,IAA2BA,EAFxB,oBAGV,IAAO4C,EAAP,YAAA9B,EAAA6B,EAAA,EAAA7B,CAAO8B,IAA2BA,EAHxB,eAIV,oBAAOC,KAAP,YAAA/B,EAAA6B,EAAA,EAAA7B,CAAO+B,OAAyBA,KAC7BC,EAAS,eAATA,oCCPX,IAAAC,EAGAA,EAAA,WACA,OAAAC,KADA,GAIA,IAEAD,KAAA,IAAAD,EAAA,iBACC,MAAAG,GAED,iBAAAjD,IAAA+C,EAAA/C,GAOAH,EAAAD,QAAAmD,gDCnBe,SAAAG,EAAArC,EAAAqB,GAMf,OALAgB,EAAApC,EAAAqC,gBAAA,SAAAtC,EAAAqB,GAEA,OADArB,EAAAuC,UAAAlB,EACArB,IAGAA,EAAAqB,GCSe,SAASmB,EAAUC,EAAAC,EAAAC,GAclC,OAVIH,EAjBJ,WACA,uBAAAI,kBAAAC,UAAA,SACA,GAAAD,QAAAC,UAAAC,KAAA,SACA,sBAAAC,MAAA,SAEA,IAEA,OADAC,EAAA7B,UAAA8B,SAAAvD,KAAAkD,QAAAC,UAAAG,KAAA,gBACA,EACG,MAAAZ,GACH,UAKAc,GACcN,QAAAC,UAEA,SAAAJ,EAAAC,EAAAC,GACd,IAAAQ,GAAA,MACAA,EAAAC,KAAAC,MAAAF,EAAAT,GACA,IACAY,EAAA,IADArB,EAAAlB,KAAAsC,MAAAZ,EAAAU,IAGA,OADAR,GAAiBN,EAAciB,EAAAX,EAAAxB,WAC/BmC,IAImBD,MAAA,KAAAE,WC7BJ,SAAAC,EAAAF,EAAAG,GACf,KAAAH,aAAAG,GACA,UAAAC,EAAA,0cCFe,SAAAC,EAAA3B,GACf,YAAAA,EACA,UAAA4B,eAAA,6DAGA,OAAA5B,ECHe,SAAA6B,EAAA7B,EAAAtC,GACf,OAAAA,GAAsB,WAAPO,EAAA6D,EAAA,EAAA7D,CAAOP,IAAA,mBAAAA,EAIbiE,EAAqB3B,GAH9BtC,ECJe,SAAAqE,EAAA/D,GAIf,OAHA+D,EAAA9D,EAAAqC,eAAArC,EAAA+D,eAAA,SAAAhE,GACA,OAAAA,EAAAuC,WAAAtC,EAAA+D,eAAAhE,KAEAA,GCHe,SAAAiE,EAAAC,EAAAC,GACf,sBAAAA,GAAA,OAAAA,EACA,UAAAT,EAAA,sDAGAQ,EAAA/C,UAAAlB,EAAAY,OAAAsD,KAAAhD,WACAO,aACAlB,MAAA0D,EACAE,UAAA,EACAC,cAAA,KAGAF,GAAkB9B,EAAc6B,EAAAC,GCAzB,IAAMG,EAAerC,EAASlB,KAAKrB,KAAKqB,KAAKkB,EAASlB,MAahDwD,EAAmBD,EAAarC,EAASvC,KAAKqB,KAAMkB,EAASvC,MAG7DuD,EAA2BsB,EAAiBtE,EAAOkB,UAAU8B,UAC7DuB,EAA2B,SAAAhD,GAAG,MAAsB,oBAAlByB,EAASzB,IAC3CiD,EAA2B,SAAAjD,GAAG,MAAsB,oBAAlByB,EAASzB,IAI3CkD,EAA2BzE,EAAOC,eAClCyE,EAA2B1E,EAAO2E,iBAClCC,EAA2B5E,EAAO6E,KAuBzCC,KACOC,EAAiBC,EAAMD,QACvBE,EAAiBX,EAAiBQ,EAAII,SACtCC,EAAiBb,EAAiBQ,EAAIM,SACtCC,EAAiBf,EAAiBQ,EAAIQ,QACtCC,EAAgBjB,EAAiBQ,EAAIU,OAIrCC,EAAaC,EAAQC,IACrBC,EAAeF,EAAQG,OAASJ,EAKhCK,GAJcJ,EAAQK,KAIL,oBAAuB1F,QAAUA,OAAOmB,SAAWnB,OAAOmB,SAAW,cAenG,IAAMwE,EAAuBC,YAAY/E,UAC5BgF,EAAMC,EAGNC,GAFOF,EAAIG,KAEK,SAAAC,GAAO,OAAIJ,EAAIE,cAAcE,KAC7CC,EAAiB,SAAAC,GAAI,OAAIN,EAAIK,eAAeC,GAAQ,KAGpDC,GAFcnC,EAAiB0B,EAAqBU,aACrCpC,EAAiB0B,EAAqBW,cACtCrC,EAAiB0B,EAAqBS,eACrDG,EAAetC,EAAiB0B,EAAqBY,cACrDC,EAAevC,EAAiB0B,EAAqBa,cACrDC,EAAkBxC,EAAiB0B,EAAqBc,iBACxDC,EAAgB,SAAAC,GAAI,MAAuB,8BAAnBhE,EAASgE,ICnD/BC,ICtCXC,EDsCWD,EAnCR,SAASA,EAAaE,GAA+B,IACxD,IAAIC,EAAcD,MADsCE,EAAA/D,UAAAgE,OAAdC,EAAc,IAAAvC,EAAAqC,EAAA,EAAAA,EAAA,KAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAdD,EAAcC,EAAA,GAAAlE,UAAAkE,GAExD,IAEIlI,EACAuB,EAHA4G,EAAcF,EAAaD,OAC3BI,GAAc,EAUlB,IAN4B,kBAAjBP,IACPO,EAAcP,EACdC,EAAcG,EAAaI,YAC3BF,EAAcF,EAAaD,QAG1BhI,EAAI,EAAGA,EAAImI,EAAOnI,IACnB,GAAKiI,EAAajI,GAIlB,IAAKuB,KAAO0G,EAAajI,GACjBiI,EAAajI,GAAG6B,eAAeN,KAE3B6G,GACAnD,EAAS6C,EAASvG,KAClB0D,EAASgD,EAAajI,GAAGuB,IAEzBuG,EAASvG,GAAOoG,GAAc,EAAMG,EAASvG,GAAM0G,EAAajI,GAAGuB,IAGnEuG,EAASvG,GAAO0G,EAAajI,GAAGuB,IAKhD,OAAOuG,GCnCY,oBAAZQ,QACP,WACI,IAAI3H,EAAiBD,EAAOC,eACxB4H,EAAU9E,EAAK+E,MAAQ,IAEvBF,EAAUV,EAAc,WACxBhF,KAAKrC,KAAO,QAA0B,IAAhBkI,EAAKC,WAAmB,GAAMH,IAAY,MAGpED,EAAQ1G,WACJ+G,IAAK,SAASpH,EAAKN,GACf,IAAI2H,EAAQrH,EAAIqB,KAAKrC,MAKrB,OAJIqI,GAASA,EAAM,KAAOrH,EACtBqH,EAAM,GAAK3H,EAEXN,EAAeY,EAAKqB,KAAKrC,MAAOU,OAAQM,EAAKN,GAAQ4D,UAAU,IAC5DjC,MAEX/B,IAAK,SAASU,GACV,IAAIqH,EACJ,OAAQA,EAAQrH,EAAIqB,KAAKrC,QAAUqI,EAAM,KAAOrH,EAC5CqH,EAAM,GAAKC,GAGnBC,OAAU,SAASvH,GACf,IAAIqH,EAAQrH,EAAIqB,KAAKrC,MACrB,SAAKqI,GAASA,EAAM,KAAOrH,KAC3BqH,EAAM,GAAKA,EAAM,GAAKC,GACf,IAEXE,IAAK,SAASxH,GACV,IAAIqH,EAAQrH,EAAIqB,KAAKrC,MACrB,QAAKqI,GACEA,EAAM,KAAOrH,IAI5B3B,EAAO0I,QAAUA,EApCrB,GAuCAV,EAAcU,QAIHV,IClCAoB,GAVXC,MAAQ,IAAIX,EAKZhH,OAAQ,WACJ,OAAO,IAAIgH,ICjBJ,SAAAY,GAAA1D,GACf,OCJe,SAAAA,GACf,GAAAE,EAAAD,QAAAD,GAAA,CACA,QAAAxF,EAAA,EAAAmJ,EAAA,IAAAzD,EAAAF,EAAAwC,QAAiDhI,EAAAwF,EAAAwC,OAAgBhI,IACjEmJ,EAAAnJ,GAAAwF,EAAAxF,GAGA,OAAAmJ,GDFSC,CAAiB5D,IEJX,SAAA6D,GACf,GAAAtI,OAAAmB,YAAAxB,EAAA2I,IAAA,uBAAA3I,EAAAkB,UAAA8B,SAAAvD,KAAAkJ,GAAA,OAAA3D,EAAA4D,KAAAD,GFGmCE,CAAe/D,IGJnC,WACf,UAAArB,EAAA,mDHG2DqF,GIJ5C,SAAAC,GAAAxH,EAAAV,EAAAN,GAYf,OAXAM,KAAAU,EACAvB,EAAAC,eAAAsB,EAAAV,GACAN,QACAL,YAAA,EACAkE,cAAA,EACAD,UAAA,IAGA5C,EAAAV,GAAAN,EAGAgB,cCHO,SAASyH,GAAanE,EAAMoE,GAC/BxE,EAAqBvC,KAAM,KAAO3B,OAC9BsE,KAAQA,EAAKW,MAAM,GACnByD,OAAQA,EAASA,EAAOzD,MAAM,GAAK,KACnC0D,IAAQ,EACRzB,MAAQ5C,EAAKyC,UAKrB5C,EAAuBsE,GAAa9H,WAChCO,aAAelB,MAAOyI,IACtBG,MACIjJ,YAAY,EACZkE,cAAc,EACd7D,MAHE,WAIE,IAAM6G,GACFgC,KAAMlH,KAAKmH,EAAEH,MAAQhH,KAAKmH,EAAE5B,OAGhC,GAAIL,EAASgC,KAET,OADAhC,EAAS7G,MAAQ4H,EACVf,EAGX,IAAMkC,EAAUpH,KAAKmH,EAAEH,MAQvB,OANA9B,EAAS7G,MAAQ2B,KAAKmH,EAAExE,KAAKyE,GAEzBpH,KAAKmH,EAAEJ,SACP7B,EAAS7G,OAAU6G,EAAS7G,MAAO2B,KAAKmH,EAAEJ,OAAOK,KAG9ClC,MAInB3C,EAAqBuE,GAAa9H,UAAW4E,GAAkBvF,MAAF,WAAW,OAAO2B,QCnCxE,IAAMqH,GAAM3H,KAAO2H,KAAO3H,KAAO2H,IAAIrI,UAAU4E,GAAkBlE,KAAO2H,IAAMC,GAG9E,SAASA,MAIhB9E,EAAuB8E,GAAQtI,UAAT6H,IAClBtH,aAAelB,MAAOiJ,GAASpF,cAAc,GAC7CiF,GACIlJ,IADD,WAEK,IAAM8I,KAEN,OADAxE,EAAqBvC,KAAM,KAAO3B,MAAO0I,IAClCA,IAGfQ,KACIlJ,MADC,SACKmJ,GAIF,OAHoC,IAAhCvE,EAAajD,KAAKmH,EAAGK,IACrBxH,KAAKmH,EAAElG,KAAKuG,GAETxH,OAGfmG,KACI9H,MADC,SACKmJ,GAAQ,OAAuC,IAAhCvE,EAAajD,KAAKmH,EAAGK,KAE9CC,MACIxJ,IADE,WACM,OAAO+B,KAAKmH,EAAE/B,SAE1BsC,OACIrJ,MADG,WACO2B,KAAKmH,EAAE/D,OAAO,KAE5B8C,QACI7H,MADI,SACEmJ,GACF,IAAMR,EAAM/D,EAAajD,KAAKmH,EAAGK,GACjC,OAAa,IAATR,IACAhH,KAAKmH,EAAE/D,OAAO4D,EAAK,IACZ,KAKnBD,QACI1I,MADI,WAEA,OAAO,IAAIyI,GAAa9G,KAAKmH,KAGrCQ,SACItJ,MADK,WAED,OAAO,IAAIyI,GAAa9G,KAAKmH,EAAGnH,KAAKmH,KAG7CnE,SACI3E,MADK,SACCuJ,EAAIC,GACN7H,KAAKmH,EAAEnE,QAAQ,SAAAwE,GAAI,OAAII,EAAGrK,KAAKsK,EAASL,EAAMA,QAGrD5D,GACGvF,MADc,WAEV,OAAO2B,KAAK+G,aCpExB,IACIe,GADEC,GAAY,IAAIV,GAoBPW,OATR,SAAuBJ,GACtB,mBAAsBA,IACtBG,GAAUR,IAAIK,GAETE,KACDA,GAAQG,EAAWC,GAAY,MAM3C,SAASA,KACL,IAGIN,EAHEO,EAAM7B,GAAQyB,IAIpB,IAHAA,GAAUL,QACVI,GAAQ,KAEAF,EAAKO,EAAO1C,SAChBmC,IACAA,EAAK,KC3Bb,IAAMQ,GAAUhC,EAAU1H,SACpB2J,IACF,UACA,SACA,OAIJ,SAAS3F,GAAW1D,GAChB,IAAIsJ,EAAG3F,KACP,IAAK2F,KAAKtJ,EACN2D,EAAK1B,KAAKqH,GAEd,OAAO3F,EAIX,IAAM4F,IAKFC,aAAa,EAKbC,KAV+C,aAmB/CC,QAnB+C,SAmBvCC,GACJ,GAAIP,GAAQjC,IAAInG,MAAO,CACnB,IAAI4I,EAAmBR,GAAQnK,IAAI+B,MACnCoI,GAAQlC,OAAOlG,MAEX2I,EACAC,EAAiB5F,QAAQ6F,IAGzBb,GAAc,kBAAMY,EAAiB5F,QAAQ6F,MAIjD,kBAAqB7I,KAAKwI,cAC1BxI,KAAKwI,aAAc,IAU3BM,UA3C+C,SA2CrCC,IAoJd,SAA0BC,GACjBZ,GAAQjC,IAAI6C,IACbZ,GAAQrC,IAAIiD,MAGhB,OAAOZ,GAAQnK,IAAI+K,IAxJfC,CAAiBjJ,MAAMiB,KAAK8H,IAQhCG,WApD+C,WAqD3C,GAAIlJ,KAAKT,YACL,OAAOS,KAAKT,cAMlB4J,IAOFC,OAAQ,WAAiB,IACrB,IAAI5I,EAAK,SAAA6I,GAAA,SAAA7I,IAAA,OAAAa,EAAArB,KAAAQ,GAAAkB,EAAA1B,KAAA4B,EAAApB,GAAAU,MAAAlB,KAAAoB,YAAA,OAAAU,EAAAtB,EAAA6I,GAAA7I,EAAA,CAAiBR,MADLmF,EAAA/D,UAAAgE,OAAL7E,EAAK,IAAAuC,EAAAqC,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAL/E,EAAK+E,GAAAlE,UAAAkE,GAarB,OAVAP,EAAavE,EAAMxB,UAAWuB,EAAK+I,OAAO,SAASC,EAAUlK,GACzD,GAAIA,EAAK,CACL,IAAMmK,EAAgBnK,EAAIL,WAAaK,EACvCqD,GAAW8G,GAAcxG,QAAQ,SAASyG,GACtCF,EAASE,GAAUD,EAAaC,KAGxC,OAAOF,QAGJ/I,GAQXkJ,aAAc,SAASC,GAEnB,QAAKA,IAIYjH,GAAW1C,KAAKhB,WAGd4K,KAAK,SAASC,GAC7B,YAAwC,IAA1BF,EAAYE,MAUlCnL,OAAQ,WACJ,OAAA2B,EAAWL,KAAX8C,EAAA9D,UAAAsE,MAAA/F,KAAmB6D,aA0BvB0I,mBA6BG,SAA6BC,EAAeC,GAC/C,OAAO,WACCD,GAEAjM,EAAO6E,KAAKoH,GAAe/G,QAAQ,SAAUiH,GACrCF,EAAcE,KACd5B,GAA2BuB,KAAK,SAACM,GAC7B,GACIH,EAAcE,GAAMC,KACR,WAAXA,KAAyBH,EAAcE,aAAiBE,OAGzD,OADAJ,EAAcE,GAAMC,MACb,IAIfH,EAAcE,GAAQhE,KAK9B+D,GAAcA,EAAW7D,KAAO6D,EAAW7D,IAAI4D,IAC/CC,EAAW9D,OAAO6D,MAa9B,SAASlB,GAAuBE,GACxB,mBAAsBA,GACtBA,IAgCR,IAAMqB,GA5BN,WACI,SAASC,IAA4B,QAAAC,EAAAlJ,UAAAgE,OAAN7E,EAAM,IAAAuC,EAAAwH,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAANhK,EAAMgK,GAAAnJ,UAAAmJ,GAEjC,OAAIvK,MAAQA,KAAKT,aAAeS,gBAAgBA,KAAKT,YAC1CS,KAAKyI,KAALvH,MAAAlB,KAAaO,GAIxBF,EAAWgK,EAAsB9J,GAIrC,OADA8J,EAAmBrL,UAAUO,YAAc8K,EACpCA,EAgBKG,GAChBzF,EAAaqF,GAAQpL,UAAWuJ,IAChCxD,EAAaqF,GAASjB,IAEPiB,UCvPFK,GAAM/K,KAAO+K,KAAO/K,KAAO+K,IAAIzL,UAAU4E,GAAkBlE,KAAO+K,IAAMC,GAG9E,SAASA,MAIhBlI,EAAuBkI,GAAQ1L,UAAT6H,IAClBtH,aAAelB,MAAOqM,GAASxI,cAAc,GAC7CiF,GACIlJ,IADD,WAMK,OAJAsE,EAAqBvC,KAAM,KAAO3B,OAC9BsE,QACAoE,aAEG/G,KAAKmH,IAGpBlJ,KACII,MADC,SACKM,GACF,OAAOqB,KAAKmH,EAAEJ,OAAO9D,EAAajD,KAAKmH,EAAExE,KAAMhE,MAGvDoH,KACI1H,MADC,SACKM,EAAKN,GAKP,OAJwC,IAApC4E,EAAajD,KAAKmH,EAAExE,KAAMhE,KAC1BqB,KAAKmH,EAAExE,KAAK1B,KAAKtC,GACjBqB,KAAKmH,EAAEJ,OAAO9F,KAAK5C,IAEhB2B,OAGfmG,KACI9H,MADC,SACKM,GAAO,OAA2C,IAApCsE,EAAajD,KAAKmH,EAAExE,KAAMhE,KAElD8I,MACIxJ,IADE,WACM,OAAO+B,KAAKmH,EAAExE,KAAKyC,SAE/BsC,OACIrJ,MADG,WAEC8E,EAAYnD,KAAKmH,EAAExE,KAAM,GACzBQ,EAAYnD,KAAKmH,EAAEJ,OAAQ,KAGnCb,QACI7H,MADI,SACEM,GACF,IAAMqI,EAAM/D,EAAajD,KAAKmH,EAAExE,KAAMhE,GACtC,OAAa,IAATqI,IACA7D,EAAYnD,KAAKmH,EAAExE,KAAMqE,EAAK,GAC9B7D,EAAYnD,KAAKmH,EAAEJ,OAAQC,EAAK,IACzB,KAKnBrE,MACItE,MADE,WAEE,OAAO,IAAIyI,GAAa9G,KAAKmH,EAAExE,QAGvCoE,QACI1I,MADI,WAEA,OAAO,IAAIyI,GAAa9G,KAAKmH,EAAEJ,UAGvCY,SACItJ,MADK,WAED,OAAO,IAAIyI,GAAa9G,KAAKmH,EAAExE,KAAM3C,KAAKmH,EAAEJ,UAGpD/D,SACI3E,MADK,SACCuJ,EAAIC,GAAS,IAAAwB,EAAArJ,KACfA,KAAKmH,EAAExE,KAAKK,QAAQ,SAACwE,EAAMpK,GAAP,OAAawK,EAAGrK,KAAKsK,EAASwB,EAAKlC,EAAEJ,OAAO3J,GAAIoK,QAG3E5D,GACGvF,MADc,WAEV,OAAO2B,KAAK2H,cCnExB,IAAMgD,GAAwB1G,EACxB2G,GAAwB9K,EACxB+K,GAAwBC,QAAQ9L,UAChC+L,GAAwB,IAAIN,GAC9B9E,GAAU,EAgBDqF,GAAqB,cACrB5C,GAAqBhC,EAAU1H,SAC/BuM,GAAI,KAAAC,OAAuBrK,EAAK+E,MAA5B,KAAAsF,OAAuCrF,EAAKC,SAAShF,SAAS,IAAIqK,QAAQ,cAAe,KAE7FC,GAAqBhJ,EACrBiJ,GAAqBhJ,EACrBiJ,GAAqBlJ,EAAiByI,GAAkBS,aACxDC,GAAqBpJ,EAAawI,GAASY,cAAeZ,IAC1Da,GCzCN,SAA2BC,GAC9B,IAAMC,EAAmB5K,EAAS2K,GAClC,MAA4B,iCAArBC,GACmB,gCAArBA,KAAwDD,EAAIE,SDuCxDC,GAAqBlI,EAS3B,SAASmI,GAAkBC,GAA4B,IAAlBnO,EAAkByD,UAAAgE,OAAA,GAAAhE,UAAA,KAAA6E,EAAA7E,UAAA,GAAX,UAG/C,GAFA0K,EAAWA,EAASC,OAEhBhB,GAAc5E,IAAI2F,GAClB,OAAOf,GAAc9M,IAAI6N,GAG7B,IAAME,EAAK,IAAIpB,GAAS,QAAb,+FAAAM,OAIQY,EAJR,uCAAAZ,OAOAY,EAPA,qCAAAZ,OASavN,EATb,KAAAuN,OASqBvF,KATrB,QAYX,OADAoF,GAAchF,IAAI+F,EAAUE,GACrBA,EASJ,SAASC,GAAiBnH,GAI7B,IAHA,IAAMoH,KACA3G,EAAQT,EAAKqH,WAAW/G,OAEtBhI,EAAI,EAAGA,EAAImI,EAAOnI,IACtB8O,EAAUjL,KAAK6D,EAAKqH,WAAW3E,KAAKpK,GAAGO,MAG3C,OAAOuO,EElFIE,OAHR,SAAiBC,EAAQC,GAC5B,OAAOxJ,EAAM9D,UAAUsE,MAAM/F,KAAK8O,EAAOE,iBAAiBD,KCH1D3G,GAAU,EAEV6G,GAAU,SAASC,EAAKhF,GACpB,IAAItI,EAAI,YAAcsN,EACtB,OAAOtN,EAAEuN,OAAOvN,EAAEiG,OAAOqC,IAG7BkF,GAAe,WACX,IAAIvP,EAAGwP,EAAQ,EACf,IAAKxP,KAAKJ,EACN4P,IAEJ,OAAOA,EALI,GAQfC,GACWL,IACFM,UAAUC,UAAU3H,OAAS0H,UAAUE,UAAU5H,QAAQtE,SAAS,IAAM6L,GAAY7L,SAAS,IAC9F,GAKRmM,GAAOnP,EAAOY,QACdwO,SAAU,WACN,IACIC,GAAe,IAAItM,GAAOuM,UAAWtM,SA3BnC,IA4BFuM,EAAcb,IAAK7G,MAAW7E,SA5B5B,IA4B4C,GAC9CgF,EAAc,WAAWqF,QAAQ,OAAQ,WAGrC,OADsB,GAAdtF,EAAKC,SAAY,GAChBhF,SAAS,MAG1B,MAjCM,IAiCWqM,EAAYE,EAAcR,GAAc/G,KC3CjE,SAAAwH,GAAAC,EAAAC,GACA,QAAApQ,EAAA,EAAiBA,EAAAoQ,EAAApI,OAAkBhI,IAAA,CACnC,IAAAqQ,EAAAD,EAAApQ,GACAqQ,EAAAzP,WAAAyP,EAAAzP,aAAA,EACAyP,EAAAvL,cAAA,EACA,UAAAuL,MAAAxL,UAAA,GACAnE,EAAAC,eAAAwP,EAAAE,EAAA9O,IAAA8O,IAIe,SAAAC,GAAApM,EAAAqM,EAAAC,GAGf,OAFAD,GAAAL,GAAAhM,EAAAtC,UAAA2O,GACAC,GAAAN,GAAAhM,EAAAsM,GACAtM,ECXe,SAASuM,GAAIN,EAAAxO,EAAA+O,GAiB5B,OAfID,GADJ,oBAAApN,iBAAAxC,IACQwC,QAAAxC,IAEA,SAAAsP,EAAAxO,EAAA+O,GACR,IAAAC,ECNe,SAAAjP,EAAAC,GACf,MAAAjB,EAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAEA,QADAD,EAAa8C,EAAc9C,MAI3B,OAAAA,EDAiBkP,CAAaT,EAAAxO,GAC9B,GAAAgP,EAAA,CACA,IAAAE,EAAAnQ,EAAAoQ,yBAAAH,EAAAhP,GAEA,OAAAkP,EAAAhQ,IACAgQ,EAAAhQ,IAAAV,KAAAuQ,GAGAG,EAAA5P,SAIakP,EAAAxO,EAAA+O,GAAAP,GEXN,SAASY,GAAgBC,EAASC,GAIrC,OAHIA,GAAiBA,EAAcC,YAAcD,EAAcC,WAAW7J,cACtE4J,EAAcC,WAAW7J,aAAa2J,EAASC,GAE5CD,ECLJ,SAASG,GAAeC,GAI3B,OAHIA,GAAaA,EAAUF,YACvBE,EAAUF,WAAWhD,YAAYkD,GAE9BA,ECIJ,IAAMC,GAAb,SAAAC,GAAA,SAAAD,IAAA,OAAApN,EAAArB,KAAAyO,GAAA/M,EAAA1B,KAAA4B,EAAA6M,GAAAvN,MAAAlB,KAAAoB,YAAA,OAAAU,EAAA2M,EAAiCrE,IAAjCsD,GAAAe,IAAA9P,IAAA,OAAAN,MAAA,SACSsQ,EAAW7J,EAAM8J,GAClB5O,KAAK6O,YAAcD,EACnB5O,KAAK8O,GAAK9O,KAAK+O,WAAaJ,EAC5B3O,KAAKgP,GAAKhP,KAAKiP,MAAQnK,KAJ/BnG,IAAA,UAAAN,MAAA,WA8BQ,IAAM6Q,EAAQ9G,GAAQnK,IAAI+B,MACtBkP,IACIA,EAAMC,SAAWD,EAAMC,QAAQC,iBAC/BF,EAAMC,QAAQC,kBAEdF,EAAM5K,OACN4K,EAAM5K,KAAO,OAGrBuJ,GAAAjM,EAAA6M,EAAAzP,WAAA,UAAAgB,MAAAzC,KAAAyC,MACAoI,GAAQlC,OAAOlG,SAxCvBrB,IAAA,SAAAN,MAAA,SAiDWiG,GACHtE,KAAK8O,GAAGO,OAAOrP,KAAMA,KAAKgP,GAAI1K,MAlDtC3F,IAAA,SAAAN,MAAA,gBAAAoQ,EAAA,GCMaa,GAAb,SAAAZ,GAAA,SAAAY,IAAA,OAAAjO,EAAArB,KAAAsP,GAAA5N,EAAA1B,KAAA4B,EAAA0N,GAAApO,MAAAlB,KAAAoB,YAAA,OAAAU,EAAAwN,EAA+BlF,IAA/BsD,GAAA4B,IAAA3Q,IAAA,SAAAN,MAAA,SAiCWkR,EAASzK,EAAMR,GAAM,IAAA+E,EAAArJ,KACpBkP,EAAQ9G,GAAQnK,IAAIsR,GAEnBL,IAYDA,GACI5K,KAAY,KACZjG,MAAY,GACZmR,UAAY,EACZL,QAAY,kBAAM9F,EAAKgG,OAAOE,EAASzK,EAAMoK,EAAM5K,QAGvD8D,GAAQrC,IAAIwJ,EAASL,IAIrBA,EAAM5K,OAASA,IAGX4K,EAAMC,QAAQC,iBACdF,EAAMC,QAAQC,kBAElBF,EAAM5K,KAAOA,GAGjBtE,KAAKyP,OAAOF,MApEpB5Q,IAAA,SAAAN,MAAA,SA6EWkR,GAIH,IAAIA,EAAQ/G,YAAZ,CAIA,IAAMkH,EAAetH,GAAQnK,IAAIsR,GAEjC,GAAIG,EAAc,CACd,IAAIC,EAAW,GAEf,IACIA,EAAW3P,KAAK4P,kBAAkBF,EAAapL,UAG3CiL,EAAQE,QACRF,EAAQE,OAAOE,GAGvB,MAAM1P,GACF2L,GAAS3L,GAGTyP,EAAarR,QAAUsR,IACvBD,EAAarR,MAAQsR,QAvGrChR,IAAA,YAAAN,MAAA,SAkHcyG,GACF9E,KAAK6P,OAA2B,IAAlB/K,EAAKgL,UACnBlL,EAAgBE,EAAM9E,KAAK6P,UApHvClR,IAAA,iBAAAN,MAAA,SAgImByG,EAAM8J,GAEjB,OADA5O,KAAK+P,UAAUjL,GACR,IAAI9E,KAAKT,YAAYyQ,uBAAuBhQ,KAAM8E,EAAM8J,QAlIvEjQ,IAAA,MAAAN,MAAA,WAU0B,MAAO,MAVjCM,IAAA,UAAAN,MAAA,WAgBuB,OAAO,MAhB9BiR,EAAA,MAAaA,4BAwBuBb,IA6GrBa,UClJTW,GAAY,IAAIxF,GAWf,SAASyF,GAAKC,GAA0C,IAApCvB,EAAoCxN,UAAAgE,OAAA,GAAAhE,UAAA,KAAA6E,EAAA7E,UAAA,GAAvB8O,GAAKtB,eAEnCwB,EADe9N,EAAS6N,GACEA,EAAOA,EAAKE,UAgB5C,OAdKC,GAAYF,IACbH,GAAUlK,IACNqK,EACA,IAAIG,GAASJ,EAAMvB,IAWpBqB,GAAUhS,IAAImS,GAuBzB,SAASE,GAAYH,GACjB,OAAOF,GAAU9J,IAAIgK,GAfzBD,GAAKtB,WAAa,KAOlBsB,GAAK/J,IAAMmK,GChDJ,IAAME,GAAb,WAOI,SAAAA,EAAYC,EAASC,GAA2B,IAAjBC,EAAiBvP,UAAAgE,OAAA,GAAAhE,UAAA,KAAA6E,EAAA7E,UAAA,GAAJ,GAAIC,EAAArB,KAAAwQ,GAC5CxQ,KAAK4Q,MAAQH,EACbzQ,KAAK6Q,UAAYH,EACjB1Q,KAAK8Q,YAAczN,EAAWoN,EAAQM,WAAY,GAClD/Q,KAAKgR,eAAiBL,EAX9B,OAAAjD,GAAA8C,IAAA7R,IAAA,UAAAN,MAAA,WAkBc,IAAAgL,EAAArJ,KACNA,KAAK8Q,YAAY9N,QAAQ,SAAAiO,GAAO,OAAI5H,EAAKuH,MAAMpM,YAAYyM,QAnBnEtS,IAAA,UAAAN,MAAA,WA2BQ,GADA2B,KAAKkR,UACDlR,KAAK6Q,UAAW,CAChB,IAAK,IAAIzT,EAAI,EAAGkB,EAAI0B,KAAK6Q,UAAUzL,OAAQhI,EAAIkB,EAAGlB,IAC9C4C,KAAK6Q,UAAUzT,GAAGsL,UAEtB1I,KAAK6Q,UAAUzL,OAAS,MA/BpCzG,IAAA,UAAAN,MAAA,SAuCYiG,GACJ,IAAK,IAAIlH,EAAI,EAAGkB,EAAI0B,KAAK6Q,UAAUzL,OAAQhI,EAAIkB,EAAGlB,IAC9C4C,KAAK6Q,UAAUzT,GAAGiS,OAAO/K,OAzCrCkM,EAAA,GCeO,SAASnB,GAAOc,EAAM7L,EAAMsK,GAC/B,IAAMuC,EAAehB,aAAgBI,GAAWJ,EAAOD,GAAKC,EAAMvB,GAC5D1J,EAAWjB,EAASmN,WAAWD,EAAa1F,IAAIE,SAAS,GAQ/D,OANAzG,EAAS8F,IAAsB,IAAIwF,GAC/BtL,EACAmM,GAAgCnM,EAAUiM,EAAaN,UAAWM,EAAatC,aAC/EsC,EAAaG,IAEjBpM,EAAS8F,IAAoBuG,QAAQjN,GAC9BY,EAGImK,ICZTmC,GAAK,eACLC,GAAa,SAAA3M,GAAI,QAAMA,EAAKwJ,YAE5BoD,2FAA+BjD,uCACnB,QAAAkD,EAAAxM,EAAA/D,UAAAgE,OAAN7E,EAAM,IAAAuC,EAAAqC,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAN/E,EAAM+E,GAAAlE,UAAAkE,IACVqM,EAAA9D,GAAAjM,EAAA8P,EAAA1S,WAAA,OAAAgB,OAAAzC,KAAA2D,MAAAyQ,GAAA3R,MAAAkL,OAAc3K,IAEd,IAAIuE,EAAO9E,KAAKiP,MAOM,IAAlBnK,EAAKgL,UAAkBhL,EAAK8M,YAAc3G,KAC1CjL,KAAK6R,gBAAkB/M,EACvB9E,KAAK6R,gBAAgBvN,KAAOkN,GAC5BxR,KAAKiP,MAAQd,GAAgB9J,EAAe,IAAKrE,KAAK6R,iBACtDtD,GAAevO,KAAK6R,kBAInB7R,KAAK6R,kBACN7R,KAAK6R,gBAAkBtG,GAAciG,KAGzCxR,KAAK8R,eAAiB,KACtB9R,KAAK+R,UAAY,KACjB/R,KAAKgS,cAAgB,oCAGlBrC,GAEH,G5BrBgC,SAAAtQ,GAAG,MAAsB,kBAAlByB,EAASzB,G4BqB5C4S,CAAOtC,I5BpBqB,SAAAtQ,GAAG,MAAsB,uBAAlByB,EAASzB,G4BoBxB6S,CAAYvC,GAGhC,OAFA3P,KAAK0H,aACL1H,KAAKmS,iBAKT,GAAIxC,aAAoBY,GAAU,CAC9B,IAAMjM,EAAO8D,GAAQnK,IAAI+B,MAAMsE,KAC/B,OAAItE,KAAK+R,WAAa/R,KAAK+R,UAAUT,KAAO3B,EAAS2B,QACjDtR,KAAKgS,cAAcI,YAAYb,QAAQjN,IAI3CtE,KAAK0H,QACL1H,KAAKmS,iBACLnS,KAAK+R,UAAYpC,EACjB3P,KAAKgS,cAAgB3C,GAAOM,EAAUrL,EAAMtE,KAAK6O,kBACjDV,GAAgBnO,KAAKgS,cAAehS,KAAK6R,kBAK7C,GAAIlC,aAAoBxF,KAAM,CAE1B,GAAInK,KAAKqS,kBAAkB1C,GACvB,OAOJ,OAJA3P,KAAK0H,QACL1H,KAAKmS,iBACLnS,KAAKsS,eAAe3C,QACpBxB,GAAgBwB,EAAU3P,KAAK6R,iBAK9BJ,GAAWzR,KAAKiP,SACjBjP,KAAK0H,QACLyG,GAAgBnO,KAAKiP,MAAOjP,KAAK6R,iBACjCtD,GAAevO,KAAK6R,kBAEpBlC,IAAa3P,KAAKiP,MAAM2C,YACxB5R,KAAKiP,MAAM2C,UAAYjC,0CAIhBsB,GACPjR,KAAK8R,gBACL9R,KAAKuS,kBAETvS,KAAK8R,eAAiBjN,EAAcoM,GAAW5N,EAAW4N,EAAQF,WAAY,IAAOE,6CAIrF,GAAIjR,KAAK8R,eAAgB,CACrB,IAAK,IAAI1U,EAAI,EAAGkB,EAAI0B,KAAK8R,eAAe1M,OAAQhI,EAAIkB,EAAGlB,IACnDmR,GAAevO,KAAK8R,eAAe1U,IAEvC4C,KAAK8R,eAAiB,gDAIZb,GAAS,IAAA5H,EAAArJ,KACvB,OAAOA,KAAK8R,kBAGCjN,EAAcoM,IACgB,IAA/BjR,KAAK8R,eAAe1M,QACpBpF,KAAK8R,eAAe,KAAOb,GAE/B5N,EAAW4N,GAASuB,MAAM,SAACC,EAAYrV,GAAb,OAAmBqV,IAAepJ,EAAKyI,eAAe1U,oDAKpF4C,KAAKgS,gBACLhS,KAAKgS,cAAcI,YAAY1J,UAC/B1I,KAAKgS,cAAgBhS,KAAK+R,UAAY,sCAK1C/R,KAAKuS,kBACLvS,KAAK0S,sBACL1S,KAAKiP,MAAM2C,UAAY,4CAIlBH,GAAWzR,KAAK6R,mBACjB1D,GAAgBnO,KAAK6R,gBAAiB7R,KAAKiP,OAC3CV,GAAevO,KAAKiP,0CAKxBpB,GAAAjM,EAAA8P,EAAA1S,WAAA,UAAAgB,MAAAzC,KAAAyC,MACAA,KAAK0H,iBAIAiL,GAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAtR,EAAArB,KAAA2S,GAAAjR,EAAA1B,KAAA4B,EAAA+Q,GAAAzR,MAAAlB,KAAAoB,YAAA,OAAAU,EAAA6Q,EAAiCrD,IAAjC5B,GAAAiF,IAAAhU,IAAA,OAAAN,MAAA,SAGSwU,GACD7S,KAAK8S,WAAaD,EAClB7S,KAAK4P,kBAAoB/D,GAAkBgH,EAAWrB,QAL9DmB,EAAA,MAAaA,4BACuBjB,IAQrBiB,UC/ITI,GAAwB,WAC1B,IAAMC,E7BuE6BhP,EAAIiP,yB6BpEvC,OAFAD,EAAKxO,YAAYH,EAAe,SAChC2O,EAAKxO,YAAYH,EAAe,KACkB,IAA3C2O,EAAKE,WAAU,GAAMnC,WAAW3L,OAJb,GAMxB+N,GAAmC,WACrC,IAAMC,EAAMlP,EAAc,OACpBmP,EAAOhP,EAAe,QAE5B,OADA+O,EAAI5O,YAAY6O,IACRD,EAAIE,SAASD,GAJgB,GASnCE,GAAwBnI,GAAWoI,KAAKxU,UAAUyU,WAGlDC,GAAwB,IAAIC,OAnBA,aAoB5BC,GAAwB,IAAID,OApBA,YAoB+B,KAC3DE,GAAwB,SAAA/O,GAAI,OAAIA,EAAOA,EAAK8M,UAAY,IACxDkC,GAAwB,SAAAhP,GAAI,OAAI4O,GAAeK,KAAKF,GAAa/O,KAQ1DyL,GACT,SAAAA,EAAYJ,GAAuB,IAAjBvB,EAAiBxN,UAAAgE,OAAA,GAAAhE,UAAA,KAAA6E,EAAA7E,UAAA,MAAAC,EAAArB,KAAAuQ,GAC/BvQ,KAAKsR,GAAKrE,GAAKC,WAEV1B,GAAW2E,GAIZnQ,KAAKyL,IAAM0E,GAHXnQ,KAAKyL,IAAMvH,EAAc,YACzBlE,KAAKyL,IAAI4E,UAAYF,GAKzBnQ,KAAK6O,YAAcD,EAyBnB5O,KAAK6Q,UAAYmD,GAAchU,KAAKyL,IAAIE,QAASiD,IAe1C2B,MAWR,SAASyD,GAAcvI,EAAKmD,GAe/B,IAGIvC,EAHEqE,EAAoB,IAAIjG,IACxBwJ,EAAoB,IAAIxJ,IACxByJ,EAAoB,IAAI7M,IAOxB8M,EAAoB,SAAA7E,GAMtB,IALA,IAAI8E,EACAC,EACAC,EACAC,EAAiBlI,EAEb+H,EAAW9E,EAAUnJ,IAAIkG,IAc7B,GAbAgI,EAAY3P,EAAa2H,EAAQ+H,IACjCE,EAAchF,EAAUkF,aAGpBD,EAAiBhJ,GAAc,KAGnCkJ,GAAuBR,EAAeM,GAAgBtT,KAClDyT,GAAyBpF,EAAW8E,EAAUC,IAGlDzP,EAAgByH,EAAQ+H,GAEpBE,EAAa,CACbJ,EAAgB3M,IAAI8E,GAKpBA,EAAOiC,WAAW7J,aAAa8P,EAAgBlI,GAC/C,IAAMsI,EAAUzQ,EAAc,OAC9ByQ,EAAQnQ,YAAY6H,GACpBkI,EAAejQ,KAAOqQ,EAAQtE,UAGtC,OAAOiE,GAgHX,OAiJJ,SAAsB7I,GAClB,OAAQA,GACHP,OAAOkB,GAAQX,EAAK,MACpBnC,OAAOsL,OACPC,OAAOC,IAjNZC,CAAatJ,GAAKzI,QAAQ,SAAA8B,GACtB,IAAIkQ,GAAO,EAEX,GAAId,EAAgBzM,KAAM,KAAAwN,GAAA,EAAAC,GAAA,EAAAC,EAAAlP,EAAA,IACtB,QAAAmP,EAAAC,EAA0BnB,EAAgBnN,SAA1C5I,OAAAmB,cAAA2V,GAAAG,EAAAC,EAAApO,QAAAC,MAAA+N,GAAA,EAAoD,KAA3CK,EAA2CF,EAAA/W,MAUhD,GATI8U,IAAqD,IAAlBrO,EAAKgL,SACU,GAA9CwF,EAAcC,wBAAwBzQ,KACtCkQ,GAAO,GAGNM,EAAchC,SAASxO,KAC5BkQ,GAAO,GAGPA,EACA,OAZc,MAAAQ,GAAAN,GAAA,EAAAC,EAAAK,EAAA,YAAAP,GAAA,MAAAI,EAAAI,QAAAJ,EAAAI,SAAA,WAAAP,EAAA,MAAAC,IAiB1B9I,EAASvH,EAEJkQ,IAEqB,IAAlBlQ,EAAKgL,SACLlB,EAAWhF,KAAKuK,GAGO,IAAlBrP,EAAKgL,UA1EE,SAAA4F,GACpB,GAAI5B,GAAS4B,GAAQ,CACjB9B,GAAa+B,UAAY,EAIzB,IAHA,IAAI/D,EAAYiC,GAAa6B,GACzBE,EAAoBhC,GAAaiC,KAAKjE,GAEnCgE,GAEH,GAAIhE,IAAc,KAAOgE,EAAkB,GAAK,KAC5CnB,GAAuBR,EAAeyB,GAAOzU,KAAK6U,GAAuBnD,GAAaiD,EAAkB,KACxGA,EAAoB,SAEnB,CACD,IAAIG,EAAgBxC,GAAcmC,EAAOE,EAAkBI,OAIvDjD,IACAkD,GAAiBP,GAQrBA,EAAQnC,GAAcwC,EAAeH,EAAkB,GAAGxQ,QAC1D,IAAM8Q,EAAmBH,EAAczH,WAAW7J,aAAa8G,GAAcN,IAAO8K,GACpFA,EAAczH,WAAWhD,YAAYyK,GAErCtB,GAAuBR,EAAeiC,GAAkBjV,KAAK6U,GAAuBnD,GAAaiD,EAAkB,KAInHhC,GAAa+B,UAAY,IACzBC,EAAoBhC,GAAaiC,KAAKhC,GAAa6B,MAEzB3C,IACtBkD,GAAiBP,KAqCzBS,CAAgBrR,MAK5BuH,EAAS,KAIT4H,EAAcjR,QAAQ,SAACoT,EAAmBC,GACtC,GAAI5K,IAAQ4K,EAAZ,CASA,IAJA,IAAMC,KACFC,EAAUF,EACVG,EAAUD,EAAQjI,WAEfiI,IAAY9K,GACf6K,EAAKG,QAAQH,EAAKpT,QAAQ3F,KAAKiZ,EAAOzF,WAAYwF,IAElDC,GADAD,EAAUA,EAAQjI,YACAA,WAGtBoC,EAAS3K,IAAIuQ,EAAMF,QAdf1F,EAAS3K,OAAQqQ,KAiBzBnC,EAAcvM,QACdwM,EAAgBxM,QAETgJ,EAaJ,SAASW,GAAgC2B,EAAMtC,EAAUgG,GAC5D,IAAMxR,KAcN,OAZAwL,EAAS1N,QAAQ,SAAC2T,EAAqBL,GACnC,IAAMxR,EAcd,SAAmBpI,EAAM4Z,GACrB,IAAKA,EAAKlR,OACN,OAAO1I,EAIX,OADAqG,EAAauT,EAAM,SAAAN,GAAK,OAAItZ,EAAOA,EAAKqU,WAAWiF,KAC5CtZ,EApBUka,CAAU5D,EAAMsD,GAC7B,GAAKxR,EAKL,IAAK,IAAI1H,EAAE,EAAGkB,EAAEqY,EAAoBvR,OAAQhI,EAAIkB,EAAGlB,IAC/C8H,EAASjE,KAAK0V,EAAoBvZ,GAAGyZ,eAAe/R,EAAM4R,SAL1D9K,GAAS,IAAIkL,EAAJ,mDASV5R,EAYX,SAASuP,GAAuBsC,EAAKjS,GAIjC,OAHKiS,EAAI5Q,IAAIrB,IACTiS,EAAIhR,IAAIjB,MAELiS,EAAI9Y,IAAI6G,GAanB,SAASgR,GAAuBxG,EAAWuD,GACvCA,EAAYA,EAAU9G,OAEtB,IAAIiL,EAAqB5O,GAAQnK,IAAIqR,GAWrC,OATK0H,IACDA,KACA5O,GAAQrC,IAAIuJ,EAAW0H,IAGtBA,EAAmBnE,KACpBmE,EAAmBnE,GAAa,IAAIvD,EAAUuD,IAG3CmE,EAAmBnE,GAG9B,SAAS6B,GAA0BpF,EAAW8E,EAAUC,GACpDA,EAAYA,EAAUtI,OAEtB,IAAMkL,EAAkB,GAAA/L,OAASkJ,EAAT,KAAAlJ,OAAsBD,GAAtB,KAAAC,OAAgCmJ,GACpD2C,EAA0B5O,GAAQnK,IAAIqR,GAW1C,OATK0H,IACDA,KACA5O,GAAQrC,IAAIuJ,EAAW0H,IAGtBA,EAAmBC,KACpBD,EAAmBC,GAAsB,IAAI3H,EAAU8E,EAAUC,IAG9D2C,EAAmBC,GAS9B,SAASnC,GAA2BrJ,GAChC,OAAwB,IAAjBA,EAAIqE,UAAoC,IAAjBrE,EAAIqE,UAAkBrE,EAAIU,WAAW/G,OAAS,EAUhF,SAASwP,GAAasC,EAAWzL,GAE7B,GADAyL,EAAUjW,KAAKwK,GACXA,EAAI0L,gBAEJ,IADA1L,EAAMA,EAAI2L,WACJ3L,GAAM,CACR,IAAM4L,EAAc5L,EAAI4L,YAGH,IAAjB5L,EAAIqE,UAAoBrE,EAAImG,WAAa8B,GAAeK,KAAKF,GAAapI,KAC1EyL,EAAUjW,KAAKwK,GAGfsH,IACAkD,GAAiBxK,GAGrBA,EAAM4L,EAGd,OAAOH,EAGX,SAASjB,GAAiBnR,GACA,IAAlBA,EAAKgL,UAAkBiD,KAAyBjO,EAAK8M,YACrD9M,EAAKwJ,WAAW7J,aAAa8G,GAAc,IAAKzG,GAChDA,EAAKwJ,WAAWhD,YAAYxG,ICtY7B,IAAMsN,GAAchI,GAAQhB,QAM/BkO,KAAM,KAEN7O,KARsC,SAQjC0H,EAAM7L,GACP,IAAMiT,EAAUvX,KAAKkJ,aACfgG,GACFiB,OACA7L,OACAsK,WAAY2I,EAAQ3I,WAAWtL,MAAM,IAGzC8E,GAAQrC,IAAI/F,KAAMkP,GAEd5M,EAAS6N,IACTnQ,KAAKsX,KAAOjI,GAAOc,EAAM7L,EAAM4K,EAAMN,YACrCM,EAAMwB,SAAW1Q,KAAKsX,KAAKzG,YAE3B7Q,KAAKsX,KAAOnH,EACZjB,EAAMwB,SAAWW,GAAgClB,EAAM6D,GAAc7D,EAAMjB,EAAMN,YAAaM,EAAMN,YAChGtK,GACAtE,KAAKuR,QAAQjN,IAIrBtE,KAAK8I,UAAU,WACX/F,EAAamM,EAAMwB,SAAU,SAAA8G,GAAO,OAAIA,EAAQ9O,mBAEzCwG,EAAM5K,YACN4K,EAAMN,kBACNM,EAAMwB,SAEb6G,EAAQzN,mBAAmBoF,EAAO9G,GAAlCmP,MAURhG,QA9CsC,SA8C9BjN,GACJ,IAAMoM,EAAWtI,GAAQnK,IAAI+B,MAAM0Q,SACnC3N,EAAa2N,EAAU,SAAA8G,GAAO,OAAIA,EAAQnI,OAAO/K,QAWzD8N,GAAYxD,cCzEZ,IAEa6I,GAAb,SAAA7E,GAAA,SAAA6E,IAAA,OAAApW,EAAArB,KAAAyX,GAAA/V,EAAA1B,KAAA4B,EAAA6V,GAAAvW,MAAAlB,KAAAoB,YAAA,OAAAU,EAAA2V,EAAmCnI,IAAnC5B,GAAA+J,IAAA9Y,IAAA,OAAAN,MAAA,SAgCSqZ,EAAMrD,GACPrU,KAAK6P,MAAqB6H,EAC1B1X,KAAK4P,kBAAqB/D,GAAmBwI,GAAa,GAAK,QAC/DrU,KAAK2X,UAAsB,IAAIhE,OAAO3T,KAAKT,YAAYqY,UAAW/B,KAAK6B,GAAM,QAnCrF/Y,IAAA,MAAAN,MAAA,SA0BeoN,GAAK,IAAApC,EAAArJ,KACR6X,EAAgB,GAEpB,OADA5L,GAAiBR,GAAK7B,KAAK,SAAA8N,GAAI,OAAIrO,EAAKuO,SAAS7D,KAAK2D,KAAUG,EAAgBH,KACzEG,MA7BfJ,EAAA,MAAaA,oHACqChJ,uCACnCkB,GACH,IAAMT,EAAQ9G,GAAQnK,IAAI+B,MACpB2X,EAAY3X,KAAK+O,WAAW4I,UAE9B3X,KAAK+O,WAAWxP,YAAYuY,QACxBnI,IAAaT,EAAM7Q,QACnB2B,KAAKiP,MAAM0I,GAAahI,GAIxBA,GAAYT,EAAM7Q,QAAUsR,EAC5BhL,EAAa3E,KAAKiP,MAAO0I,EAAWhI,GAE/BT,EAAM7Q,QAAUsR,GACrB/K,EAAgB5E,KAAKiP,MAAO0I,gBAhBnCF,cAFM,mBAENA,cAwBQ,GAeNA,UCnCAM,OANR,SAAqBC,EAAIC,GAC5B,SAAID,IAAMC,IACCD,EAAGE,UAAU5E,SAAS2E,ICGtBE,OANR,SAAqBH,EAAIC,GAC5B,IAAIG,EAAgBC,EAAOJ,GAAUlM,OAAOuM,MAAM,OAAOvB,IAAI,SAAAwB,GAAS,OAAIA,EAAUxM,SAChFiM,GAAMI,EAAchT,QACpBgT,EAAcpV,QAAQ,SAACiV,GAAD,OAAcD,EAAGE,UAAU3Q,IAAI0Q,MCD9CO,OAHR,SAAwBR,EAAIC,GAC/B,OAAOD,EAAGE,UAAUO,OAAOR,ICIlBS,GAAb,SAAA9F,GAAA,SAAA8F,IAAA,OAAArX,EAAArB,KAAA0Y,GAAAhX,EAAA1B,KAAA4B,EAAA8W,GAAAxX,MAAAlB,KAAAoB,YAAA,OAAAU,EAAA4W,EAAoCpJ,IAApC5B,GAAAgL,IAAA/Z,IAAA,OAAAN,MAAA,SAuBSqZ,EAAMrD,GACPrU,KAAK6P,MAAqB6H,EAC1B1X,KAAK4P,kBAAqB/D,GAAmBwI,GAAa,GAAK,cAzBvE1V,IAAA,MAAAN,MAAA,SAmBeoN,GACP,OAAOlH,EAAakH,EAtBV,mBAsBwC,OApB1DiN,EAAA,MAAaA,oHAC+DjK,uCAC7DkK,GAAY,IACA7T,EAAS9E,KAAhBiP,MACF2J,EAAaxQ,GAAQnK,IAAI+B,MAAM3B,UAErCP,EAAO6E,KAAKgW,GACPzN,OAAOpN,EAAO6E,KAAKiW,IACnB5V,QAAQ,SAAAuV,GACDI,EAAWJ,KAAeR,GAAYjT,EAAMyT,GAC5CJ,GAAYrT,EAAMyT,IAEZI,EAAWJ,IAAcR,GAAYjT,EAAMyT,IACjDC,GAAe1T,EAAMyT,eCvB9B,SAAAM,GAAAjW,EAAAxF,GACf,OCJe,SAAAwF,GACf,GAAAE,EAAAD,QAAAD,GAAA,OAAAA,EDGSkW,CAAclW,IEJR,SAAAA,EAAAxF,GACf,IAAA2b,KACA/J,GAAA,EACAF,GAAA,EACAkK,EAAA/S,EAEA,IACA,QAAAgT,EAAAC,EAAAtW,EAAAzE,OAAAmB,cAA6C0P,GAAAiK,EAAAC,EAAAjS,QAAAC,QAC7C6R,EAAA9X,KAAAgY,EAAA5a,QAEAjB,GAAA2b,EAAA3T,SAAAhI,GAH4E4R,GAAA,IAKzE,MAAAwG,GACH1G,GAAA,EACAkK,EAAAxD,EACG,QACH,IACAxG,GAAA,MAAAkK,EAAA,QAAAA,EAAA,SACK,QACL,GAAApK,EAAA,MAAAkK,GAIA,OAAAD,EFnBgCI,CAAoBvW,EAAAxF,IGJrC,WACf,UAAAmE,EAAA,wDHGgE6X,GIsBhE,IAAMC,GAAOlb,OAAO,wBAEdmb,GAAgB,OAChBC,GAAgB,SAAAC,GAAM,OAAIA,GAAUA,EAAOC,YAC3CC,GAAgB,SAAApV,GAAI,OAAIA,GAGxBqV,4NAIa,IAAIlP,8BAEJ,kBAAMpB,EAAK0F,WAAW6K,gBAAhBpY,IAAA6H,IAAsCjB,GAAQnK,IAARuD,IAAA6H,KAAkBhL,sBAN1CoQ,qCAQ9BE,EAAW7J,EAAM8J,GAClBf,GAAAjM,EAAA+X,EAAA3a,WAAA,OAAAgB,MAAAzC,KAAAyC,KAAW2O,EAAW7J,EAAM8J,GAC5B5O,KAAK6R,gBAAkBtG,GAAc,kBACrCvL,KAAK6Z,aA+Ub,SAA4B/U,GACxB,OAAOhC,EAAM9D,UAAUwT,MAAMjV,KAAKuH,EAAKwJ,WAAWyC,WAAY,SAAAvC,GAC1D,OAAOA,IAAc1J,GAAgC,IAAvB0J,EAAUsB,WAAmBtB,EAAUsL,YAAY/N,SAjV7DgO,CAAmB/Z,KAAKiP,OAG5CjP,KAAKga,cAAgB9J,GAAKpL,EAAKR,KAAMsK,GAChC5O,KAAKga,cAAcX,KAkRhC,SAA4BlI,GACxB,IAAKA,EAAakI,IAAO,CACrBlI,EAAakI,KACTY,SAAS,EACTC,OAAQR,IAEZ,IAAMS,EAAiBhJ,EAAa1F,IAAIE,QAAQyL,WAG5C+C,GACAA,EAAe5V,cACfA,EAAa4V,EAAgBb,MAE7BnI,EAAakI,IAAMY,SAAU,EAC7B9I,EAAakI,IAAMa,OAASrO,GAAkBnH,EAAayV,EAAgBb,IAAgB,YAC3F1U,EAAgBuV,EAAgBb,MAhShCc,CAAkBpa,KAAKga,eAG3B7L,GAAgBnO,KAAK6R,gBAAiB/M,GACtCwG,GAAYxG,EAAKwJ,WAAYxJ,kCAI1BuV,GACH,IAAMnL,EAAQ9G,GAAQnK,IAAI+B,MAEtBqa,IAAYnL,EAAM7Q,QAClB6Q,EAAM7Q,MAAQ,KAEV2B,KAAKsa,aAAalL,iBAClBpP,KAAKsa,aAAalL,mBAIrBiL,GAKLnL,EAAM7Q,MAAQgc,EA1CA,SAAAE,GAAI,OAAK1X,EAAQ0X,KAAUA,EAAKnV,QAAYiG,GAAakP,KAAU7X,EAAW6X,GAAMnV,OA4C9FoV,CAAYH,IAAYra,KAAKya,QAC7Bza,KAAK+O,WAAW2L,oBAAoB1a,KAAKya,QAASza,MAGlDA,KAAKsa,gBAVLta,KAAK+O,WAAW2L,oBAAoB1a,KAAKya,QAASza,wCAgBlDA,KAAKsa,aAAalL,iBAClBpP,KAAKsa,aAAalL,kBAEtBpP,KAAK2a,aAAajT,QAClB1H,KAAK+O,WAAW2L,oBAAoB1a,KAAKya,QAASza,MAClD6N,GAAAjM,EAAA+X,EAAA3a,WAAA,UAAAgB,MAAAzC,KAAAyC,eAsBK4a,GAAb,SAAAhI,GAAA,SAAAgI,IAAA,OAAAvZ,EAAArB,KAAA4a,GAAAlZ,EAAA1B,KAAA4B,EAAAgZ,GAAA1Z,MAAAlB,KAAAoB,YAAA,OAAAU,EAAA8Y,EAAmCtL,IAAnC5B,GAAAkN,IAAAjc,IAAA,OAAAN,MAAA,SASSqZ,EAAMrD,GAAW,IAAAwG,EAAAhC,GAwP1B,SAA6BxE,GACzB,IAAIyG,EAAU,gCAAgCjF,KAAKxB,GACnD,GAAIyG,EAGA,OAFAA,EAAUA,EAAQxX,MAAM,IAChB,GAAKwX,EAAQ,GAAGxC,MAAM,KAAKvB,IAAI,SAAAgE,GAAO,OAAI1C,EAAO0C,GAAShP,SAC3D+O,EAEX,SA9PsCE,EAAqB3G,GAAa,IAAItI,QADtD,GACVkP,EADUJ,EAAA,GACIK,EADJL,EAAA,GAElB7a,KAAK6P,MAAqB6H,EAC1B1X,KAAKmb,cAAqBF,EAC1Bjb,KAAK4P,kBAAqB/D,GAAmBqP,GAAW,GAAK,WAbrEvc,IAAA,sBAAAN,MAAA,SAsBwBoc,EAASlL,GACzB,GAAKkL,GAAYA,EAAQrV,OAMzB,GAFAqV,EAAUA,EAAQrX,OAAO,GAErBmM,EAAQsK,aAAc,CACtB,IAAMuB,EAAY7L,EAAQsC,gBAAgBvD,WAC1C8M,EAAUtB,YAAc,GACxBsB,EAAU5W,YAAY+K,EAAQsC,iBAC9B5J,EAAW,WACPlF,EAAa0X,EAAS,SAAAjB,GAAM,OAAIA,EAAOC,oBAI3C1W,EAAa0X,EAAS,SAAAjB,GAAM,OAAIA,EAAOC,gBAtCnD9a,IAAA,sBAAAN,MAAA,SAkEwB0I,EAAQsU,GACxB,OAAOrb,KAAKmb,cAAc7R,OACtB,SAACgS,EAASP,GAEN,OADAO,EAAQP,GAAWhU,EAAOtB,QACnB6V,GAEXD,UAxEZ1c,IAAA,kBAAAN,MAAA,SAmFoBkR,EAASgM,GAErB,IAEIC,EAFEtM,EAAQ9G,GAAQnK,IAAIsR,GACtBkM,EAA0B5Y,EAAQ0Y,GAItC,GAAIE,EACAA,GAAc,EACdD,EAAoBD,MAEnB,KAAIlQ,GAAakQ,GAGlB,OAFAC,EAAoB9Y,EAAW6Y,GAYnC,IAPA,IAAMG,EAAwBnM,EAAQkL,QAChCkB,EAAwB,IAAIlR,GAC5BmR,EAAwBJ,EAAkBpW,OAnBlByW,EAoBAtM,EAAQyK,cAAcX,IAA5CY,EApBsB4B,EAoBtB5B,QAASC,EApBa2B,EAoBb3B,OAIR9c,EAAI,EAAGA,EAAIwe,EAAYxe,IAAK,CACjC,IAAIke,GACAQ,MAAO5M,EAAM5K,KAAKwX,OAAS5M,EAAM5K,KACjCyX,QAAS7M,EAAM5K,KACf0X,MAAO9M,EAAM5K,KAAK0X,OAAS9M,EAAM5K,MAKjCmX,EACAzb,KAAKic,qBAAsBT,EAAkBpe,GAAIA,GAAKke,GAGtDtb,KAAKic,qBAAsBV,EAASC,EAAkBpe,IAAMoe,EAAkBpe,GAAIA,GAAKke,GAG3F,IAAMY,EAAShC,EACXD,EACMqB,EACAG,EACID,EAAkBpe,GAClBme,EAASC,EAAkBpe,KAKzC,GAAIse,EAAete,IAAMse,EAAete,GAAG+e,MAAMD,SAAWA,EACxDR,EAAete,GAAG4N,IAAoBuG,QAAQ+J,OADlD,CAOII,EAAete,KACfse,EAAete,GAAG4N,IAAoBkG,UACtCyK,EAAoB5V,IAChB2V,EAAete,GAAG+e,MAAMD,OACxBR,EAAete,IAEnBse,EAAete,GAAK,MAMxB,IAAIoc,EAASjK,EAAQoL,aAAa1c,IAAIie,GActC,GAZI1C,EACyB,OAArBA,EAAO2C,MAAMC,KAAgBV,EAAelC,EAAO2C,MAAMC,OAAS5C,IAClEkC,EAAelC,EAAO2C,MAAMC,KAAO,OAGvC5C,EAASmC,EAAoB1d,IAAIie,KAG7BP,EAAoBzV,OAAOgW,GAI/B1C,EACAkC,EAAete,GAAKoc,EACpBA,EAAO2C,MAAMC,IAAMhf,EACnBse,EAAete,GAAG4N,IAAoBkG,UACtCmL,GAAiBX,EAAgBte,EAAGmS,EAAQsC,iBAC5C6J,EAAete,GAAG4N,IAAoBuG,QAAQ+J,OALlD,CAYA,GAAIK,EAAoBlU,KAAM,KAAA6U,EAAAzD,GACgB8C,EAAoBhU,UAAUV,OAAO5I,MADrD,GACnBke,EADmBD,EAAA,IAE1B9C,EAF0B8C,EAAA,IAGnBtR,IAAoBuG,QAAQ+J,GACnCK,EAAoBzV,OAAOqW,GAC3B/C,EAAO2C,MAAMD,OAASA,EACtB1C,EAAO2C,MAAMC,IAAMhf,OAEnBoc,EAASnK,GAAOE,EAAQyK,cAAesB,EAAS/L,EAAQV,cACjD4K,SAAW+C,GAClBhD,EAAOiD,SAAWlN,EAClBiK,EAAO2C,OAAWD,SAAQE,IAAKhf,GAGnCse,EAAete,GAAKoc,EACpBjK,EAAQoL,aAAa5U,IAAImW,EAAQ1C,GACjC6C,GAAiBX,EAAgBte,EAAGmS,EAAQsC,mBAI5C8J,EAAoBlU,OACpB1E,EAAa4Y,EAAoB5U,SAAUwS,IAC3CoC,EAAoBjU,SAIpBkU,EAAaF,EAAetW,QAC5BrC,EAAaI,EAAYuY,EAAgBE,GAAarC,SA7MlE5a,IAAA,MAAAN,MAAA,SAGeoN,GACP,OAAOlH,EAAakH,EAzFN,iBAyFoC,MAJ1D9M,IAAA,UAAAN,MAAA,WAOuB,OAAO,MAP9Buc,EAAA,GAuOA,SAASyB,GAAiBX,EAAgBgB,EAAaC,GACnD,IAAMnD,EAASkC,EAAegB,GAG9BlD,EAAOxO,IAAoBkG,UAGvBwK,EAAegB,EAAc,GAC7BvO,GAAgBqL,EAAQkC,EAAegB,EAAc,GAAG1R,IAAoB8F,YAAY,IAGxF3C,GAAgBqL,EAAQmD,GAIhC,SAASH,KAELxc,KAAKgL,IAAoBkG,UAErBlR,KAAKmc,MAAMD,QACXlc,KAAKyc,SAAS9B,aAAazU,OAAOlG,KAAKmc,MAAMD,QAGjDlc,KAAKgL,IAAoBtC,aA9PhBkS,4BACuBjB,IAiRrBiB,ICzXFgC,GAAb,SAAAhK,GAAA,SAAAgK,IAAA,OAAAvb,EAAArB,KAAA4c,GAAAlb,EAAA1B,KAAA4B,EAAAgb,GAAA1b,MAAAlB,KAAAoB,YAAA,OAAAU,EAAA8a,EAAmCtN,IAAnC5B,GAAAkP,IAAAje,IAAA,OAAAN,MAAA,SAeSqZ,EAAMrD,GACPrU,KAAK6P,MAAqB6H,EAC1B1X,KAAK4P,kBAAqB/D,GAAmBwI,GAAa,GAAK,aAjBvE1V,IAAA,MAAAN,MAAA,SAWeoN,GACP,OAAOlH,EAAakH,EAdV,iBAcwC,OAZ1DmR,EAAA,MAAaA,oHACqCnO,uCACnCkB,GACCA,IAAavH,GAAQnK,IAAI+B,MAAM3B,QAInC2B,KAAKiP,MAAMoB,UAAYV,aAcpBiN,ICfFC,GAAb,SAAAjK,GAAA,SAAAiK,IAAA,OAAAxb,EAAArB,KAAA6c,GAAAnb,EAAA1B,KAAA4B,EAAAib,GAAA3b,MAAAlB,KAAAoB,YAAA,OAAAU,EAAA+a,EAAiCvN,IAAjC5B,GAAAmP,IAAAle,IAAA,OAAAN,MAAA,SAoDSqZ,EAAMrD,GACPrU,KAAK6P,MAAqB6H,EAC1B1X,KAAK4P,kBAAqB/D,GAAmBwI,GAAa,GAAK,WAtDvE1V,IAAA,MAAAN,MAAA,SA8CeoN,GACP,OAAOlH,EAAakH,EAjDV,aAiDwC,MA/C1D9M,IAAA,UAAAN,MAAA,WAkDuB,OAAO,MAlD9Bwe,EAAA,MAAaA,4NAGU,mCAEGxT,EAAK4F,MAAM3K,mBAJamK,uCAM5B,QAAAkD,EAAArH,EAAAlJ,UAAAgE,OAAN7E,EAAM,IAAAuC,EAAAwH,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAANhK,EAAMgK,GAAAnJ,UAAAmJ,IACVoH,EAAA9D,GAAAjM,EAAAkb,EAAA9d,WAAA,OAAAgB,OAAAzC,KAAA2D,MAAAyQ,GAAA3R,MAAAkL,OAAc3K,IACdP,KAAK6R,gBAAkBtG,GAAc,gBACrC4C,GAAgBnO,KAAK6R,gBAAiB7R,KAAKiP,OAC3C3D,GAAYtL,KAAKiP,MAAMX,WAAYtO,KAAKiP,sCAErC8N,GACH,IAAM7N,EAAQ9G,GAAQnK,IAAI+B,MAGtBkP,EAAM7Q,QAAU0e,EAOhBA,IAAgB/c,KAAKgd,cACrBhd,KAAKgd,aAAe3N,GAAOrP,KAAKid,gBAAiB/N,EAAM5K,KAAMtE,KAAK6O,aAClEV,GAAgBnO,KAAKgd,aAAchd,KAAK6R,kBAChCkL,GACR/c,KAAKkd,WAVDld,KAAKgd,cACLhd,KAAKgd,aAAahS,IAAoBuG,QAAQrC,EAAM5K,yCAcxDtE,KAAKgd,eACLhd,KAAKgd,aAAahS,IAAoBkG,UACtClR,KAAKgd,aAAahS,IAAoBtC,UACtC1I,KAAKgd,aAAe,wCAKxBhd,KAAKkd,WACLrP,GAAAjM,EAAAkb,EAAA9d,WAAA,UAAAgB,MAAAzC,KAAAyC,gBCRGmd,OA5BR,SAA6B1R,EAAK2R,EAAOrU,EAAUsU,GACtD,IAAIC,EAAcF,EAAM9E,MAAM,OAC1BiF,KAmBJ,OAjBAD,EAAOta,QAAQ,SAAAwa,GACX/R,EAAIgS,iBAAiBD,EAAQzU,EAAUsU,GACvCE,EAAYC,IACR/E,OAAQ,kBAAMhN,EAAIiS,oBAAoBF,EAAQzU,EAAUsU,OAczDvf,EAAOY,QACVif,UAAWJ,EACX9E,OAAQ,WACJ6E,EAAOta,QAAQ,SAAAwa,GAAM,OAAID,EAAYC,GAAQ/E,eC7BnDmF,GAAwB,IAAIjK,OAAJ,IAAAzI,O9B6BI,SAAA2S,GAAG,OAAIxF,EAAOwF,GAAK1S,QAAQ,wBAAyB,Q8B7BxC2S,CADhB,QACA,SACxBC,GAAW,QACXC,IACFC,GAAM,QACNC,GAAM,MACNC,EAAM,MACNC,GAAM,SACNC,GAAM,QACNC,GAAM,KACNC,GAAM,OACNC,GAAM,OACNC,GAAM,SAEJC,GAAkB5gB,EAAOiJ,OAAOiX,IAEhCW,2FAA+BlQ,uCAEnB,QAAAkD,EAAAxM,EAAA/D,UAAAgE,OAAN7E,EAAM,IAAAuC,EAAAqC,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAN/E,EAAM+E,GAAAlE,UAAAkE,IACVqM,EAAA9D,GAAAjM,EAAA+c,EAAA3f,WAAA,OAAAgB,OAAAzC,KAAA2D,MAAAyQ,GAAA3R,MAAAkL,OAAc3K,IACdP,KAAK4e,4CAGGC,GAAO,IAAAC,EACmB9e,KAAK+O,WAAWgQ,MAA3CC,EADQF,EACRE,aAAcC,EADNH,EACMG,UACfC,EAAWL,EAAMM,MAKvB,KACInf,KAAK+O,WAAWqQ,SAChBP,aAAiBQ,gBAChBJ,EAAUC,IACVD,EAAUjB,GAAWkB,IAJ1B,CASA,IAEII,EACAC,EAHErQ,EAAQ9G,GAAQnK,IAAI+B,MAI1BkP,EAAM5K,KAAKkb,IAAMX,EAGjB,IACIS,EAAatf,KAAK+O,WAAWa,kBAAkBrS,KAAKyC,KAAKiP,MAAOC,EAAM5K,MAE1E,MAAMrE,GAEF,YADA2L,GAAS3L,GA2Bb,cAvBOiP,EAAM5K,KAAKkb,IAEd,mBAAsBF,EACtBC,EAAcD,EAAW/hB,KAAKyC,KAAKiP,MAAO4P,GAErCS,GAAc,aAAeA,EAAWG,cAE7CF,EAAcD,EAAWG,YAAYZ,IAIrCG,IACIC,EAAUS,MACV1f,KAAKkd,WAEL+B,EAAUU,MACVd,EAAMe,kBAENX,EAAUY,SACVhB,EAAMiB,kBAIPP,mCAIPvf,KAAK+f,YAAc5C,GACfnd,KAAKiP,MACLjP,KAAK+O,WAAWiR,WAChBhgB,yCAKAA,KAAK+f,cACL/f,KAAK+f,YAAYtH,SACjBzY,KAAK+f,YAAc,wCAKvB/f,KAAKkd,WACLrP,GAAAjM,EAAA+c,EAAA3f,WAAA,UAAAgB,MAAAzC,KAAAyC,eAIKigB,GAAb,SAAArN,GAAA,SAAAqN,IAAA,OAAA5e,EAAArB,KAAAigB,GAAAve,EAAA1B,KAAA4B,EAAAqe,GAAA/e,MAAAlB,KAAAoB,YAAA,OAAAU,EAAAme,EAAiC3Q,IAAjC5B,GAAAuS,IAAAthB,IAAA,OAAAN,MAAA,SASSwZ,EAAexD,GAChBrU,KAAK6P,MAAqBgI,EAC1B7X,KAAK+e,M9BvBN,SAA8BmB,GACjC,IAAMhb,GACF7G,MAAO,GACP2gB,cAAc,EACdC,UAAWiB,EAAgB5H,MAAM,OAQrC,OANApT,EAAS7G,MAAQ6G,EAAS+Z,UAAUxZ,QACpCP,EAAS8Z,aAAemB,QAAQjb,EAAS+Z,UAAU7Z,QACnDF,EAAS+Z,UAAY/Z,EAAS+Z,UAAU3V,OAAO,SAAC2V,EAAWtgB,GAEvD,OADAsgB,EAAUtgB,IAAO,EACVsgB,OAEJ/Z,E8BWuBkb,CAAsB,IAAIzM,OAAOiK,IAAmB/H,KAAKgC,GAAe,IAClG7X,KAAKggB,WAAqBhgB,KAAK+e,MAAM1gB,MACrC2B,KAAK4P,kBAAqB/D,GAAmBwI,GAAa,GAAK,MAG/D,IAAM4K,EAAYjf,KAAK+e,MAAME,UAC7Bjf,KAAKof,QAAU1c,EAAWuc,GAAWrV,KAAK,SAAAyW,GAAQ,OACP,IAAvC3B,GAAgBxb,QAAQmd,IAAoBtC,GAAShK,KAAKsM,QAlBtE1hB,IAAA,SAAAN,MAAA,SAuBWkR,EAASzK,EAAMR,GAAM,IAAA+E,EAAArJ,KACpBkP,EAAQ9G,GAAQnK,IAAIsR,GAEnBL,IACDA,GACI5K,MAAc0X,UACd7M,QAAY,kBAAM9F,EAAKgG,OAAOE,EAASzK,EAAMoK,EAAM5K,QAEvD8D,GAAQrC,IAAIwJ,EAASL,IAGrB5K,IACIA,EAAK0X,MACL9M,EAAM5K,KAAOA,EAGb4K,EAAM5K,KAAK0X,MAAQ1X,QAvCnC3F,IAAA,MAAAN,MAAA,SAGeoN,GACP,IAAIoM,EAAgB,GAEpB,OADA5L,GAAiBR,GAAK7B,KAAK,SAAA8N,GAAI,OAAIkG,GAAiB7J,KAAK2D,KAAUG,EAAgBH,KAC5EG,MANfoI,EAAA,MAAaA,4BACuBtB,IA4CrBsB,IC7JTK,GAAc,eACPC,GAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAlf,EAAArB,KAAAugB,GAAA7e,EAAA1B,KAAA4B,EAAA2e,GAAArf,MAAAlB,KAAAoB,YAAA,OAAAU,EAAAye,EAAmC9I,IAAnC/J,GAAA6S,EAAA,OAAA5hB,IAAA,UAAAN,MAAA,WAEuB,OAAO,KAF9BM,IAAA,WAAAV,IAAA,WAC4B,OAAOqiB,OADnCC,EAAA,GCKaE,GAAb,SAAA7N,GAAA,SAAA6N,IAAA,OAAApf,EAAArB,KAAAygB,GAAA/e,EAAA1B,KAAA4B,EAAA6e,GAAAvf,MAAAlB,KAAAoB,YAAA,OAAAU,EAAA2e,EAAmCnR,IAAnC5B,GAAA+S,IAAA9hB,IAAA,OAAAN,MAAA,SAsBSqZ,EAAMrD,GACPrU,KAAK6P,MAAqB6H,EAC1B1X,KAAK4P,kBAAqB/D,GAAmBwI,GAAa,GAAK,aAxBvE1V,IAAA,MAAAN,MAAA,SAkBeoN,GACP,OAAOlH,EAAakH,EAtBE,iBAsB4B,OAnB1DgV,EAAA,MAAaA,oHACqChS,uCAC5B,QAAAkD,EAAAxM,EAAA/D,UAAAgE,OAAN7E,EAAM,IAAAuC,EAAAqC,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAN/E,EAAM+E,GAAAlE,UAAAkE,IACVqM,EAAA9D,GAAAjM,EAAA8e,EAAA1hB,WAAA,OAAAgB,OAAAzC,KAAA2D,MAAAyQ,GAAA3R,MAAAkL,OAAc3K,IACdP,KAAK2gB,kBAAoB3gB,KAAKiP,MAAM2R,MAAMC,SAAW,kCAElDlR,GACH,IAAMmR,EAAe9gB,KAAKiP,MAAM2R,MAE5BjR,EACAmR,EAAaD,QAAU7gB,KAAK2gB,kBAZd,SAcTG,EAAaD,UAClBC,EAAaD,QAfC,kBCIvB,SAASE,GAAY/I,EAAIgJ,GACvBhJ,GAAwB,WAAlBla,EAAA6D,EAAA,EAAA7D,CAAOkjB,IAGlBljB,EAAO6E,KAAKqe,GAAQhe,QAAQ,SAASiH,GACjC+N,EAAG4I,MAAM3W,GAAQ+W,EAAO/W,KAGjB8W,ICTFE,GAAb,SAAArO,GAAA,SAAAqO,IAAA,OAAA5f,EAAArB,KAAAihB,GAAAvf,EAAA1B,KAAA4B,EAAAqf,GAAA/f,MAAAlB,KAAAoB,YAAA,OAAAU,EAAAmf,EAAoC3R,IAApC5B,GAAAuT,IAAAtiB,IAAA,OAAAN,MAAA,SAYSqZ,EAAMrD,GACPrU,KAAK6P,MAAqB6H,EAC1B1X,KAAK4P,kBAAqB/D,GAAmBwI,GAAa,GAAK,cAdvE1V,IAAA,MAAAN,MAAA,SAOeoN,GACP,OAAOlH,EAAakH,EAVV,mBAUwC,OAR1DwV,EAAA,MAAaA,oHACqCxS,uCACnCkB,GACHoR,GAAY/gB,KAAKiP,MAAOU,aCdpCzS,EAAAQ,EAAA+B,EAAA,mCAAAyhB,KAAAhkB,EAAAQ,EAAA+B,EAAA,kCAAA0hB,KAAAjkB,EAAAQ,EAAA+B,EAAA,kCAAA2hB,KAAAlkB,EAAAQ,EAAA+B,EAAA,mCAAA4hB,KAAAnkB,EAAAQ,EAAA+B,EAAA,kCAAA6hB,KAAApkB,EAAAQ,EAAA+B,EAAA,kCAAA8hB,KAAArkB,EAAAQ,EAAA+B,EAAA,gCAAA+hB,KAAAtkB,EAAAQ,EAAA+B,EAAA,gCAAAgiB,KAAAvkB,EAAAQ,EAAA+B,EAAA,kCAAAiiB,KAAAxkB,EAAAQ,EAAA+B,EAAA,kCAAAkiB,KAAAzkB,EAAAQ,EAAA+B,EAAA,mCAAAmiB,KAAA1kB,EAAAQ,EAAA+B,EAAA,gCAAA2S,KAAAlV,EAAAQ,EAAA+B,EAAA,2BAAAoiB,KAAA3kB,EAAAQ,EAAA+B,EAAA,yBAAAyQ,KAAAhT,EAAAQ,EAAA+B,EAAA,+BAAAqiB,IAAA5kB,EAAAQ,EAAA+B,EAAA,8BAAAsiB,KAQA,IAAMb,GAAiB9O,GAAYhJ,SAC7B+X,IAAiBvS,GAA0BA,IAEjD9Q,EAAO6E,KAAKiM,GAAY5L,QAAQ,SAAAgf,IAC8B,IAAtDb,GAAcje,QAAQ0L,EAAWoT,KACjCb,GAAclgB,KAAK2N,EAAWoT,MAItCd,GAAetS,WAAauS,GAGbD","file":"dom-data-bind.legacy.umd.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"DomDataBind\"] = factory();\n\telse\n\t\troot[\"DomDataBind\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nexport default function _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}","\r\nexport const GLOBAL = (() => {\r\n    const undef = 'undefined';\r\n    /* global self, window, global */\r\n    if (typeof window !== undef) { return window; }\r\n    if (typeof global !== undef) { return global; }\r\n    if (typeof self !== undef) { return self; }\r\n    return Function('return this;')();\r\n})();\r\n\r\nexport function getGlobal() {\r\n    return GLOBAL;\r\n}\r\nexport default getGlobal;","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\n\nfunction isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","/**\r\n * return a value to a given method\r\n *\r\n * @function\r\n * @param {Function} fn\r\n * @param {*} ctx The context to be assigned to `fn`\r\n * @return {Function}\r\n *\r\n * @example\r\n *\r\n * f = functionBin(function() { console.log(`Hello ${this.name}`); }, { name: \"Jackson\" });\r\n * f(); // => \"Hello Jackson\"\r\n */\r\nexport const functionBind = Function.bind.call.bind(Function.bind);\r\n\r\n/**\r\n * return a bound `.call` to the given method.\r\n *\r\n * @type function\r\n * @param {Function} fn\r\n * @return {Function}\r\n * @example\r\n *\r\n * forEach = functionBindCall(Array.prototype.forEach);\r\n * // same as doing: Array.prototype.forEach.call (but returns a new \"call\" method);\r\n */\r\nexport const functionBindCall = functionBind(Function.call.bind, Function.call);\r\n\r\n// Object ===============================================================================\r\nexport const toString                 = functionBindCall(Object.prototype.toString);\r\nexport const isObject                 = obj => toString(obj) === \"[object Object]\";\r\nexport const isString                 = obj => toString(obj) === \"[object String]\";\r\nexport const isFunction               = obj => toString(obj) === \"[object Function]\";\r\nexport const isNull                   = obj => toString(obj) === \"[object Null]\";\r\nexport const isUndefined              = obj => toString(obj) === \"[object Undefined]\";\r\nexport const objectDefineProperty     = Object.defineProperty;\r\nexport const objectDefineProperties   = Object.defineProperties;\r\nexport const objectKeys               = Object.keys;\r\nexport const getPropertyDescriptor    = (value, getter, setter, configurable = true, enumerable = false, writable = true) => {\r\n    const descriptor = {\r\n        configurable,\r\n        enumerable\r\n    };\r\n\r\n    if (getter || setter) {\r\n        descriptor.get = getter;\r\n        descriptor.set = setter;\r\n    } else {\r\n        descriptor.writable = writable;\r\n        descriptor.value = value;\r\n    }\r\n    return descriptor;\r\n};\r\nexport const defineProperty = (obj, prop, value, getter, setter, configurable = true, enumerable = false, writable = true) => {\r\n    objectDefineProperty(obj, prop, getPropertyDescriptor(value, getter, setter, configurable, enumerable, writable));\r\n    return obj;\r\n};\r\n\r\n\r\n// Array ===============================================================================\r\nconst arr = [];\r\nexport const isArray        = Array.isArray;\r\nexport const arrayForEach   = functionBindCall(arr.forEach);\r\nexport const arrayIndexOf   = functionBindCall(arr.indexOf);\r\nexport const arraySplice    = functionBindCall(arr.splice);\r\nexport const arraySlice    = functionBindCall(arr.slice);\r\n\r\n\r\n// Logging ===============================================================================\r\nexport const consoleLog = console.log; // eslint-disable-line\r\nexport const consoleError = console.error || consoleLog; // eslint-disable-line\r\nexport const consoleWarn = console.warn || consoleLog; // eslint-disable-line\r\n\r\n\r\n// Iterators ===============================================================================\r\nexport const SymbolIterator = \"undefined\" !== typeof Symbol && Symbol.iterator ? Symbol.iterator : \"@@iterator\";\r\n\r\n\r\n// DOM ===============================================================================\r\n// *** In a NodeJS env - set HTMLElement to an empty object ***\r\nif (process.env.NODE_ENV !== \"production\") {\r\n    if (typeof HTMLElement === \"undefined\") {\r\n        global.HTMLElement = class {}; // eslint-disable-line\r\n        global.document = class {};\r\n    }\r\n    consoleWarn(\"DEPRECATION WARNING: DOM aliases exposed via '@purtuga/common/src/jsutils/runtime-aliases.js' no longer valid. Use '@purtuga/common/src/domutils/dom-runtime-aliases.js' instead\");\r\n}\r\n// *!*!*!*!*!      IMPORTANT      *!*!*!*!*!!*\r\n//      THESE ARE DEPRECATED AND MOVED TO\r\n//      src/domutils/dom-runtime-aliases.js\r\nconst HTMLElementPrototype = HTMLElement.prototype;\r\nexport const doc = document;\r\nexport const head = doc.head;\r\nexport const createDocFragment = () => doc.createDocumentFragment();\r\nexport const createElement = tagName => doc.createElement(tagName);\r\nexport const createTextNode = data => doc.createTextNode(data || \"\");\r\nexport const appendChild = functionBindCall(HTMLElementPrototype.appendChild);\r\nexport const insertBefore = functionBindCall(HTMLElementPrototype.insertBefore);\r\nexport const hasAttribute = functionBindCall(HTMLElementPrototype.hasAttribute);\r\nexport const getAttribute = functionBindCall(HTMLElementPrototype.getAttribute);\r\nexport const setAttribute = functionBindCall(HTMLElementPrototype.setAttribute);\r\nexport const removeAttribute = functionBindCall(HTMLElementPrototype.removeAttribute);\r\nexport const isDocFragment = node => toString(node) === \"[object DocumentFragment]\";\r\n","import {isObject} from \"./runtime-aliases.js\";\r\n\r\n//============================================================\r\n\r\n/**\r\n * Extends an object with the properties of another.\r\n *\r\n * @param {Object|Boolean} mergeIntoObj\r\n *  The object that will have the properties of every other object provided\r\n *  on input merged into. This can also be a `Boolean`, in which case,\r\n *  a deep merge of objects will be done - argument number 2 will\r\n *  become the `mergeIntoObj`.\r\n * @param {...Object} mergeObjects\r\n *\r\n * @return {Object}\r\n */\r\nexport function objectExtend(mergeIntoObj, ...mergeObjects) {\r\n    let response    = mergeIntoObj || {};\r\n    let total       = mergeObjects.length;\r\n    let deepMerge   = false;\r\n    let i;\r\n    let key;\r\n\r\n    if (typeof mergeIntoObj === \"boolean\") {\r\n        deepMerge   = mergeIntoObj;\r\n        response    = mergeObjects.shift() || {};\r\n        total       = mergeObjects.length;\r\n    }\r\n\r\n    for (i = 0; i < total; i++) {\r\n        if (!mergeObjects[i]) {\r\n            continue;\r\n        }\r\n\r\n        for (key in mergeObjects[i]) {\r\n            if (mergeObjects[i].hasOwnProperty(key)) {\r\n                if (\r\n                    deepMerge &&\r\n                    isObject(response[key]) &&\r\n                    isObject(mergeObjects[i][key])\r\n                ) {\r\n                    response[key] = objectExtend( true, response[key], mergeObjects[i][key]);\r\n\r\n                } else {\r\n                    response[key] = mergeObjects[i][key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return response;\r\n}\r\nexport default objectExtend;","// POLYFILL FOR WeakMap\r\n//  [pt] changed how \"delete\" is defined so that it can work in IE8\r\n\r\n/* jshint ignore:start */\r\n/**\r\n * @license\r\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\r\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\n * Code distributed by Google as part of the polymer project is also\r\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n */\r\nvar FakeWeakMap;\r\nif (typeof WeakMap === 'undefined') {\r\n    (function() {\r\n        var defineProperty = Object.defineProperty;\r\n        var counter = Date.now() % 1e9;\r\n\r\n        var WeakMap = FakeWeakMap = function() {\r\n            this.name = '__st' + (Math.random() * 1e9 >>> 0) + (counter++ + '__');\r\n        };\r\n\r\n        WeakMap.prototype = {\r\n            set: function(key, value) {\r\n                var entry = key[this.name];\r\n                if (entry && entry[0] === key)\r\n                    entry[1] = value;\r\n                else\r\n                    defineProperty(key, this.name, {value: [key, value], writable: true});\r\n                return this;\r\n            },\r\n            get: function(key) {\r\n                var entry;\r\n                return (entry = key[this.name]) && entry[0] === key ?\r\n                    entry[1] : undefined;\r\n            },\r\n            // [pt] Quotes around the delete property needed for IE8\r\n            \"delete\": function(key) {\r\n                var entry = key[this.name];\r\n                if (!entry || entry[0] !== key) return false;\r\n                entry[0] = entry[1] = undefined;\r\n                return true;\r\n            },\r\n            has: function(key) {\r\n                var entry = key[this.name];\r\n                if (!entry) return false;\r\n                return entry[0] === key;\r\n            }\r\n        };\r\n\r\n        window.WeakMap = WeakMap;\r\n    })();\r\n} else {\r\n    FakeWeakMap = WeakMap\r\n}\r\n/* jshint ignore:end */\r\nexport { FakeWeakMap as WeakMap };\r\nexport default FakeWeakMap;\r\n","import {WeakMap} from \"./WeakMap\";\r\n\r\n/**\r\n * Returns an object that contains an initialized WeakMap (`stash` property)\r\n * where data can be stored.\r\n *\r\n * @namespace dataStore\r\n *\r\n */\r\nvar dataStore = /** @lends dataStore */{\r\n    /**\r\n     * Stash data here.\r\n     * @type WeakMap\r\n     */\r\n    stash:  new WeakMap(),\r\n    /**\r\n     * Create a private data store and return it.\r\n     * @return {WeakMap}\r\n     */\r\n    create: function(){\r\n        return new WeakMap();\r\n    }\r\n};\r\n\r\nexport default dataStore;\r\nexport { dataStore };\r\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import {\r\n    objectDefineProperty,\r\n    objectDefineProperties,\r\n    SymbolIterator\r\n} from \"./runtime-aliases\"\r\n\r\n//-----------------------------------------------------------------------\r\n\r\n// Great reference: http://2ality.com/2015/02/es6-iteration.html\r\nexport function FakeIterator(keys, values) {\r\n    objectDefineProperty(this, \"_\", { value: {\r\n        keys:   keys.slice(0),\r\n        values: values ? values.slice(0) : null,\r\n        idx:    0,\r\n        total:  keys.length\r\n    } });\r\n}\r\nexport default FakeIterator;\r\n\r\nobjectDefineProperties(FakeIterator.prototype, {\r\n    constructor: { value: FakeIterator },\r\n    next: {\r\n        enumerable: true,\r\n        configurable: true,\r\n        value() {\r\n            const response = {\r\n                done: this._.idx === this._.total\r\n            };\r\n\r\n            if (response.done) {\r\n                response.value = undefined;\r\n                return response;\r\n            }\r\n\r\n            const nextIdx = this._.idx++;\r\n\r\n            response.value = this._.keys[nextIdx];\r\n\r\n            if (this._.values) {\r\n                response.value = [ response.value, this._.values[nextIdx] ];\r\n            }\r\n\r\n            return response;\r\n        }\r\n    }\r\n});\r\nobjectDefineProperty(FakeIterator.prototype, SymbolIterator, { value(){ return this; } });\r\n\r\n","import { GLOBAL } from \"./getGlobal\"\r\nimport { FakeIterator } from \"./Iterator\"\r\nimport {\r\n    objectDefineProperties,\r\n    objectDefineProperty,\r\n    arrayIndexOf,\r\n    SymbolIterator\r\n} from \"./runtime-aliases\"\r\n\r\n//============================================================\r\n\r\nexport const Set = GLOBAL.Set && GLOBAL.Set.prototype[SymbolIterator] ? GLOBAL.Set : FakeSet;\r\nexport default Set;\r\n\r\nexport function FakeSet() {\r\n    // FIXME: support for iterable input\r\n}\r\n\r\nobjectDefineProperties(FakeSet.prototype, {\r\n    constructor: { value: FakeSet, configurable: true },\r\n    _: {\r\n        get() {\r\n            const values = [];\r\n            objectDefineProperty(this, \"_\", { value: values });\r\n            return values;\r\n        }\r\n    },\r\n    add: {\r\n        value(item) {\r\n            if (arrayIndexOf(this._, item) === -1) {\r\n                this._.push(item);\r\n            }\r\n            return this;\r\n        }\r\n    },\r\n    has: {\r\n        value(item) { return arrayIndexOf(this._, item) !== -1; }\r\n    },\r\n    size: {\r\n        get() { return this._.length; }\r\n    },\r\n    clear: {\r\n        value() { this._.splice(0); }\r\n    },\r\n    delete: {\r\n        value(item) {\r\n            const idx = arrayIndexOf(this._, item);\r\n            if (idx !== -1) {\r\n                this._.splice(idx, 1);\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n    },\r\n    values: {\r\n        value() {\r\n            return new FakeIterator(this._);\r\n        }\r\n    },\r\n    entries: {\r\n        value() {\r\n            return new FakeIterator(this._, this._);\r\n        }\r\n    },\r\n    forEach: {\r\n        value(cb, thisArg) {\r\n            this._.forEach(item => cb.call(thisArg, item, item));\r\n        }\r\n    },\r\n    [SymbolIterator]: {\r\n        value() {\r\n            return this.values();\r\n        }\r\n    }\r\n});\r\n\r\n\r\n","import Set from \"./es6-Set\"\r\n\r\n//===============================================\r\nconst callbacks = new Set();\r\nlet queue;\r\n\r\n/**\r\n * Queue a callback to be executed after at the start of next event loop.\r\n * This differs from `nextTick` in that callbacks are not executed during\r\n * micro-processing, but rather on next event loop, so this is not ideal\r\n * for logic that can cause UI reflow.\r\n *\r\n * @param {Function} cb\r\n */\r\nexport function queueCallback(cb) {\r\n    if (\"function\" === typeof cb) {\r\n        callbacks.add(cb);\r\n\r\n        if (!queue) {\r\n            queue = setTimeout(flushQueue, 0);\r\n        }\r\n    }\r\n}\r\nexport default queueCallback;\r\n\r\nfunction flushQueue() {\r\n    const cbList  = [...callbacks];\r\n    callbacks.clear();\r\n    queue = null;\r\n    let cb;\r\n    while ((cb = cbList.shift())) {\r\n        cb();\r\n        cb = null;\r\n    }\r\n}\r\n","import objectExtend from \"./objectExtend\"\r\nimport dataStore from \"./dataStore\"\r\nimport queueCallback from \"./queueCallback\"\r\n\r\n//=========================================================\r\nconst PRIVATE = dataStore.create();\r\nconst COMMON_DESTROY_METHOD_NAME = [\r\n    \"destroy\",      // Compose\r\n    \"remove\",       // DOM Events Listeners\r\n    \"off\"           // EventEmitter Listeners\r\n];\r\n\r\n// return all KEYs of an object, even those that are not iterable\r\nfunction objectKeys(prototype){\r\n    let k, keys = [];\r\n    for (k in prototype){\r\n        keys.push(k);\r\n    }\r\n    return keys;\r\n}\r\n\r\n// Base instance methods for Compose'd object\r\nconst baseMethods = /** @lends Compose.prototype */{\r\n\r\n    /**\r\n     * Property indicating whether instance has been destroyed\r\n     */\r\n    isDestroyed: false,\r\n\r\n    /**\r\n     * instance initializing code\r\n     */\r\n    init(){},\r\n\r\n    /**\r\n     * Destroys the instance, by removing its private data.\r\n     * Any attached `onDestroy` callback will be executed `async` - queued and\r\n     * called on next event loop\r\n     *\r\n     * @param {Boolean} [executeCallbacksNow=false]\r\n     */\r\n    destroy(executeCallbacksNow){\r\n        if (PRIVATE.has(this)) {\r\n            let destroyCallbacks = PRIVATE.get(this);\r\n            PRIVATE.delete(this);\r\n\r\n            if (executeCallbacksNow) {\r\n                destroyCallbacks.forEach(callOnDestroyCallback);\r\n            }\r\n            else {\r\n                queueCallback(() => destroyCallbacks.forEach(callOnDestroyCallback));\r\n            }\r\n        }\r\n\r\n        if (\"boolean\" === typeof this.isDestroyed) {\r\n            this.isDestroyed = true;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Adds a callback to the queue to be called when this object's `.destroy()`\r\n     * is called.\r\n     *\r\n     * @param {Function} callback\r\n     */\r\n    onDestroy(callback){\r\n        getInstanceState(this).push(callback);\r\n    },\r\n\r\n    /**\r\n     * Returns the factory for this instance.\r\n     *\r\n     * @return {Compose}\r\n     */\r\n    getFactory(){\r\n        if (this.constructor) {\r\n            return this.constructor;\r\n        }\r\n    }\r\n};\r\n\r\n\r\nconst staticMethods = /** @lends Compose */{\r\n    /**\r\n     * Creates an new factory based on the prototye of the current Factory\r\n     * and any other Factory given on input.\r\n     *\r\n     * @return {Compose}\r\n     */\r\n    extend: function(...args){\r\n        let Class = class extends this {};\r\n\r\n        objectExtend(Class.prototype, args.reduce(function(newProto, obj){\r\n            if (obj) {\r\n                const thisObjProto = (obj.prototype || obj);\r\n                objectKeys(thisObjProto).forEach(function(objKey){\r\n                    newProto[objKey] = thisObjProto[objKey];\r\n                });\r\n            }\r\n            return newProto;\r\n        }, {}));\r\n\r\n        return Class;\r\n    },\r\n\r\n    /**\r\n     * Checks if the Object given on input looks like an instance of this Factory.\r\n     *\r\n     * @return {Boolean}\r\n     */\r\n    isInstanceOf: function(instanceObj){\r\n\r\n        if (!instanceObj) {\r\n            return false;\r\n        }\r\n\r\n        var neededKeys = objectKeys(this.prototype);\r\n\r\n        // If any prototype key is not in the object prototype, then return false\r\n        return !neededKeys.some(function(protoKey){\r\n            return typeof instanceObj[protoKey] === \"undefined\";\r\n        });\r\n\r\n    },\r\n\r\n    /**\r\n     * Creates an instance object based on this factory.\r\n     *\r\n     * @return {Object}\r\n     */\r\n    create: function(){\r\n        return new this(...arguments);\r\n    },\r\n\r\n    /**\r\n     * Returns a standard callback that can be used to remove cleanup instance state\r\n     * from specific Store (WeakMap). Returned function will destroy known Instances\r\n     * that have destroy methods.\r\n     *\r\n     * @param {Object} instanceState\r\n     * @param {WeakMap} [stateStore]\r\n     *\r\n     * @return {Function}\r\n     *\r\n     * @example\r\n     *\r\n     * const MY_PRIVATE = new WeakMap();\r\n     * cont NewWdg = Componse.extend({\r\n     *      init() {\r\n     *          const state = {};\r\n     *          MY_PRIVATE.set(this, state);\r\n     *          ...\r\n     *\r\n     *          this.onDestroy(Compose.getDestroyCallback(state, MY_PRIVATE));\r\n     *      }\r\n     * });\r\n     */\r\n    getDestroyCallback: getDestroyCallback\r\n};\r\n\r\n\r\n/**\r\n * Returns a standard callback that can be used to remove cleanup instance state\r\n * from specific Store (WeakMap). Returned function will destroy known Instances\r\n * that have destroy methods.\r\n *\r\n * @method Compose~getDestroyCallback\r\n *\r\n * @param {Object} instanceState\r\n * @param {WeakMap} [stateStore]\r\n *\r\n * @return {Function}\r\n *\r\n * @example\r\n *\r\n * const MY_PRIVATE = new WeakMap();\r\n * cont NewWdg = Componse.extend({\r\n *      init() {\r\n *          const state = {};\r\n *          MY_PRIVATE.set(this, state);\r\n *          ...\r\n *\r\n *          this.onDestroy(Compose.getDestroyCallback(state, MY_PRIVATE));\r\n *      }\r\n * });\r\n */\r\nexport function getDestroyCallback (instanceState, stateStore) {\r\n    return () => {\r\n        if (instanceState) {\r\n            // Destroy all Compose object\r\n            Object.keys(instanceState).forEach(function (prop) {\r\n                if (instanceState[prop]) {\r\n                    COMMON_DESTROY_METHOD_NAME.some((method) => {\r\n                        if (\r\n                            instanceState[prop][method] &&\r\n                            (method !== \"remove\" || !(instanceState[prop] instanceof Node)) // Caution: should not remove DOM elements.\r\n                        ) {\r\n                            instanceState[prop][method]();\r\n                            return true;\r\n                        }\r\n                    });\r\n\r\n                    instanceState[prop] = undefined;\r\n                }\r\n            });\r\n        }\r\n\r\n        if (stateStore && stateStore.has && stateStore.has(instanceState)) {\r\n            stateStore.delete(instanceState);\r\n        }\r\n    }\r\n}\r\n\r\nfunction getInstanceState(inst) {\r\n    if (!PRIVATE.has(inst)) {\r\n        PRIVATE.set(inst, []);\r\n    }\r\n\r\n    return PRIVATE.get(inst);\r\n}\r\n\r\nfunction callOnDestroyCallback (callback){\r\n    if (\"function\" === typeof callback) {\r\n        callback();\r\n    }\r\n}\r\n\r\nfunction getNewConstructor () {\r\n    function ComposeConstructor(...args) {\r\n        // Called with `new`?\r\n        if (this && this.constructor && this instanceof this.constructor) {\r\n            return this.init(...args);\r\n        }\r\n\r\n        // called directly\r\n        return new ComposeConstructor(...args);\r\n    }\r\n\r\n    ComposeConstructor.prototype.constructor = ComposeConstructor;\r\n    return ComposeConstructor;\r\n}\r\n\r\n/**\r\n * Composes new factory methods from a list of given Objects/Classes.\r\n *\r\n * @class Compose\r\n * @borrows Compose~getDestroyCallback as Compose.getDestroyCallback\r\n *\r\n * @example\r\n *\r\n * var Widget = Compose.create(Model, Events);\r\n *\r\n * myWidget = Widget.create();\r\n *\r\n */\r\nconst Compose = getNewConstructor();\r\nobjectExtend(Compose.prototype, baseMethods);\r\nobjectExtend(Compose, staticMethods);\r\n\r\nexport default Compose;\r\nexport { Compose };\r\n","import { GLOBAL } from \"./getGlobal\"\r\nimport { FakeIterator } from \"./Iterator\"\r\nimport {\r\n    arrayIndexOf,\r\n    arraySplice,\r\n    objectDefineProperty,\r\n    objectDefineProperties,\r\n    SymbolIterator\r\n} from \"./runtime-aliases\"\r\n\r\n//======================================================\r\n\r\nexport const Map = GLOBAL.Map && GLOBAL.Map.prototype[SymbolIterator] ? GLOBAL.Map : FakeMap;\r\nexport default Map;\r\n\r\nexport function FakeMap() {\r\n    // FIXME: support for iterable input param\r\n}\r\n\r\nobjectDefineProperties(FakeMap.prototype, {\r\n    constructor: { value: FakeMap, configurable: true },\r\n    _: {\r\n        get() {\r\n            objectDefineProperty(this, \"_\", { value: {\r\n                keys: [],\r\n                values: []\r\n            } });\r\n            return this._;\r\n        }\r\n    },\r\n    get: {\r\n        value(key) {\r\n            return this._.values[arrayIndexOf(this._.keys, key)];\r\n        }\r\n    },\r\n    set: {\r\n        value(key, value) {\r\n            if (arrayIndexOf(this._.keys, key) === -1) {\r\n                this._.keys.push(key);\r\n                this._.values.push(value);\r\n            }\r\n            return this;\r\n        }\r\n    },\r\n    has: {\r\n        value(key) { return arrayIndexOf(this._.keys, key) !== -1; }\r\n    },\r\n    size: {\r\n        get() { return this._.keys.length; }\r\n    },\r\n    clear: {\r\n        value() {\r\n            arraySplice(this._.keys, 0);\r\n            arraySplice(this._.values, 0);\r\n        }\r\n    },\r\n    delete: {\r\n        value(key) {\r\n            const idx = arrayIndexOf(this._.keys, key);\r\n            if (idx !== -1) {\r\n                arraySplice(this._.keys, idx, 1);\r\n                arraySplice(this._.values, idx, 1);\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n    },\r\n    keys: {\r\n        value() {\r\n            return new FakeIterator(this._.keys);\r\n        }\r\n    },\r\n    values: {\r\n        value() {\r\n            return new FakeIterator(this._.values);\r\n        }\r\n    },\r\n    entries: {\r\n        value() {\r\n            return new FakeIterator(this._.keys, this._.values);\r\n        }\r\n    },\r\n    forEach: {\r\n        value(cb, thisArg) {\r\n            this._.keys.forEach((item, i) => cb.call(thisArg, this._.values[i], item));\r\n        }\r\n    },\r\n    [SymbolIterator]: {\r\n        value() {\r\n            return this.entries();\r\n        }\r\n    }\r\n});\r\n\r\n","import dataStore    from \"@purtuga/common/src/jsutils/dataStore.js\"\r\nimport {Map}        from \"@purtuga/common/src/jsutils/Map.js\"\r\nimport {\r\n    functionBindCall,\r\n    isObject,\r\n    isString,\r\n    arrayForEach,\r\n    arraySlice,\r\n    hasAttribute,\r\n    setAttribute,\r\n    getAttribute,\r\n    removeAttribute,\r\n    insertBefore,\r\n    createElement,\r\n    createTextNode,\r\n    createDocFragment,\r\n    consoleError,\r\n    functionBind\r\n} from \"@purtuga/common/src/jsutils/runtime-aliases.js\"\r\nimport {isTemplateElement} from \"@purtuga/common/src/domutils/isTemplateElement.js\"\r\n\r\n//=====================================================\r\nconst DOCUMENT              = document;\r\nconst FUNCTION              = Function;\r\nconst ELEMENT_PROTOTYPE     = Element.prototype;\r\nconst VALUE_GETTERS         = new Map();\r\nlet counter = 1;\r\n\r\nexport {\r\n    arrayForEach,\r\n    arraySlice,\r\n    hasAttribute,\r\n    setAttribute,\r\n    getAttribute,\r\n    removeAttribute,\r\n    insertBefore,\r\n    createElement,\r\n    createTextNode,\r\n    createDocFragment,\r\n    isString\r\n};\r\n\r\nexport const DOM_DATA_BIND_PROP = \"DomDataBind\";\r\nexport const PRIVATE            = dataStore.create();\r\nexport const UUID               = `D-${ Date.now() }-${ Math.random().toString(36).replace(/[^a-z0-9]+/g, '') }`;\r\nexport const escapeString       = str => String(str).replace(/[-[\\]/{}()*+?.\\\\^$|]/g, \"\\\\$&\");\r\nexport const bindCallTo         = functionBindCall;\r\nexport const isPureObject       = isObject;\r\nexport const removeChild        = functionBindCall(ELEMENT_PROTOTYPE.removeChild);\r\nexport const createComment      = functionBind(DOCUMENT.createComment, DOCUMENT);\r\nexport const isTemplate         = isTemplateElement;\r\nexport const logError           = consoleError;\r\n\r\n\r\n/**\r\n * Create a Function to be used in retrieving a given value from a data structure\r\n * @param evalCode\r\n * @param name\r\n * @returns {*}\r\n */\r\nexport function createValueGetter(evalCode, name = \"runtime\") {\r\n    evalCode = evalCode.trim();\r\n\r\n    if (VALUE_GETTERS.has(evalCode)) {\r\n        return VALUE_GETTERS.get(evalCode);\r\n    }\r\n\r\n    const fn = new FUNCTION(\"$DATA\", `\r\nwith ($DATA) {\r\n    if ($DATA.$data) {\r\n        with ($DATA.$data) {\r\n            return (${ evalCode });\r\n        }\r\n    } \r\n    return (${ evalCode });\r\n}\r\n//# sourceURL=valueGetter:${name}.${counter++}.js`);\r\n\r\n    VALUE_GETTERS.set(evalCode, fn);\r\n    return fn;\r\n}\r\n\r\n/**\r\n * Returns an array of attributes names found on a given HTML node\r\n *\r\n * @param {HTMLElement} node\r\n * @returns {Array}\r\n */\r\nexport function getNodeAttrNames(node){\r\n    const attrNames = [];\r\n    const total = node.attributes.length;\r\n\r\n    for(let i = 0; i < total; i++) {\r\n        attrNames.push(node.attributes.item(i).name);\r\n    }\r\n\r\n    return attrNames;\r\n}\r\n\r\n/**\r\n * Parses a directive string and returns an object with its values.\r\n * @param directiveString\r\n * @returns {{value: string, hasModifiers: boolean, modifiers: object}}\r\n */\r\nexport function parseDirectiveString(directiveString) {\r\n    const response = {\r\n        value: \"\",\r\n        hasModifiers: true,\r\n        modifiers: directiveString.split(/\\./)\r\n    };\r\n    response.value = response.modifiers.shift();\r\n    response.hasModifiers = Boolean(response.modifiers.length);\r\n    response.modifiers = response.modifiers.reduce((modifiers, key) => {\r\n        modifiers[key] = true;\r\n        return modifiers;\r\n    }, {});\r\n    return response;\r\n}","import {toString} from \"../jsutils/runtime-aliases.js\";\r\n\r\n/**\r\n * Returns a boolean indicating if provided element on input is a HTML Template element (like).\r\n *\r\n * @param {HTMLElement} ele\r\n *\r\n * @returns {boolean}\r\n */\r\nexport function isTemplateElement(ele) {\r\n    const eleToStringValue = toString(ele);\r\n    return eleToStringValue === \"[object HTMLTemplateElement]\" ||\r\n        (eleToStringValue === \"[object HTMLUnknownElement]\" && !!ele.content);\r\n}","/**\r\n * Finds Elements within a given HTML Element using `querySelectorAll` and\r\n * return an Array with those elements.\r\n *\r\n * @function domFind\r\n *\r\n * @param {HTMLElement} domEle\r\n * @param {String} selector\r\n *\r\n * @returns {Array<HTMLElement>}\r\n */\r\nexport function domFind(domEle, selector){\r\n    return Array.prototype.slice.call(domEle.querySelectorAll(selector));\r\n}\r\nexport default domFind;\r\n","// Some of the code below was taken from from https://github.com/ericelliott/cuid/\r\n\r\n/**\r\n * Generates a unique id. This is really a CUID.\r\n *\r\n * @namespace uuid\r\n */\r\nvar\r\n    base    = 36,\r\n    counter = 1,\r\n    letter  = \"c\",\r\n    pad     = function(num, size) {\r\n        var s = \"000000000\" + num;\r\n        return s.substr(s.length-size);\r\n    },\r\n\r\n    globalCount = (function() {\r\n        var i, count = 0; // eslint-disable-line\r\n        for (i in window) {\r\n            count++;\r\n        }\r\n        return count;\r\n    }()),\r\n\r\n    fingerprint = (function() {\r\n        return pad(\r\n            (navigator.mimeTypes.length + navigator.userAgent.length).toString(36) + globalCount.toString(36),\r\n            4\r\n        );\r\n    }());\r\n\r\n\r\nvar uuid = Object.create(/** @lends uuid */{\r\n    generate: function(){\r\n        var\r\n            timestamp   = (new Date().getTime()).toString(base),\r\n            nextCounter = pad((counter++).toString(base), 4),\r\n            random      = 'xxxxxxxx'.replace(/[x]/g, function() {\r\n            // This code from: http://stackoverflow.com/a/2117523/471188\r\n                var v = Math.random()*16|0;\r\n                return v.toString(16);\r\n            });\r\n\r\n        return (letter + timestamp + nextCounter + fingerprint + random);\r\n\r\n    }\r\n});\r\n\r\nexport default uuid;\r\nexport { uuid };\r\n","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","import getPrototypeOf from \"./getPrototypeOf\";\nimport superPropBase from \"./superPropBase\";\nexport default function _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","/**\r\n * Shortcut/Functional alias to `Node.insertBefore` method.\r\n *\r\n * @param {Node|DocumentFragment} newNode\r\n * @param {Node} referenceNode\r\n *\r\n * @returns {Node|DocumentFragment}\r\n */\r\nexport function domInsertBefore(newNode, referenceNode) {\r\n    if (referenceNode && referenceNode.parentNode && referenceNode.parentNode.insertBefore) {\r\n        referenceNode.parentNode.insertBefore(newNode, referenceNode);\r\n    }\r\n    return newNode;\r\n}\r\nexport default domInsertBefore;\r\n\r\n","/**\r\n * Safely remove a node from its parent. Check if node has a parent and if so,\r\n * then it removes it from that parent.\r\n *\r\n * @param {Node} childNode\r\n * @returns {Node}\r\n */\r\nexport function domRemoveChild(childNode) {\r\n    if (childNode && childNode.parentNode) {\r\n        childNode.parentNode.removeChild(childNode);\r\n    }\r\n    return childNode;\r\n}\r\n","import Compose from \"@purtuga/common/src/jsutils/Compose.js\";\r\nimport {PRIVATE} from \"../utils.js\";\r\n\r\n//============================================================\r\n\r\n// FIXME: replace use of Compose.js\r\n\r\n/**\r\n * A Directive Node handler\r\n *\r\n * @extends Compose\r\n *\r\n * @param {Directive} directive Directive instance\r\n * @param {Node} node\r\n */\r\nexport class NodeHandler extends Compose {\r\n    init(directive, node, directives) {\r\n        this._directives = directives;\r\n        this._d = this._directive = directive;\r\n        this._n = this._node = node;\r\n    }\r\n\r\n    /**\r\n     * List of directives that were used during parsing of the template\r\n     * @name NodeHandler#_directives\r\n     * @type Array<Directive>\r\n     */\r\n\r\n    /**\r\n     * The Directive instance that is tied to this node handler\r\n     * @name NodeHandler#_directive\r\n     * @type Directive\r\n     * @protected\r\n     */\r\n\r\n    /**\r\n     * The Node associated with this node handler\r\n     * @name NodeHandler#_node\r\n     * @type Node\r\n     * @protected\r\n     */\r\n\r\n    // Override destroy (which is by default \"async\" and ensure that notifications\r\n    // are turned off immediately for this Node\r\n    destroy() {\r\n        const state = PRIVATE.get(this);\r\n        if (state){\r\n            if (state.tracker && state.tracker.stopWatchingAll) {\r\n                state.tracker.stopWatchingAll();\r\n            }\r\n            if (state.data) {\r\n                state.data = null;\r\n            }\r\n        }\r\n        super.destroy();\r\n        PRIVATE.delete(this);\r\n    }\r\n\r\n    /**\r\n     * Renders the data given on input to the Template.\r\n     * (By default, it proxies to the Directive#render())\r\n     *\r\n     * @param data\r\n     */\r\n    render(data) {\r\n        this._d.render(this, this._n, data);\r\n    }\r\n\r\n    /**\r\n     * Shoudl be overwritten to contain the logic as to how a new value (generated by the Directive's `render()`)\r\n     * should be applied to the live HTML. Should be overwritten.\r\n     *\r\n     * @param {*} newValue\r\n     */\r\n    update(/*newValue*/) {}// eslint-disable-line\r\n}\r\n","import Compose from \"@purtuga/common/src/jsutils/Compose.js\"\r\nimport {logError, PRIVATE, removeAttribute} from \"../utils.js\"\r\nimport {NodeHandler} from \"./NodeHandler.js\";\r\n\r\n//===================================================================================\r\n\r\n// FIXME: replace use of Compose.js\r\n\r\n/**\r\n * A DOM element directive.\r\n * NOte that any directive that removes the original DOM element from its parent\r\n * will prevent all subsequent directives from running.\r\n *\r\n * @class Directive\r\n * @extends Compose\r\n *\r\n * @param {String} directiveAttr\r\n *  The directive html element attribute as found in the element.\r\n * @param {String} attrValue\r\n *  The value of the attribute\r\n */\r\nexport class Directive extends Compose {\r\n    /**\r\n     * Checks a given element has an element attribute that matches the Directive.\r\n     * If a match is found, the html Element's attribute that was matched must be\r\n     * returned.\r\n     *\r\n     * @param {HTMLElement} ele\r\n     *\r\n     * @returns {String}\r\n     */\r\n    static has(/*ele*/) { return \"\"; }\r\n\r\n    /**\r\n     * A boolean indicating whether this directive manages the element. If set to true, then\r\n     * `DomDataBind` will not process any other directives after this one.\r\n     */\r\n    static manages() { return false; }\r\n\r\n    /**\r\n     * The Class that will be used to initialize a new node handler for the directive\r\n     *\r\n     * @type NodeHandler\r\n     * @constructor\r\n     */\r\n    static NodeHandlerConstructor = NodeHandler;\r\n\r\n    /**\r\n     * Render the Directive with given data\r\n     *\r\n     * @param {NodeHandler} handler\r\n     * @param {Node} node\r\n     * @param {Object} data\r\n     */\r\n    render(handler, node, data) {\r\n        let state = PRIVATE.get(handler);\r\n\r\n        if (!state) {\r\n            /**\r\n             * Directive Node Handler state\r\n             *\r\n             * @typedef {Object} NodeHandlerState\r\n             *\r\n             * @property {*} data\r\n             * @property {*} value\r\n             * @property {Boolean} isQueued\r\n             * @property {Function} tracker\r\n             * @property {Function} update\r\n             */\r\n            state = {\r\n                data:       null,\r\n                value:      \"\",\r\n                isQueued:   false,\r\n                tracker:    () => this.render(handler, node, state.data)\r\n                //update: () => {} --- should be defined by Directive subclass\r\n            };\r\n            PRIVATE.set(handler, state);\r\n\r\n        }\r\n\r\n        if (state.data !== data) {\r\n            // With use of observables, the tracker function get a `stopWatchingAll()` method\r\n            // which removes this tracker from all property dependency lists.\r\n            if (state.tracker.stopWatchingAll) {\r\n                state.tracker.stopWatchingAll();\r\n            }\r\n            state.data = data;\r\n        }\r\n\r\n        this.update(handler);\r\n    }\r\n\r\n    /**\r\n     * Updates a node by generating a new value for the Directive, storing it\r\n     * in the handler `state.value` and calling `handle.update` after it.\r\n     *\r\n     * @param {NodeHandler} handler\r\n     */\r\n    update(handler) {\r\n        // destruction happens 1ms after .destroy() (Componse#destroy()) is called,\r\n        // so its possible that a handler might come in here having its `.isDestroyed`\r\n        // flag set.\r\n        if (handler.isDestroyed) {\r\n            return;\r\n        }\r\n\r\n        const handlerState = PRIVATE.get(handler);\r\n\r\n        if (handlerState) {\r\n            let newValue = \"\";\r\n\r\n            try {\r\n                newValue = this._tokenValueGetter(handlerState.data || {});\r\n\r\n                // Update node\r\n                if (handler.update) {\r\n                    handler.update(newValue);\r\n                }\r\n            }\r\n            catch(e) {\r\n                logError(e);\r\n            }\r\n\r\n            if (handlerState.value !== newValue) {\r\n                handlerState.value = newValue;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Cleans the node by removing Directive specific attribute. By default, the `_attr`\r\n     * that was given to this constructor will be removed from the node.\r\n     *\r\n     * @param {Node} node\r\n     */\r\n    cleanNode(node) {\r\n        if (this._attr && node.nodeType !== 8 /* don't process comment nodes */) {\r\n            removeAttribute(node, this._attr);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns a node handler for this Directive on the provided Node\r\n     *\r\n     * @param {Node} node\r\n     * @param {Array<Directive>} [directives]\r\n     *\r\n     * @return {NodeHandler}\r\n     */\r\n    getNodeHandler(node, directives) {\r\n        this.cleanNode(node);\r\n        return new this.constructor.NodeHandlerConstructor(this, node, directives);\r\n    }\r\n}\r\nexport default Directive;\r\n\r\n","import {Map} from \"@purtuga/common/src/jsutils/Map.js\";\r\nimport Template from \"./Template.js\"\r\nimport {isString} from \"./utils.js\";\r\nimport {isTemplate} from \"./utils.js\";\r\n\r\n\r\n//==========================================================================\r\n// Keeps a map between `html string` and `Template` instance\r\nconst TEMPLATES = new Map();\r\n\r\n/**\r\n * Create a UI view template for the given html string. Returned view (Template) are cached (memoized)\r\n * and thus a previously view template will just return the previous Template instance\r\n *\r\n * @param {String|HTMLTemplateElement} html\r\n * @param {Array<Directive>} directives\r\n *\r\n * @returns {Template}\r\n */\r\nexport function view(html, directives = view.directives || []) {\r\n    const isHtmlString = isString(html);\r\n    const cacheKey = isHtmlString ? html : html.innerHTML;\r\n\r\n    if (!hasTemplate(cacheKey)) {\r\n        TEMPLATES.set(\r\n            cacheKey,\r\n            new Template(html, directives)\r\n        );\r\n    }\r\n\r\n    // DEVELOPMENT MODE (is removed during webpack build)\r\n    if (process.env.NODE_ENV !== \"production\") {\r\n        if (!isString(html) && !isTemplate(html)) {\r\n            console.warn(`dom-data-bind.view(): 'html' argument must be either String or HTMLTemplateElement!`); //eslint-disable-line\r\n        }\r\n    }\r\n\r\n    return TEMPLATES.get(cacheKey);\r\n}\r\n\r\n/**\r\n * A list of directives that might be used in views. Used as the default value to the\r\n * `directives` input argument of `view()`.\r\n *\r\n * @type {Array<Directive>>|null}\r\n */\r\nview.directives = null;\r\n\r\n/**\r\n * Checks if a view template already exists for the given html\r\n *\r\n * @type {function(*=): boolean}\r\n */\r\nview.has = hasTemplate;\r\n\r\n/**\r\n * Checks if a view template already exists for the given html\r\n * @param html\r\n * @returns {boolean}\r\n */\r\nfunction hasTemplate(html) {\r\n    return TEMPLATES.has(html);\r\n}\r\n","import {arraySlice} from \"./utils.js\";\r\n\r\n/**\r\n * Interface for a template instance.\r\n */\r\nexport class TemplateInstance {\r\n    /**\r\n     *\r\n     * @param {DocumentFragment} docFrag\r\n     * @param {Array<NodeHandler>} bindings\r\n     * @param {String} [templateId]\r\n     */\r\n    constructor(docFrag, bindings, templateId = \"\") {\r\n        this._frag = docFrag;\r\n        this._bindings = bindings;\r\n        this._childNodes = arraySlice(docFrag.childNodes, 0);\r\n        this.fromTemplateId = templateId;\r\n    }\r\n\r\n    /**\r\n     * Recovers the original nodes rendered from the template into\r\n     * the DocumentFragment\r\n     */\r\n    recover() {\r\n        this._childNodes.forEach(nodeEle => this._frag.appendChild(nodeEle));\r\n    }\r\n\r\n    /**\r\n     * Destroys all bindings of the Template\r\n     */\r\n    destroy() {\r\n        this.recover();\r\n        if (this._bindings) {\r\n            for (let i = 0, t = this._bindings.length; i < t; i++) {\r\n                this._bindings[i].destroy();\r\n            }\r\n            this._bindings.length = 0;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets data on the Template by passing it to all directives to act on.\r\n     * @param data\r\n     */\r\n    setData(data) {\r\n        for (let i = 0, t = this._bindings.length; i < t; i++) {\r\n            this._bindings[i].render(data);\r\n        }\r\n    }\r\n}\r\n","import {view} from \"./view.js\";\r\nimport {DOM_DATA_BIND_PROP} from \"./utils.js\";\r\nimport {TemplateInstance} from \"./TemplateInstance.js\";\r\nimport {applyBindingsToTemplateInstance, Template} from \"./Template.js\";\r\n\r\n\r\n//==========================================================================\r\n\r\n/**\r\n * Returns a DocumentFragment representation of the given `html` code provided on\r\n * input bound to the given data.\r\n *\r\n * @param {String|HTMLTemplateElement|Template} html\r\n * @param {Object} [data]\r\n * @param {Array<Directive>} [directives]\r\n *\r\n * @return {DocumentFragment}\r\n *  Document Fragment returned will have a property named 'DomDataBind', which is\r\n *  a TemplateInstance class instance\r\n */\r\nexport function render(html, data, directives) {\r\n    const viewTemplate = html instanceof Template ? html : view(html, directives);\r\n    const response = document.importNode(viewTemplate.ele.content, true);\r\n\r\n    response[DOM_DATA_BIND_PROP] = new TemplateInstance(\r\n        response,\r\n        applyBindingsToTemplateInstance(response, viewTemplate._bindings, viewTemplate._directives),\r\n        viewTemplate.id\r\n    );\r\n    response[DOM_DATA_BIND_PROP].setData(data);\r\n    return response;\r\n}\r\n\r\nexport default render;\r\n","import {domInsertBefore} from \"@purtuga/common/src/domutils/domInsertBefore.js\"\r\nimport {domRemoveChild} from \"@purtuga/common/src/domutils/domRemoveChild.js\"\r\nimport {\r\n    isUndefined,\r\n    isNull,\r\n    isDocFragment\r\n} from \"@purtuga/common/src/jsutils/runtime-aliases.js\"\r\nimport Directive from \"../directives/Directive.js\"\r\nimport {\r\n    UUID,\r\n    PRIVATE,\r\n    createTextNode,\r\n    createValueGetter,\r\n    createComment,\r\n    arraySlice\r\n} from \"../utils.js\"\r\nimport {NodeHandler} from \"../directives/NodeHandler.js\";\r\nimport {Template} from \"../Template.js\";\r\nimport {render} from \"../render.js\";\r\n\r\n//===========================================================\r\nconst ID = \"text.binding\";\r\nconst isAttached = node => !!node.parentNode;\r\n\r\nclass TextBindingNodeHandler extends NodeHandler {\r\n    init(...args) {\r\n        super.init(...args);\r\n\r\n        let node = this._node;\r\n\r\n        // Text nodes are processed in a special way in `DomDataBind.getTemplateForDomElement`, where\r\n        // free-floating textnode are replaced with HTML comments in order to not lose their place when\r\n        // converted to text and then back to dom elements.\r\n        // If that is the case here, then use that HTMLComment as a placeholder\r\n        // and create a \"real\" textNode for the content\r\n        if (node.nodeType === 8 && node.nodeValue === UUID) {\r\n            this._placeholderEle = node;\r\n            this._placeholderEle.data = ID;\r\n            this._node = domInsertBefore(createTextNode(\"\"), this._placeholderEle);\r\n            domRemoveChild(this._placeholderEle);\r\n        }\r\n\r\n        // If no placeholder element yet, create it now\r\n        if (!this._placeholderEle) {\r\n            this._placeholderEle = createComment(ID);\r\n        }\r\n\r\n        this._externalNodes = null; // Array\r\n        this._template = null;\r\n        this._templateInst = null;\r\n    }\r\n\r\n    update(newValue) {\r\n        // Null and Undefined values\r\n        if (isNull(newValue) || isUndefined(newValue)) {\r\n            this.clear();\r\n            this.setPlaceholder();\r\n            return;\r\n        }\r\n\r\n        // Is it a Template?\r\n        if (newValue instanceof Template) {\r\n            const data = PRIVATE.get(this).data;\r\n            if (this._template && this._template.id === newValue.id) {\r\n                this._templateInst.DomDataBind.setData(data);\r\n                return;\r\n            }\r\n\r\n            this.clear();\r\n            this.setPlaceholder();\r\n            this._template = newValue;\r\n            this._templateInst = render(newValue, data, this._directives);\r\n            domInsertBefore(this._templateInst, this._placeholderEle);\r\n            return;\r\n        }\r\n\r\n        // A regular HTML node(s)\r\n        if (newValue instanceof Node) {\r\n            // Is it already displayed here? - then do nothing\r\n            if (this.isCurrentExternal(newValue)) {\r\n                return;\r\n            }\r\n\r\n            this.clear();\r\n            this.setPlaceholder();\r\n            this.storeExternals(newValue);\r\n            domInsertBefore(newValue, this._placeholderEle);\r\n            return;\r\n        }\r\n\r\n        // ElSE, handle text content (or something can be stringified (toString))\r\n        if (!isAttached(this._node)) {\r\n            this.clear();\r\n            domInsertBefore(this._node, this._placeholderEle);\r\n            domRemoveChild(this._placeholderEle);\r\n        }\r\n        if (newValue !== this._node.nodeValue) {\r\n            this._node.nodeValue = newValue;\r\n        }\r\n    }\r\n\r\n    storeExternals(nodeEle) {\r\n        if (this._externalNodes) {\r\n            this.removeExternals();\r\n        }\r\n        this._externalNodes = isDocFragment(nodeEle) ? arraySlice(nodeEle.childNodes, 0) : [ nodeEle ];\r\n    }\r\n\r\n    removeExternals() {\r\n        if (this._externalNodes) {\r\n            for (let i = 0, t = this._externalNodes.length; i < t; i++) {\r\n                domRemoveChild(this._externalNodes[i]);\r\n            }\r\n            this._externalNodes = null;\r\n        }\r\n    }\r\n\r\n    isCurrentExternal(nodeEle) {\r\n        return this._externalNodes &&\r\n            (\r\n                (\r\n                    !isDocFragment(nodeEle) &&\r\n                    this._externalNodes.length === 1 &&\r\n                    this._externalNodes[0] === nodeEle\r\n                ) ||\r\n                arraySlice(nodeEle).every((newNodeEle, i) => newNodeEle === this._externalNodes[i])\r\n            );\r\n    }\r\n\r\n    destroyTemplateView() {\r\n        if (this._templateInst) {\r\n            this._templateInst.DomDataBind.destroy();\r\n            this._templateInst = this._template = null;\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.removeExternals();\r\n        this.destroyTemplateView();\r\n        this._node.nodeValue = \"\";\r\n    }\r\n\r\n    setPlaceholder() {\r\n        if (!isAttached(this._placeholderEle)) {\r\n            domInsertBefore(this._placeholderEle, this._node);\r\n            domRemoveChild(this._node);\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        super.destroy();\r\n        this.clear();\r\n    }\r\n}\r\n\r\nexport class TextBinding extends Directive {\r\n    static NodeHandlerConstructor = TextBindingNodeHandler;\r\n\r\n    init(tokenText) {\r\n        this._tokenText = tokenText;\r\n        this._tokenValueGetter = createValueGetter(tokenText, ID);\r\n    }\r\n}\r\n\r\nexport default TextBinding;\r\n\r\n","import domFind from \"@purtuga/common/src/domutils/domFind.js\"\r\nimport {uuid} from \"@purtuga/common/src/jsutils/uuid.js\"\r\nimport {\r\n    PRIVATE,\r\n    UUID,\r\n    bindCallTo,\r\n    removeAttribute,\r\n    getAttribute,\r\n    arrayForEach,\r\n    createComment,\r\n    createDocFragment,\r\n    createTextNode,\r\n    logError,\r\n    createElement,\r\n    isTemplate\r\n} from \"./utils.js\"\r\nimport TextBinding from \"./bindings/text-binding.js\"\r\n\r\n\r\n//=========================================================================================\r\nconst DATA_TOKEN_REG_EXP_STR    = \"{{(.*?)}}\";\r\nconst DROPS_NODES_ON_CLONE = (() => {   // FUCK YOU IE!\r\n    const frag = createDocFragment();\r\n    frag.appendChild(createTextNode(\"test\"));\r\n    frag.appendChild(createTextNode(\"\"));\r\n    return frag.cloneNode(true).childNodes.length === 1;\r\n})();\r\nconst NODE_CONTAINS_MISSES_TEXT_NODES = (() => {    // FUCK YOU IE!\r\n    const div = createElement(\"div\");\r\n    const text = createTextNode(\"test\");\r\n    div.appendChild(text);\r\n    return !div.contains(text);\r\n})();\r\n\r\n\r\n// Local aliases\r\nconst nodeSplitText         = bindCallTo(Text.prototype.splitText);\r\n\r\n// short helpers\r\nconst reHasDataToken        = new RegExp(DATA_TOKEN_REG_EXP_STR);\r\nconst reTokenMatch          = new RegExp(DATA_TOKEN_REG_EXP_STR, \"g\");\r\nconst getNodeValue          = node => node ? node.nodeValue : \"\";\r\nconst hasToken              = node => reHasDataToken.test(getNodeValue(node));\r\n\r\n// FIXME: use insertBefore() alias in several places below\r\n\r\n\r\n/**\r\n * A Dom template along with its set of know directives (after parsing it)\r\n */\r\nexport class Template {\r\n    constructor(html, directives = []) {\r\n        this.id = uuid.generate();\r\n\r\n        if (!isTemplate(html)) {\r\n            this.ele = createElement(\"template\");\r\n            this.ele.innerHTML = html;\r\n        } else {\r\n            this.ele = html;\r\n        }\r\n\r\n        this._directives = directives;\r\n\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n            // DEV MODE:: warn about directive positioning\r\n            if (directives.length) {\r\n                const directivesPosition = directives.reduce(function(positions, Directive, index){\r\n                    positions[Directive.name] = index;\r\n                    positions[`has${Directive.name}`] = true;\r\n                    return positions;\r\n                }, {});\r\n\r\n                if (directivesPosition.hasEachDirective && directivesPosition.EachDirective !== 0) {\r\n                    console.warn(`DomDataBind: 'EachDirective' position in 'directives' array should be 0!`); // eslint-disable-line\r\n                }\r\n\r\n                if (!directivesPosition.hasEachDirective && directivesPosition.hasIfDirective) {\r\n                    if (directivesPosition.hasEachDirective && directivesPosition.IfDirective !== 1) {\r\n                        console.warn(`DomDataBind: 'IfDirective' position in 'directives' array should be 1 (right after 'EachDirective')!`); // eslint-disable-line\r\n                    } else if (directivesPosition.IfDirective !== 0) {\r\n                        console.warn(`DomDataBind: 'IfDirective' position in 'directives' array should be 0!`); // eslint-disable-line\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        this._bindings = getBindingFor(this.ele.content, directives);\r\n    }\r\n\r\n    /**\r\n     * The template unique id\r\n     * @name Template#id\r\n     * @type {String}\r\n     */\r\n\r\n    /**\r\n     * The HTMLTemplateElement\r\n     * @name Template#ele\r\n     * @type {HTMLTemplateElement}\r\n     */\r\n}\r\nexport default Template;\r\n\r\n/**\r\n * Returns a Map() that includes the paths to nodes in the Dom template that\r\n * are using Directives or have bindings.\r\n * The map \"key\" is an array of `childNodes` paths from the root of the template\r\n * all the way to the node.\r\n * The map \"value\" is an array Directive instances for that node\r\n *\r\n * @return {Map}\r\n */\r\nexport function getBindingFor(ele, directives) {\r\n    // FIXME: refactor this entire function to be faster and more efficient\r\n\r\n\r\n    // template bindings Map() structure:\r\n    //\r\n    //      bindings = Map(\r\n    //          [path, via, childNodes, to, element]: [ directive instances ],\r\n    //          // example:\r\n    //          [0,1,3]: [ directiveInstance1, directiveInstance2 ]\r\n    //      )\r\n    //  }\r\n    //\r\n\r\n    // The goal is to be able to provide a path to each elements for which a group of directives will be applied.\r\n    const bindings          = new Map(); // FIXME: these can be global and reusable - since we only ever have one call in flight to this function\r\n    const eleToBindings     = new Map();\r\n    const ignoredChildren   = new Set();\r\n    let domEle;\r\n\r\n    // FIXME: convert to singleton function\r\n    //          Arguments should be:\r\n    //                  Directive, domEle, eleToBindings, ignoreChildren\r\n    //          Returns a boolean\r\n    const directiveIterator = Directive => {\r\n        let attrName;\r\n        let attrValue;\r\n        let managesNode;\r\n        let elePlaceholder = domEle;\r\n\r\n        while ((attrName = Directive.has(domEle))) {\r\n            attrValue = getAttribute(domEle, attrName);\r\n            managesNode = Directive.manages();\r\n\r\n            if (managesNode) {\r\n                elePlaceholder = createComment(\"\");\r\n            }\r\n\r\n            getArrayForNodeFromMap(eleToBindings, elePlaceholder).push(\r\n                getDirectiveForAttribute(Directive, attrName, attrValue)\r\n            );\r\n\r\n            removeAttribute(domEle, attrName);\r\n\r\n            if (managesNode) {\r\n                ignoredChildren.add(domEle);\r\n\r\n                // Replace this node with a Comment, and store the node's html\r\n                // as the comment data, which is then used by the directive instance\r\n                // to `render()` it to DOM when applicable\r\n                domEle.parentNode.insertBefore(elePlaceholder, domEle);\r\n                const fakeEle = createElement(\"div\");\r\n                fakeEle.appendChild(domEle);\r\n                elePlaceholder.data = fakeEle.innerHTML;\r\n            }\r\n        }\r\n        return managesNode;\r\n    };\r\n\r\n    // FIXME: convert to singleton Function\r\n    //          Arguments needed:\r\n    //              child, eleToBindings,\r\n    const processTextNode = child => {\r\n        if (hasToken(child)) {\r\n            reTokenMatch.lastIndex = 0;\r\n            let nodeValue = getNodeValue(child);\r\n            let childTokenMatches = reTokenMatch.exec(nodeValue);\r\n\r\n            while (childTokenMatches) {\r\n                // If no need to split the text node, then just create a binding for it and exit\r\n                if (nodeValue === \"{{\" + childTokenMatches[1] + \"}}\") {\r\n                    getArrayForNodeFromMap(eleToBindings, child).push(getTextBindingForToken(TextBinding, childTokenMatches[1]));\r\n                    childTokenMatches = null;\r\n                }\r\n                else {\r\n                    let tokenTextNode = nodeSplitText(child, childTokenMatches.index);\r\n\r\n                    // IF browser drops empty nodes, then fix the child node (which now is the left portion\r\n                    // of the split)\r\n                    if (DROPS_NODES_ON_CLONE) {\r\n                        fixEmptyTextNode(child);\r\n                    }\r\n\r\n                    // Split again at the end of token, so that we have a dedicated text node for the token value.\r\n                    // Because this will be used as a template, also need to replace this token value node\r\n                    // with an HTML comment, which will be replaced later during directive initialization\r\n                    // The remainder of the Text value is assigned back to `child` so that we can continue\r\n                    // to check it for other text tokens.\r\n                    child = nodeSplitText(tokenTextNode, childTokenMatches[0].length);\r\n                    const tokenPlaceholder = tokenTextNode.parentNode.insertBefore(createComment(UUID), tokenTextNode);\r\n                    tokenTextNode.parentNode.removeChild(tokenTextNode);\r\n\r\n                    getArrayForNodeFromMap(eleToBindings, tokenPlaceholder).push(getTextBindingForToken(TextBinding, childTokenMatches[1]));\r\n\r\n                    // Reset the regular expression (since `child` was also \"reset\") and execute\r\n                    // the regular expression again on the remaining text\r\n                    reTokenMatch.lastIndex = 0;\r\n                    childTokenMatches = reTokenMatch.exec(getNodeValue(child));\r\n\r\n                    if (!childTokenMatches && DROPS_NODES_ON_CLONE) {\r\n                        fixEmptyTextNode(child);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    // FIXME: convert to for() loop - Perf!\r\n    findAllNodes(ele).forEach(node => {\r\n        let skip = false;\r\n\r\n        if (ignoredChildren.size) {\r\n            for (let ignoredParent of ignoredChildren.values()) {\r\n                if (NODE_CONTAINS_MISSES_TEXT_NODES && node.nodeType === 3) {\r\n                    if (ignoredParent.compareDocumentPosition(node) & 16) {\r\n                        skip = true;\r\n                    }\r\n                }\r\n                else if (ignoredParent.contains(node)) {\r\n                    skip = true;\r\n                }\r\n\r\n                if (skip) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        domEle = node;\r\n\r\n        if (!skip) {\r\n            // Process Element level Directives\r\n            if (node.nodeType === 1) {\r\n                directives.some(directiveIterator);\r\n            }\r\n            // TEXT nodes\r\n            else if (node.nodeType === 3) {\r\n                processTextNode(node);\r\n            }\r\n        }\r\n    });\r\n\r\n    domEle = null;\r\n\r\n\r\n    // Create the list array of node indexes for each binding processed\r\n    eleToBindings.forEach((directiveBindings, bindingEle) => {\r\n        if (ele === bindingEle) {\r\n            bindings.set([], directiveBindings);\r\n            return;\r\n        }\r\n\r\n        const path  = [];\r\n        let walkEle = bindingEle;\r\n        let parent  = walkEle.parentNode;\r\n\r\n        while (walkEle !== ele) {\r\n            path.unshift(path.indexOf.call(parent.childNodes, walkEle));\r\n            walkEle = walkEle.parentNode;\r\n            parent  = walkEle.parentNode;\r\n        }\r\n\r\n        bindings.set(path, directiveBindings);\r\n    });\r\n\r\n    eleToBindings.clear();\r\n    ignoredChildren.clear();\r\n\r\n    return bindings;\r\n}\r\n\r\n/**\r\n * Applies the bindings in the given Map to the DocumentFragment provided on input.\r\n *\r\n * @param {DocumentFragment} frag\r\n * @param {Map<Array<Number>, Array<Directive>>} bindings\r\n * @param {Array<Directive>} Directives\r\n *\r\n * @return {Array<NodeHandler>}\r\n *  An array of Node directive handlers is returned.\r\n */\r\nexport function applyBindingsToTemplateInstance(frag, bindings, Directives) {\r\n    const response = [];\r\n\r\n    bindings.forEach((directivesInstances, path) => {\r\n        const node = getNodeAt(frag, path);\r\n        if (!node) {\r\n            logError(new Error(`dom-data-bind#render(): Unable to find node!`));\r\n            return;\r\n        }\r\n\r\n        for (let i=0, t=directivesInstances.length; i < t; i++) {\r\n            response.push(directivesInstances[i].getNodeHandler(node, Directives));\r\n        }\r\n    });\r\n\r\n    return response;\r\n}\r\n\r\nfunction getNodeAt(root, path) {\r\n    if (!path.length) {\r\n        return root;\r\n    }\r\n    // FIXME: use for loop here.\r\n    arrayForEach(path, index => root = root.childNodes[index]);\r\n    return root;\r\n}\r\n\r\nfunction getArrayForNodeFromMap(map, node) {\r\n    if (!map.has(node)) {\r\n        map.set(node, []);\r\n    }\r\n    return map.get(node);\r\n}\r\n\r\n/**\r\n * Returns a node handlers for the given directive\r\n *\r\n * @param {Directive} Directive\r\n * @param {String} tokenText\r\n *  The token text (no curly braces)\r\n *\r\n * @returns {Directive}\r\n *  Returns a Directive instance. Call `.getNodeHandler` to get a handler for a given node\r\n */\r\nfunction getTextBindingForToken(Directive, tokenText) {\r\n    tokenText = tokenText.trim();\r\n\r\n    let directiveInstances = PRIVATE.get(Directive);\r\n\r\n    if (!directiveInstances) {\r\n        directiveInstances = {};\r\n        PRIVATE.set(Directive, directiveInstances);\r\n    }\r\n\r\n    if (!directiveInstances[tokenText]) {\r\n        directiveInstances[tokenText] = new Directive(tokenText);\r\n    }\r\n\r\n    return directiveInstances[tokenText];\r\n}\r\n\r\nfunction getDirectiveForAttribute (Directive, attrName, attrValue) {\r\n    attrValue = attrValue.trim();\r\n\r\n    const directiveSignature    = `${attrName}-${ UUID }-${ attrValue }`;\r\n    let directiveInstances      = PRIVATE.get(Directive);\r\n\r\n    if (!directiveInstances) {\r\n        directiveInstances = {};\r\n        PRIVATE.set(Directive, directiveInstances);\r\n    }\r\n\r\n    if (!directiveInstances[directiveSignature]) {\r\n        directiveInstances[directiveSignature] = new Directive(attrName, attrValue);\r\n    }\r\n\r\n    return directiveInstances[directiveSignature];\r\n}\r\n\r\n/**\r\n *\r\n * @private\r\n * @param {HTMLElement} ele\r\n * @returns {boolean}\r\n */\r\nfunction onlyElementsWithAttributes(ele/*, index, arr*/) {\r\n    return ele.nodeType !== 1 || (ele.nodeType === 1 && ele.attributes.length > 0);\r\n}\r\n\r\n/**\r\n *\r\n * @private\r\n * @param {Array} resultArr\r\n * @param {HTMLElement} ele\r\n * @returns {Array}\r\n */\r\nfunction addTextNodes(resultArr, ele /*, index, arr*/) {\r\n    resultArr.push(ele);\r\n    if (ele.hasChildNodes()) {\r\n        ele = ele.firstChild;\r\n        for (;ele;) {\r\n            const nextSibling = ele.nextSibling;\r\n\r\n            // IF Text node and it has the token\r\n            if (ele.nodeType === 3 && !!ele.nodeValue && reHasDataToken.test(getNodeValue(ele))) {\r\n                resultArr.push(ele);\r\n            }\r\n\r\n            if (DROPS_NODES_ON_CLONE) {\r\n                fixEmptyTextNode(ele);\r\n            }\r\n\r\n            ele = nextSibling;\r\n        }\r\n    }\r\n    return resultArr;\r\n}\r\n\r\nfunction fixEmptyTextNode(node) {\r\n    if (node.nodeType === 3 && DROPS_NODES_ON_CLONE && !node.nodeValue) {\r\n        node.parentNode.insertBefore(createComment(\"\"), node);\r\n        node.parentNode.removeChild(node);\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n * @private\r\n * @param {HTMLElement} ele\r\n *\r\n * @return {Array<Node>}\r\n */\r\nfunction findAllNodes(ele) {\r\n    return [ele]\r\n        .concat(domFind(ele, \"*\"))\r\n        .reduce(addTextNodes, [])\r\n        .filter(onlyElementsWithAttributes);\r\n}\r\n\r\n\r\n","import Compose from \"@purtuga/common/src/jsutils/Compose.js\"\r\nimport { PRIVATE, arrayForEach, isString } from \"./utils.js\"\r\nimport { getBindingFor, applyBindingsToTemplateInstance } from \"./Template.js\"\r\nimport { render } from \"./render.js\";\r\n\r\n//======================================================================\r\n\r\n/**\r\n * Bind data to a DOM element and automatically persist changes in that data to the UI.\r\n * By default, this constructor provides interpolation of Text tokens found in the DOM\r\n * structure (represented with double curly braces: `{{ }}`). Directives can be used\r\n * by extending this constructor and adding them to the [directives]{@link DomDataBind.directives}\r\n * static property.\r\n *\r\n * @class DomDataBind\r\n * @extends Compose\r\n *\r\n * @param {String |HTMLElement} html\r\n *  The HTML element that will be view and to which `data` will be bound.\r\n *\r\n * @param {Object} data\r\n *  An object whose data will be used to bind to `html` element (once crated) .\r\n *\r\n */\r\nexport const DomDataBind = Compose.extend({\r\n    /**\r\n     * The Element whose data was bound to.\r\n     * When a string is used on input, this will be a DocumentFragment, which\r\n     * means that it could be empty if its content was inserted into DOM\r\n     */\r\n    $ele: null,\r\n\r\n    init(html, data) {\r\n        const Factory = this.getFactory();\r\n        const state = {\r\n            html,\r\n            data,\r\n            directives: Factory.directives.slice(0)\r\n        };\r\n\r\n        PRIVATE.set(this, state);\r\n\r\n        if (isString(html)) {\r\n            this.$ele = render(html, data, state.directives);\r\n            state.bindings = this.$ele._bindings;\r\n        } else {\r\n            this.$ele = html;\r\n            state.bindings = applyBindingsToTemplateInstance(html, getBindingFor(html, state.directives), state.directives);\r\n            if (data) {\r\n                this.setData(data);\r\n            }\r\n        }\r\n\r\n        this.onDestroy(() => {\r\n            arrayForEach(state.bindings, binding => binding.destroy());\r\n\r\n            delete state.data;\r\n            delete state.directives;\r\n            delete state.bindings;\r\n\r\n            Factory.getDestroyCallback(state, PRIVATE)();\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Set data on to the DOM provided during initialization.\r\n     * In most cases, you should never have the need to call this method. Data\r\n     * provided during initialization is \"live\" and changes are automatically\r\n     * reflected to dom.\r\n     */\r\n    setData(data) {\r\n        const bindings = PRIVATE.get(this).bindings;\r\n        arrayForEach(bindings, binding => binding.render(data));\r\n    }\r\n});\r\nexport default DomDataBind;\r\n\r\n/**\r\n * A list of Directives to be used.\r\n *\r\n * @name DomDataBind.directives\r\n * @type {Array}\r\n */\r\nDomDataBind.directives = [];\r\n","import Directive                from \"./Directive.js\"\r\nimport {\r\n    PRIVATE,\r\n    removeAttribute,\r\n    setAttribute,\r\n    createValueGetter,\r\n    getNodeAttrNames } from \"../utils.js\"\r\nimport {NodeHandler} from \"./NodeHandler.js\";\r\n\r\n//============================================\r\nconst attrRegExp = /^_attr\\.(.*)/;\r\n\r\nexport class AttrDirective extends Directive {\r\n    static NodeHandlerConstructor = class extends NodeHandler {\r\n        update(newValue) {\r\n            const state = PRIVATE.get(this);\r\n            const _htmlAttr = this._directive._htmlAttr;\r\n\r\n            if (this._directive.constructor._isProp) {\r\n                if (newValue !== state.value) {\r\n                    this._node[_htmlAttr] = newValue;\r\n                }\r\n            }\r\n            else {\r\n                if (newValue && state.value !== newValue) {\r\n                    setAttribute(this._node, _htmlAttr, newValue);\r\n                }\r\n                else if (state.value && !newValue) {\r\n                    removeAttribute(this._node, _htmlAttr);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    static _matches = attrRegExp;\r\n\r\n    static _isProp = false;\r\n\r\n    static has(ele) {\r\n        let directiveAttr = \"\";\r\n        getNodeAttrNames(ele).some(attr => this._matches.test(attr) && (directiveAttr = attr));\r\n        return directiveAttr;\r\n    }\r\n\r\n    init(attr, attrValue) {\r\n        this._attr              = attr;\r\n        this._tokenValueGetter  = createValueGetter((attrValue || \"\"), \"attr\");\r\n        this._htmlAttr          = (new RegExp(this.constructor._matches)).exec(attr)[1];\r\n    }\r\n}\r\n\r\nexport default AttrDirective;\r\n","/**\r\n * Check if an element has a given class\r\n *\r\n * @function domHasClass\r\n *\r\n * @param {HTMLElement} el\r\n * @param {String} cssClass\r\n *\r\n * @return {Boolean}\r\n */\r\nexport function domHasClass(el, cssClass){\r\n    if (el && cssClass) {\r\n        return el.classList.contains(cssClass);\r\n    }\r\n    return false;\r\n}\r\nexport default domHasClass;\r\n","/**\r\n * Adds class to an element\r\n *\r\n * @function domAddClass\r\n *\r\n * @param {HTMLElement} el\r\n * @param {String} cssClass\r\n *  Multiple classes can be set using spaces as a delimiter\r\n */\r\nexport function domAddClass(el, cssClass){\r\n    let classNameList = String(cssClass).trim().split(/\\s+/).map(className => className.trim());\r\n    if (el && classNameList.length) {\r\n        classNameList.forEach((cssClass) => el.classList.add(cssClass));\r\n    }\r\n}\r\nexport default domAddClass;","/**\r\n * removes a class from an element\r\n *\r\n * @function domRemoveClass\r\n *\r\n * @param {HTMLElement} el\r\n * @param {String} cssClass\r\n */\r\nexport function domRemoveClass(el, cssClass){\r\n    return el.classList.remove(cssClass);\r\n}\r\nexport default domRemoveClass;","import domHasClass      from \"@purtuga/common/src/domutils/domHasClass.js\"\r\nimport domAddClass      from \"@purtuga/common/src/domutils/domAddClass.js\"\r\nimport domRemoveClass   from \"@purtuga/common/src/domutils/domRemoveClass.js\"\r\nimport Directive        from \"./Directive.js\"\r\nimport {\r\n    PRIVATE,\r\n    createValueGetter,\r\n    hasAttribute  } from \"../utils.js\"\r\nimport {NodeHandler} from \"./NodeHandler.js\";\r\n\r\n//============================================\r\nconst DIRECTIVE = \"_class\";\r\n\r\nexport class ClassDirective extends Directive {\r\n    static NodeHandlerConstructor = class ClassDirectiveNodeHandler extends NodeHandler {\r\n        update(newClasses) {\r\n            const { _node: node } = this;\r\n            const oldClasses = PRIVATE.get(this).value || {};\r\n\r\n            Object.keys(newClasses)\r\n                .concat(Object.keys(oldClasses))\r\n                .forEach(className => {\r\n                    if (newClasses[className] && !domHasClass(node, className)) {\r\n                        domAddClass(node, className);\r\n                    }\r\n                    else if (!newClasses[className] && domHasClass(node, className)) {\r\n                        domRemoveClass(node, className);\r\n                    }\r\n                });\r\n        }\r\n    };\r\n\r\n    static has(ele) {\r\n        return hasAttribute(ele, DIRECTIVE) ? DIRECTIVE : \"\";\r\n    }\r\n\r\n    init(attr, attrValue) {\r\n        this._attr              = attr;\r\n        this._tokenValueGetter  = createValueGetter((attrValue || \"\"), \"class\");\r\n    }\r\n}\r\n\r\nexport default ClassDirective;\r\n\r\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import {Map} from \"@purtuga/common/src/jsutils/Map.js\"\r\nimport {domInsertBefore} from \"@purtuga/common/src/domutils/domInsertBefore.js\"\r\nimport {\r\n    arraySplice,\r\n    isArray,\r\n    objectKeys\r\n} from \"@purtuga/common/src/jsutils/runtime-aliases.js\"\r\nimport Directive from \"./Directive.js\"\r\nimport {\r\n    arrayForEach,\r\n    createComment,\r\n    createValueGetter,\r\n    DOM_DATA_BIND_PROP,\r\n    getAttribute,\r\n    hasAttribute,\r\n    isPureObject,\r\n    PRIVATE,\r\n    removeAttribute,\r\n    removeChild\r\n} from \"../utils\"\r\n\r\nimport {render} from \"../render.js\";\r\nimport {view} from \"../view.js\";\r\nimport {NodeHandler} from \"./NodeHandler.js\";\r\n\r\n//============================================\r\nconst EACH = Symbol(\"directive.each.setup\");\r\nconst DIRECTIVE     = \"_each\";\r\nconst KEY_DIRECTIVE = \"_key\";\r\nconst destroyBinder = binder => binder && binder._destroy();\r\nconst defaultRowKey = data => data;\r\nconst isEmptyList   = list => (isArray(list) && !list.length) || (isPureObject(list) && !objectKeys(list).length);\r\n\r\nclass EachDirectiveNodeHandler extends NodeHandler {\r\n\r\n    binders = [];\r\n\r\n    bindersByKey = new Map();\r\n\r\n    listIterator = () => this._directive.iterateOverList(this, PRIVATE.get(this).value);\r\n\r\n    init(directive, node, directives) {\r\n        super.init(directive, node, directives);\r\n        this._placeholderEle = createComment(\"directive.each\");\r\n        this._isSoleChild = hasDedicatedParent(this._node);\r\n\r\n        // create the template for the row content, which is stored in the Comment node data\r\n        this._viewTemplate = view(node.data, directives);\r\n        if (!this._viewTemplate[EACH]) {\r\n            setupViewTemplate(this._viewTemplate);\r\n        }\r\n\r\n        domInsertBefore(this._placeholderEle, node);\r\n        removeChild(node.parentNode, node);\r\n    }\r\n\r\n\r\n    update(newList) {\r\n        const state = PRIVATE.get(this);\r\n\r\n        if (newList !== state.value) {\r\n            state.value = null;\r\n\r\n            if (this.listIterator.stopWatchingAll) {\r\n                this.listIterator.stopWatchingAll();\r\n            }\r\n        }\r\n\r\n        if (!newList) {\r\n            this._directive.destroyChildBinders(this.binders, this);\r\n            return;\r\n        }\r\n\r\n        state.value = newList;\r\n\r\n        if (isEmptyList(newList) && this.binders) {\r\n            this._directive.destroyChildBinders(this.binders, this);\r\n        }\r\n        else {\r\n            this.listIterator();\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        // Support for Observables\r\n        if (this.listIterator.stopWatchingAll) {\r\n            this.listIterator.stopWatchingAll();\r\n        }\r\n        this.bindersByKey.clear();\r\n        this._directive.destroyChildBinders(this.binders, this);\r\n        super.destroy();\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Directive to loop through an array or object. In addition, it also support an\r\n * internal binding directive called `b:key`\r\n *\r\n * @class EachDirective\r\n * @extends Directive\r\n *\r\n * @example\r\n *\r\n * // Use with array:\r\n * _each=\"item of arrayList\"\r\n * _each=\"(item, index) of arrayList\"\r\n *\r\n * // Use with Object\r\n * _each=\"value of objectList\"\r\n * _each=\"(value, key) of objectList\"\r\n */\r\nexport class EachDirective extends Directive {\r\n    static NodeHandlerConstructor = EachDirectiveNodeHandler;\r\n\r\n    static has(ele) {\r\n        return hasAttribute(ele, DIRECTIVE) ? DIRECTIVE : \"\";\r\n    }\r\n\r\n    static manages() { return true; }\r\n\r\n    init(attr, attrValue) {\r\n        const [ iteratorArgs, listVar ] = parseDirectiveValue((attrValue || \"\").trim());\r\n        this._attr              = attr;\r\n        this._iteratorArgs      = iteratorArgs;\r\n        this._tokenValueGetter  = createValueGetter((listVar || \"\"), \"each\");\r\n    }\r\n\r\n    /**\r\n     * Destroy the binder instances and remove Elements from DOM.\r\n     *\r\n     * @param binders\r\n     * @param handler\r\n     */\r\n    destroyChildBinders(binders, handler) {\r\n        if (!binders || !binders.length) {\r\n            return;\r\n        }\r\n\r\n        binders = binders.splice(0);\r\n\r\n        if (handler._isSoleChild) { // Supper fast way to just clear the UI\r\n            const parentEle = handler._placeholderEle.parentNode;\r\n            parentEle.textContent = \"\";\r\n            parentEle.appendChild(handler._placeholderEle);\r\n            setTimeout(() => {\r\n                arrayForEach(binders, binder => binder._destroy());\r\n            });\r\n        }\r\n        else {\r\n            arrayForEach(binders, binder => binder._destroy());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns an object (`dataObj` if provided on input) with additional keys - each\r\n     * one being the argNames that the user defined in their HTML `_each` template.\r\n     *\r\n     * It essentially matches up two array by using the keys from one array and mapping to\r\n     * values from the second array at exactly the same location.\r\n     * Example:\r\n     *\r\n     *      _each=\"item in arrayList\"\r\n     *      arrayList = [ \"value 1\" ]\r\n     *\r\n     *      // Array Keys           // Array values             // result: object\r\n     *      // Defined in the       // Data in actual           // Matches the key\r\n     *      // template             // Array                    // to the data\r\n     *      //-------------------   //-----------------         //---------------------\r\n     *      [                       [                   ===     {\r\n     *          \"item\"                  \"value 1\"       ===         item: \"value1\"\r\n     *      ]                       ]                   ===     }\r\n     *\r\n     * @param {Array} values\r\n     * @param {Object} [dataObj]\r\n     *\r\n     * @returns {Object}\r\n     */\r\n    getDataForIteration(values, dataObj) {\r\n        return this._iteratorArgs.reduce(\r\n            (rowData, argName) => {\r\n                rowData[argName] = values.shift();\r\n                return rowData;\r\n            },\r\n            dataObj || {}\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Iterates over a new set (list) and eitehr updates or builds out new elements for each item\r\n     * in that list.\r\n     *\r\n     * @param handler\r\n     * @param newData\r\n     */\r\n    iterateOverList(handler, newData) {\r\n        /** @type NodeHandlerState */\r\n        const state = PRIVATE.get(handler);\r\n        let isDataArray             = isArray(newData);\r\n        let iterationDataList;\r\n\r\n\r\n        if (isDataArray) {\r\n            isDataArray = true;\r\n            iterationDataList = newData;\r\n        }\r\n        else if (isPureObject(newData)) {\r\n            iterationDataList = objectKeys(newData);\r\n        } else {\r\n            return;\r\n        }\r\n\r\n        const currentBinders        = handler.binders;\r\n        const binderToBeDestroyed   = new Map();    // Will be recycled\r\n        const totalItems            = iterationDataList.length;\r\n        const { usesKey, getKey }   = handler._viewTemplate[EACH];\r\n\r\n        // Loop through each piece of data and build a DOM binder for it.\r\n        // The data should be in sync with `currentBinders`\r\n        for (let i = 0; i < totalItems; i++) {\r\n            let rowData = { // FIXME: can this object creation be avoided? For Arrays - it should be possible. Objects - not sure.\r\n                $root: state.data.$root || state.data,\r\n                $parent: state.data,\r\n                $data: state.data.$data || state.data\r\n            };\r\n\r\n            // Adjust the rowData to have the `key` and/or `value` and `index` as top level items\r\n            // These are added to the rowData object just created above.\r\n            if (isDataArray) {\r\n                this.getDataForIteration([ iterationDataList[i], i ], rowData);\r\n            }\r\n            else {\r\n                this.getDataForIteration([ newData[ iterationDataList[i] ], iterationDataList[i], i ], rowData);\r\n            }\r\n\r\n            const rowKey = getKey(\r\n                usesKey\r\n                    ? rowData                               // => Use rowData created above - getKey() will run a value getter on it.\r\n                    : isDataArray\r\n                        ? iterationDataList[i]              // => Use the object from the newData\r\n                        : newData[ iterationDataList[i] ]   // => Use the Object key\r\n            );\r\n\r\n            // If a binder currently exists, then see if it is the one previously\r\n            // created for this row's data\r\n            if (currentBinders[i] && currentBinders[i]._loop.rowKey === rowKey) {\r\n                currentBinders[i][DOM_DATA_BIND_PROP].setData(rowData);\r\n                continue;\r\n            }\r\n\r\n            // If there is a binder at the current position, then its not the one need.\r\n            // move it to the `to be destroyed` list.\r\n            if (currentBinders[i]) {\r\n                currentBinders[i][DOM_DATA_BIND_PROP].recover();\r\n                binderToBeDestroyed.set(\r\n                    currentBinders[i]._loop.rowKey,\r\n                    currentBinders[i]\r\n                );\r\n                currentBinders[i] = null;\r\n            }\r\n\r\n            // Do we have a rowBinder for this data item in the existing list,\r\n            // but perhaps at a different location? Get it and move it to the new position.\r\n            // Old position in the existing array is set to null (avoids mutating array)\r\n            let binder = handler.bindersByKey.get(rowKey);\r\n\r\n            if (binder) {\r\n                if (binder._loop.pos !== null && currentBinders[binder._loop.pos] === binder) {\r\n                    currentBinders[binder._loop.pos] = null;\r\n                }\r\n            } else {\r\n                binder = binderToBeDestroyed.get(rowKey);\r\n\r\n                if (binder) {\r\n                    binderToBeDestroyed.delete(rowKey);\r\n                }\r\n            }\r\n\r\n            if (binder) {\r\n                currentBinders[i] = binder;\r\n                binder._loop.pos = i;\r\n                currentBinders[i][DOM_DATA_BIND_PROP].recover();\r\n                positionRowInDom(currentBinders, i, handler._placeholderEle);\r\n                currentBinders[i][DOM_DATA_BIND_PROP].setData(rowData);\r\n                continue;\r\n            }\r\n\r\n            // Create new binder\r\n            // First check if we can recycle one that is tagged to be destroyed.\r\n            // if not, then create a new one.\r\n            if (binderToBeDestroyed.size) {\r\n                const [recycleBinderKey, recycleBinder] = binderToBeDestroyed.entries().next().value;\r\n                binder = recycleBinder;\r\n                binder[DOM_DATA_BIND_PROP].setData(rowData);\r\n                binderToBeDestroyed.delete(recycleBinderKey);\r\n                binder._loop.rowKey = rowKey;\r\n                binder._loop.pos = i;\r\n            } else {\r\n                binder = render(handler._viewTemplate, rowData, handler._directives);\r\n                binder._destroy = destroyRowElement;\r\n                binder._handler = handler; // needed by destroyRowElement()\r\n                binder._loop  = { rowKey, pos: i };\r\n            }\r\n\r\n            currentBinders[i] = binder;\r\n            handler.bindersByKey.set(rowKey, binder);\r\n            positionRowInDom(currentBinders, i, handler._placeholderEle);\r\n        }\r\n\r\n        // Destroy binders that were not used\r\n        if (binderToBeDestroyed.size) {\r\n            arrayForEach(binderToBeDestroyed.values(), destroyBinder);\r\n            binderToBeDestroyed.clear();\r\n        }\r\n\r\n        // remove any left over items in currentBinders where is no longer part of newData\r\n        if (totalItems < currentBinders.length) {\r\n            arrayForEach(arraySplice(currentBinders, totalItems), destroyBinder);\r\n        }\r\n    }\r\n}\r\n\r\nfunction setupViewTemplate (viewTemplate) {\r\n    if (!viewTemplate[EACH]) {\r\n        viewTemplate[EACH] = {\r\n            usesKey: false,\r\n            getKey: defaultRowKey\r\n        };\r\n        const firstChildNode = viewTemplate.ele.content.firstChild;\r\n\r\n        if (\r\n            firstChildNode &&\r\n            firstChildNode.hasAttribute &&\r\n            hasAttribute(firstChildNode, KEY_DIRECTIVE)\r\n        ) {\r\n            viewTemplate[EACH].usesKey = true;\r\n            viewTemplate[EACH].getKey = createValueGetter(getAttribute(firstChildNode, KEY_DIRECTIVE), \"each.key\");\r\n            removeAttribute(firstChildNode, KEY_DIRECTIVE);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction positionRowInDom(currentBinders, binderIndex, defaultInsertMarkerElement) {\r\n    const binder = currentBinders[binderIndex];\r\n\r\n    // Get all original nodes from binder back to the DocumentFragment\r\n    binder[DOM_DATA_BIND_PROP].recover();\r\n\r\n    // If we have a binder after this one, then do an insertBefore using the first node of the nextSibling\r\n    if (currentBinders[binderIndex + 1]) {\r\n        domInsertBefore(binder, currentBinders[binderIndex + 1][DOM_DATA_BIND_PROP]._childNodes[0]);\r\n    } else {\r\n        // Just place the binder before the marker\r\n        domInsertBefore(binder, defaultInsertMarkerElement);\r\n    }\r\n}\r\n\r\nfunction destroyRowElement () {\r\n    // remove all elements/nodes of this row from DOM\r\n    this[DOM_DATA_BIND_PROP].recover();\r\n\r\n    if (this._loop.rowKey) {\r\n        this._handler.bindersByKey.delete(this._loop.rowKey);\r\n    }\r\n\r\n    this[DOM_DATA_BIND_PROP].destroy();\r\n}\r\n\r\nfunction parseDirectiveValue(attrValue) {\r\n    let matches = /\\(?(.+?)\\)?\\W?(?:of|in)\\W(.*)/.exec(attrValue);\r\n    if (matches) {\r\n        matches = matches.slice(1);\r\n        matches[0] = matches[0].split(/,/).map(argName => String(argName).trim());\r\n        return matches;\r\n    }\r\n    return [];\r\n}\r\n\r\nfunction hasDedicatedParent(node) {\r\n    return Array.prototype.every.call(node.parentNode.childNodes, childNode => {\r\n        return childNode === node || (childNode.nodeType === 3 && !childNode.textContent.trim());\r\n    });\r\n}\r\n\r\n\r\nexport default EachDirective;\r\n","import Directive                from \"./Directive.js\"\r\nimport {\r\n    PRIVATE,\r\n    createValueGetter,\r\n    hasAttribute } from \"../utils.js\"\r\nimport {NodeHandler} from \"./NodeHandler.js\";\r\n//============================================\r\nconst DIRECTIVE = \"_html\";\r\n\r\nexport class HtmlDirective extends Directive {\r\n    static NodeHandlerConstructor = class extends NodeHandler {\r\n        update(newValue) {\r\n            if (newValue === PRIVATE.get(this).value) {\r\n                return;\r\n            }\r\n\r\n            this._node.innerHTML = newValue;\r\n        }\r\n    };\r\n\r\n    static has(ele) {\r\n        return hasAttribute(ele, DIRECTIVE) ? DIRECTIVE : \"\";\r\n    }\r\n\r\n    init(attr, attrValue) {\r\n        this._attr              = attr;\r\n        this._tokenValueGetter  = createValueGetter((attrValue || \"\"), \"html\");\r\n    }\r\n}\r\n\r\nexport default HtmlDirective;\r\n\r\n","import Directive    from \"./Directive.js\"\r\nimport {\r\n    PRIVATE,\r\n    DOM_DATA_BIND_PROP,\r\n    hasAttribute,\r\n    createComment,\r\n    removeChild,\r\n    createValueGetter } from \"../utils.js\"\r\nimport {render} from \"../render.js\"\r\nimport {NodeHandler} from \"./NodeHandler.js\";\r\nimport {domInsertBefore} from \"@purtuga/common/src/domutils/domInsertBefore.js\"\r\n\r\n//============================================\r\nconst DIRECTIVE = \"_if\";\r\n\r\nexport class IfDirective extends Directive {\r\n    static NodeHandlerConstructor = class extends NodeHandler {\r\n\r\n        _renderedEle = null;\r\n\r\n        _renderTemplate = this._node.data;\r\n\r\n        init(...args) {\r\n            super.init(...args);\r\n            this._placeholderEle = createComment(\"directive.if\");\r\n            domInsertBefore(this._placeholderEle, this._node);\r\n            removeChild(this._node.parentNode, this._node);\r\n        }\r\n        update(showElement) {\r\n            const state = PRIVATE.get(this);\r\n\r\n            // If there is no change in Element visibility, then only update its data.\r\n            if (state.value === showElement) {\r\n                if (this._renderedEle) {\r\n                    this._renderedEle[DOM_DATA_BIND_PROP].setData(state.data);\r\n                }\r\n                return;\r\n            }\r\n\r\n            if (showElement && !this._renderedEle) {\r\n                this._renderedEle = render(this._renderTemplate, state.data, this._directives);\r\n                domInsertBefore(this._renderedEle, this._placeholderEle);\r\n            } else if (!showElement)  {\r\n                this.teardown();\r\n            }\r\n        }\r\n\r\n        teardown() {\r\n            if (this._renderedEle) {\r\n                this._renderedEle[DOM_DATA_BIND_PROP].recover();\r\n                this._renderedEle[DOM_DATA_BIND_PROP].destroy();\r\n                this._renderedEle = null;\r\n            }\r\n        }\r\n\r\n        destroy() {\r\n            this.teardown();\r\n            super.destroy();\r\n        }\r\n    };\r\n\r\n    static has(ele) {\r\n        return hasAttribute(ele, DIRECTIVE) ? DIRECTIVE : \"\";\r\n    }\r\n\r\n    static manages() { return true; }\r\n\r\n    init(attr, attrValue) {\r\n        this._attr              = attr;\r\n        this._tokenValueGetter  = createValueGetter((attrValue || \"\"), \"if\");\r\n    }\r\n}\r\n\r\nexport default IfDirective;\r\n","/**\r\n * Adds an event handler to a DOM element and returns back an\r\n * object that allows for removal of the event.\r\n *\r\n * @function domAddEventListener\r\n *\r\n * @param {HTMLElement} ele\r\n * @param {String} event\r\n *  The event to listen to (ex. `click`). Multiple events can be defined\r\n *  by separating them with whitespace\r\n * @param {Function} callback\r\n * @param {Boolean} [capture]\r\n *\r\n * @return DOMEventListener\r\n *\r\n * @example\r\n *\r\n * var listener = domAddEventHandler(myEle, \"click\", function(){});\r\n * ...\r\n * listener.remove();\r\n */\r\nexport function domAddEventListener(ele, event, callback, capture) {\r\n    let events      = event.split(/\\s+/);\r\n    let evListeners = {};\r\n\r\n    events.forEach(evName => {\r\n        ele.addEventListener(evName, callback, capture);\r\n        evListeners[evName] = {\r\n            remove: () => ele.removeEventListener(evName, callback, capture)\r\n        }\r\n    });\r\n\r\n    /**\r\n     * A DOM Event listener.\r\n     *\r\n     * @typedef {Object} DOMEventListener\r\n     *\r\n     * @property {Function} remove\r\n     * @property {Object} listeners\r\n     *  List of listeners that were bound to the DOM element. Each listeners has a\r\n     *  corresponding `.remove()` method.\r\n     */\r\n    return Object.create({\r\n        listeners: evListeners,\r\n        remove: function () {\r\n            events.forEach(evName => evListeners[evName].remove());\r\n        }\r\n    });\r\n}\r\nexport default domAddEventListener;\r\n","import domAddEventListener  from \"@purtuga/common/src/domutils/domAddEventListener.js\"\r\nimport Directive            from \"./Directive.js\"\r\nimport {\r\n    PRIVATE,\r\n    escapeString,\r\n    createValueGetter,\r\n    getNodeAttrNames,\r\n    logError,\r\n    parseDirectiveString\r\n} from \"../utils.js\"\r\nimport {NodeHandler} from \"./NodeHandler.js\";\r\nimport {objectKeys} from \"@purtuga/common/src/jsutils/runtime-aliases.js\";\r\n\r\n\r\n//============================================\r\nconst DIRECTIVE             = \"_on.\";\r\nconst matchesDirective      = new RegExp(`^${ escapeString(DIRECTIVE) }(.*)`);\r\nconst isNumber = /^\\d+$/;\r\nconst keyAliases = {\r\n    \"13\": \"enter\",\r\n    \"27\": \"esc\",\r\n    \"9\":  \"tab\",\r\n    \"46\": \"delete\",\r\n    \"32\": \"space\",\r\n    \"38\": \"up\",\r\n    \"40\": \"down\",\r\n    \"37\": \"left\",\r\n    \"39\": \"right\"\r\n};\r\nconst keyCodesAliases = Object.values(keyAliases);\r\n\r\nclass OnDirectiveNodeHandler extends NodeHandler {\r\n\r\n    init(...args) {\r\n        super.init(...args);\r\n        this.setup();\r\n    }\r\n\r\n    handleEvent(domEv) {\r\n        const {hasModifiers, modifiers} = this._directive._info;\r\n        const whichKey = domEv.which;\r\n\r\n        // If this is a Keyboard event and the directive has modifiers that filters\r\n        // out the type of events to which the callback should be invoked, then\r\n        // only proceed if they match\r\n        if (\r\n            this._directive._filter &&\r\n            domEv instanceof KeyboardEvent &&\r\n            !modifiers[whichKey] &&\r\n            !modifiers[keyAliases[whichKey]]\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        const state = PRIVATE.get(this);\r\n\r\n        let tokenValue;\r\n        let returnValue;\r\n        state.data.$ev = domEv;\r\n\r\n        // The call to the token value getter is done with the context of the HTML Node.\r\n        try {\r\n            tokenValue = this._directive._tokenValueGetter.call(this._node, state.data);\r\n        }\r\n        catch(e) {\r\n            logError(e);\r\n            return;\r\n        }\r\n\r\n        delete state.data.$ev;\r\n\r\n        if (\"function\" === typeof tokenValue) {\r\n            returnValue = tokenValue.call(this._node, domEv);\r\n        }\r\n        else if (tokenValue && \"function\" === tokenValue.handleEvent) {\r\n            // DOM EventHandler interface: object having a `handleEvent` method\r\n            returnValue = tokenValue.handleEvent(domEv);\r\n        }\r\n\r\n        // Handle post callback modifiers\r\n        if (hasModifiers) {\r\n            if (modifiers.once) {\r\n                this.teardown();\r\n            }\r\n            if (modifiers.stop) {\r\n                domEv.stopPropagation();\r\n            }\r\n            if (modifiers.prevent) {\r\n                domEv.preventDefault();\r\n            }\r\n        }\r\n\r\n        return returnValue;\r\n    }\r\n\r\n    setup() {\r\n        this._evListener = domAddEventListener(\r\n            this._node,\r\n            this._directive._eventName,\r\n            this\r\n        );\r\n    }\r\n\r\n    teardown() {\r\n        if (this._evListener) {\r\n            this._evListener.remove();\r\n            this._evListener = null;\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this.teardown();\r\n        super.destroy();\r\n    }\r\n}\r\n\r\nexport class OnDirective extends Directive {\r\n    static NodeHandlerConstructor = OnDirectiveNodeHandler;\r\n\r\n    static has(ele) {\r\n        let directiveAttr = \"\";\r\n        getNodeAttrNames(ele).some(attr => matchesDirective.test(attr) && (directiveAttr = attr));\r\n        return directiveAttr;\r\n    }\r\n\r\n    init(directiveAttr, attrValue) {\r\n        this._attr              = directiveAttr;\r\n        this._info              = parseDirectiveString((new RegExp(matchesDirective)).exec(directiveAttr)[1]);\r\n        this._eventName         = this._info.value;\r\n        this._tokenValueGetter  = createValueGetter((attrValue || \"\"), \"on\");\r\n\r\n        // Set the flag that indicates there are Events should be filtered\r\n        const modifiers = this._info.modifiers;\r\n        this._filter = objectKeys(modifiers).some(modifier => (\r\n            keyCodesAliases.indexOf(modifier) !== -1 || isNumber.test(modifier)\r\n        ));\r\n    }\r\n\r\n    // takes care of only storing the data on the node, for when the event is triggered\r\n    render(handler, node, data) {\r\n        let state = PRIVATE.get(handler);\r\n\r\n        if (!state) {\r\n            state = {\r\n                data:       { $data: {} },\r\n                tracker:    () => this.render(handler, node, state.data)\r\n            };\r\n            PRIVATE.set(handler, state);\r\n        }\r\n\r\n        if (data) {\r\n            if (data.$data) {\r\n                state.data = data;\r\n            }\r\n            else {\r\n                state.data.$data = data;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default OnDirective;\r\n","import AttrDirective from \"./attr-directive.js\"\r\n\r\n//==========================================================\r\n\r\nconst matchRegExp = /^_prop\\.(.*)/;\r\nexport class PropDirective extends AttrDirective {\r\n    static get _matches() { return matchRegExp; }\r\n    static _isProp() { return true; }\r\n}\r\nexport default PropDirective;\r\n","import Directive        from \"./Directive.js\"\r\nimport {\r\n    createValueGetter,\r\n    hasAttribute    }   from \"../utils.js\"\r\nimport {NodeHandler} from \"./NodeHandler.js\";\r\n\r\n//============================================\r\nconst DIRECTIVE             = \"_show\";\r\nconst HIDDEN                = \"none\";\r\n\r\nexport class ShowDirective extends Directive {\r\n    static NodeHandlerConstructor = class extends NodeHandler {\r\n        init(...args) {\r\n            super.init(...args);\r\n            this._origDisplayStyle = this._node.style.display || \"\";\r\n        }\r\n        update(newValue) {\r\n            const eleStyleList = this._node.style;\r\n\r\n            if (newValue) {\r\n                eleStyleList.display = this._origDisplayStyle;\r\n            }\r\n            else if (eleStyleList.display !== HIDDEN)  {\r\n                eleStyleList.display = HIDDEN;\r\n            }\r\n        }\r\n    };\r\n\r\n    static has(ele) {\r\n        return hasAttribute(ele, DIRECTIVE) ? DIRECTIVE : \"\";\r\n    }\r\n\r\n    init(attr, attrValue) {\r\n        this._attr              = attr;\r\n        this._tokenValueGetter  = createValueGetter((attrValue || \"\"), \"show\");\r\n    }\r\n}\r\n\r\nexport default ShowDirective;","/**\r\n * Sets styles on an element\r\n *\r\n * @function domSetStyle\r\n *\r\n * @param {HTMLElement} el\r\n * @param {Object} styles\r\n *\r\n * @example\r\n *\r\n * domSetStyle(document.body, {\"background-color\", \"yellow\"});\r\n */\r\nexport function domSetStyle(el, styles){\r\n    if (!el || typeof styles !== \"object\"){\r\n        return;\r\n    }\r\n    Object.keys(styles).forEach(function(prop){\r\n        el.style[prop] = styles[prop];\r\n    });\r\n}\r\nexport default domSetStyle;\r\n","import {\r\n    createValueGetter,\r\n    hasAttribute\r\n}   from \"../utils.js\"\r\nimport Directive        from \"./Directive.js\"\r\nimport {NodeHandler} from \"./NodeHandler.js\";\r\nimport {domSetStyle} from \"@purtuga/common/src/domutils/domSetStyle.js\"\r\n\r\n//============================================\r\nconst DIRECTIVE = \"_style\";\r\n\r\nexport class StyleDirective extends Directive {\r\n    static NodeHandlerConstructor = class extends NodeHandler {\r\n        update(newValue) {\r\n            domSetStyle(this._node, newValue);\r\n        }\r\n    };\r\n\r\n    static has(ele) {\r\n        return hasAttribute(ele, DIRECTIVE) ? DIRECTIVE : \"\";\r\n    }\r\n\r\n\r\n    init(attr, attrValue) {\r\n        this._attr              = attr;\r\n        this._tokenValueGetter  = createValueGetter((attrValue || \"\"), \"style\");\r\n    }\r\n}\r\n\r\nexport default StyleDirective;","import {DomDataBind}        from \"./DomDataBind.js\"\r\nimport {render}             from \"./render.js\"\r\nimport {view}               from \"./view.js\";\r\nimport {Directive}          from \"./directives/Directive.js\"\r\nimport * as directives   from \"./directives/index.js\";\r\n\r\n//----------------------------------------------------------------------\r\n\r\nconst DomDataBindAll = DomDataBind.extend();\r\nconst allDirectives = [directives.EachDirective, directives.IfDirective];\r\n\r\nObject.keys(directives).forEach(directiveName => {\r\n    if (allDirectives.indexOf(directives[directiveName]) === -1) {\r\n        allDirectives.push(directives[directiveName]);\r\n    }\r\n});\r\n\r\nDomDataBindAll.directives = allDirectives;\r\n\r\nexport * from \"./directives/index.js\"\r\nexport default DomDataBindAll;\r\nexport {\r\n    DomDataBindAll,\r\n    DomDataBind,\r\n    render,\r\n    view,\r\n    allDirectives,\r\n    directives,\r\n    Directive\r\n};"],"sourceRoot":""}